[{
  "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1147,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>protocol DataConvertible<\/Declaration>",
        "key.bodylength" : 52,
        "key.bodyoffset" : 45,
        "key.column" : 10,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DataConvertible<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 79,
        "key.line" : 3,
        "key.modulename" : "Storage",
        "key.name" : "DataConvertible",
        "key.namelength" : 15,
        "key.nameoffset" : 28,
        "key.offset" : 19,
        "key.parsed_declaration" : "protocol DataConvertible",
        "key.parsed_scope.end" : 6,
        "key.parsed_scope.start" : 3,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init?(_ data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>)<\/Declaration>",
            "key.column" : 5,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 19,
            "key.line" : 4,
            "key.modulename" : "Storage",
            "key.name" : "init(_:)",
            "key.namelength" : 19,
            "key.nameoffset" : 50,
            "key.offset" : 50,
            "key.parsed_declaration" : "init?(_ data: Data)",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage15DataConvertibleP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage15DataConvertiblePAAs27ExpressibleByBooleanLiteralRzrlEyxSg10Foundation0B0Vcfc\">init?(_: Data)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage15DataConvertiblePAAs27ExpressibleByIntegerLiteralRzrlEyxSg10Foundation0B0Vcfc\">init?(_: Data)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DataConvertible> (Self.Type) -> (Data) -> Self?",
            "key.typeusr" : "$syxSg10Foundation4DataVcD",
            "key.usr" : "s:7Storage15DataConvertiblePyxSg10Foundation0B0Vcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 90,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.line" : 5,
            "key.modulename" : "Storage",
            "key.name" : "data",
            "key.namelength" : 4,
            "key.nameoffset" : 78,
            "key.offset" : 74,
            "key.parsed_declaration" : "var data: Data",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage15DataConvertibleP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage15DataConvertiblePAAE4data10Foundation0B0Vvp\">data<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Data",
            "key.typeusr" : "$s10Foundation4DataVD",
            "key.usr" : "s:7Storage15DataConvertibleP4data10Foundation0B0Vvp"
          }
        ],
        "key.typename" : "DataConvertible.Type",
        "key.typeusr" : "$s7Storage15DataConvertible_pmD",
        "key.usr" : "s:7Storage15DataConvertibleP"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol DataConvertible<\/Declaration>",
        "key.bodylength" : 63,
        "key.bodyoffset" : 127,
        "key.column" : 10,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DataConvertible<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 91,
        "key.line" : 3,
        "key.modulename" : "Storage",
        "key.name" : "DataConvertible",
        "key.namelength" : 15,
        "key.nameoffset" : 110,
        "key.offset" : 100,
        "key.parsed_declaration" : "extension DataConvertible",
        "key.parsed_scope.end" : 10,
        "key.parsed_scope.start" : 8,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 40,
            "key.bodyoffset" : 148,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 57,
            "key.line" : 9,
            "key.modulename" : "Storage",
            "key.name" : "data",
            "key.namelength" : 4,
            "key.nameoffset" : 136,
            "key.offset" : 132,
            "key.parsed_declaration" : "var data: Data",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage15DataConvertibleP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage15DataConvertibleP4data10Foundation0B0Vvp\">data<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Data",
            "key.typeusr" : "$s10Foundation4DataVD",
            "key.usr" : "s:7Storage15DataConvertiblePAAE4data10Foundation0B0Vvp"
          }
        ],
        "key.typename" : "DataConvertible.Type",
        "key.typeusr" : "$s7Storage15DataConvertible_pmD",
        "key.usr" : "s:7Storage15DataConvertibleP"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol DataConvertible<\/Declaration>",
        "key.bodylength" : 262,
        "key.bodyoffset" : 260,
        "key.column" : 10,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DataConvertible<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 330,
        "key.line" : 3,
        "key.modulename" : "Storage",
        "key.name" : "DataConvertible",
        "key.namelength" : 15,
        "key.nameoffset" : 203,
        "key.offset" : 193,
        "key.parsed_declaration" : "extension DataConvertible where Self: ExpressibleByBooleanLiteral",
        "key.parsed_scope.end" : 21,
        "key.parsed_scope.start" : 12,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>init?(_ data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>)<\/Declaration>",
            "key.bodylength" : 234,
            "key.bodyoffset" : 286,
            "key.column" : 5,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 256,
            "key.line" : 13,
            "key.modulename" : "Storage",
            "key.name" : "init(_:)",
            "key.namelength" : 19,
            "key.nameoffset" : 265,
            "key.offset" : 265,
            "key.parsed_declaration" : "init?(_ data: Data)",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 13,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage15DataConvertibleP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage15DataConvertiblePyxSg10Foundation0B0Vcfc\">init?(_: Data)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage15DataConvertiblePAAs27ExpressibleByIntegerLiteralRzrlEyxSg10Foundation0B0Vcfc\">init?(_: Data)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var value: <Type usr=\"s:7Storage15DataConvertiblePAAs27ExpressibleByBooleanLiteralRzrlE4Selfxmfp\">Self<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage15DataConvertiblePAAs27ExpressibleByBooleanLiteralRzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 23,
                "key.line" : 14,
                "key.modulename" : "Storage",
                "key.name" : "value",
                "key.namelength" : 5,
                "key.nameoffset" : 299,
                "key.offset" : 295,
                "key.parsed_declaration" : "var value: Self = false",
                "key.parsed_scope.end" : 14,
                "key.parsed_scope.start" : 14,
                "key.reusingastcontext" : false,
                "key.typename" : "Self",
                "key.typeusr" : "$sxD",
                "key.usr" : "s:7Storage15DataConvertiblePAAs27ExpressibleByBooleanLiteralRzrlEyxSg10Foundation0B0Vcfc5valueL_xvp"
              }
            ],
            "key.typename" : "<Self where Self : DataConvertible, Self : ExpressibleByBooleanLiteral> (Self.Type) -> (Data) -> Self?",
            "key.typeusr" : "$syxSg10Foundation4DataVcD",
            "key.usr" : "s:7Storage15DataConvertiblePAAs27ExpressibleByBooleanLiteralRzrlEyxSg10Foundation0B0Vcfc"
          }
        ],
        "key.typename" : "DataConvertible.Type",
        "key.typeusr" : "$s7Storage15DataConvertible_pmD",
        "key.usr" : "s:7Storage15DataConvertibleP"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol DataConvertible<\/Declaration>",
        "key.bodylength" : 258,
        "key.bodyoffset" : 592,
        "key.column" : 10,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DataConvertible<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 326,
        "key.line" : 3,
        "key.modulename" : "Storage",
        "key.name" : "DataConvertible",
        "key.namelength" : 15,
        "key.nameoffset" : 535,
        "key.offset" : 525,
        "key.parsed_declaration" : "extension DataConvertible where Self: ExpressibleByIntegerLiteral",
        "key.parsed_scope.end" : 32,
        "key.parsed_scope.start" : 23,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>init?(_ data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>)<\/Declaration>",
            "key.bodylength" : 230,
            "key.bodyoffset" : 618,
            "key.column" : 5,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 252,
            "key.line" : 24,
            "key.modulename" : "Storage",
            "key.name" : "init(_:)",
            "key.namelength" : 19,
            "key.nameoffset" : 597,
            "key.offset" : 597,
            "key.parsed_declaration" : "init?(_ data: Data)",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 24,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage15DataConvertibleP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage15DataConvertiblePyxSg10Foundation0B0Vcfc\">init?(_: Data)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage15DataConvertiblePAAs27ExpressibleByBooleanLiteralRzrlEyxSg10Foundation0B0Vcfc\">init?(_: Data)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var value: <Type usr=\"s:7Storage15DataConvertiblePAAs27ExpressibleByIntegerLiteralRzrlE4Selfxmfp\">Self<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage15DataConvertiblePAAs27ExpressibleByIntegerLiteralRzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 19,
                "key.line" : 25,
                "key.modulename" : "Storage",
                "key.name" : "value",
                "key.namelength" : 5,
                "key.nameoffset" : 631,
                "key.offset" : 627,
                "key.parsed_declaration" : "var value: Self = 0",
                "key.parsed_scope.end" : 25,
                "key.parsed_scope.start" : 25,
                "key.reusingastcontext" : false,
                "key.typename" : "Self",
                "key.typeusr" : "$sxD",
                "key.usr" : "s:7Storage15DataConvertiblePAAs27ExpressibleByIntegerLiteralRzrlEyxSg10Foundation0B0Vcfc5valueL_xvp"
              }
            ],
            "key.typename" : "<Self where Self : DataConvertible, Self : ExpressibleByIntegerLiteral> (Self.Type) -> (Data) -> Self?",
            "key.typeusr" : "$syxSg10Foundation4DataVcD",
            "key.usr" : "s:7Storage15DataConvertiblePAAs27ExpressibleByIntegerLiteralRzrlEyxSg10Foundation0B0Vcfc"
          }
        ],
        "key.typename" : "DataConvertible.Type",
        "key.typeusr" : "$s7Storage15DataConvertible_pmD",
        "key.usr" : "s:7Storage15DataConvertibleP"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Bool : <Type usr=\"s:s8SendableP\">Sendable<\/Type><\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 886,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A value type whose instances are either `true` or `false`.\n\n`Bool` represents Boolean values in Swift. Create instances of `Bool` by\nusing one of the Boolean literals `true` or `false`, or by assigning the\nresult of a Boolean method or operation to a variable or constant.\n\n    var godotHasArrived = false\n\n    let numbers = 1...5\n    let containsTen = numbers.contains(10)\n    print(containsTen)\n    \/\/ Prints \"false\"\n\n    let (a, b) = (100, 101)\n    let aFirst = a < b\n    print(aFirst)\n    \/\/ Prints \"true\"\n\nSwift uses only simple Boolean values in conditional contexts to help avoid\naccidental programming errors and to help maintain the clarity of each\ncontrol statement. Unlike in other programming languages, in Swift, integers\nand strings cannot be used where a Boolean value is required.\n\nFor example, the following code sample does not compile, because it\nattempts to use the integer `i` in a logical context:\n\n    var i = 5\n    while i {\n        print(i)\n        i -= 1\n    }\n    \/\/ error: Cannot convert value of type 'Int' to expected condition type 'Bool'\n\nThe correct approach in Swift is to compare the `i` value with zero in the\n`while` statement.\n\n    while i != 0 {\n        print(i)\n        i -= 1\n    }\n\nUsing Imported Boolean values\n=============================\n\nThe C `bool` and `Boolean` types and the Objective-C `BOOL` type are all\nbridged into Swift as `Bool`. The single `Bool` type in Swift guarantees\nthat functions, methods, and properties imported from C and Objective-C\nhave a consistent type interface.",
        "key.doc.declaration" : "@frozen struct Bool : Sendable",
        "key.doc.discussion" : [
          {
            "Para" : "`Bool` represents Boolean values in Swift. Create instances of `Bool` by using one of the Boolean literals `true` or `false`, or by assigning the result of a Boolean method or operation to a variable or constant."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Swift uses only simple Boolean values in conditional contexts to help avoid accidental programming errors and to help maintain the clarity of each control statement. Unlike in other programming languages, in Swift, integers and strings cannot be used where a Boolean value is required."
          },
          {
            "Para" : "For example, the following code sample does not compile, because it attempts to use the integer `i` in a logical context:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The correct approach in Swift is to compare the `i` value with zero in the `while` statement."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The C `bool` and `Boolean` types and the Objective-C `BOOL` type are all bridged into Swift as `Bool`. The single `Bool` type in Swift guarantees that functions, methods, and properties imported from C and Objective-C have a consistent type interface."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Bool<\/Name><USR>s:Sb<\/USR><Declaration>@frozen struct Bool : Sendable<\/Declaration><CommentParts><Abstract><Para>A value type whose instances are either <codeVoice>true<\/codeVoice> or <codeVoice>false<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para><codeVoice>Bool<\/codeVoice> represents Boolean values in Swift. Create instances of <codeVoice>Bool<\/codeVoice> by using one of the Boolean literals <codeVoice>true<\/codeVoice> or <codeVoice>false<\/codeVoice>, or by assigning the result of a Boolean method or operation to a variable or constant.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var godotHasArrived = false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let numbers = 1...5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let containsTen = numbers.contains(10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(containsTen)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"false\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let (a, b) = (100, 101)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let aFirst = a < b]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(aFirst)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Swift uses only simple Boolean values in conditional contexts to help avoid accidental programming errors and to help maintain the clarity of each control statement. Unlike in other programming languages, in Swift, integers and strings cannot be used where a Boolean value is required.<\/Para><Para>For example, the following code sample does not compile, because it attempts to use the integer <codeVoice>i<\/codeVoice> in a logical context:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var i = 5]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[while i {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(i)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    i -= 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: Cannot convert value of type 'Int' to expected condition type 'Bool']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The correct approach in Swift is to compare the <codeVoice>i<\/codeVoice> value with zero in the <codeVoice>while<\/codeVoice> statement.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[while i != 0 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(i)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    i -= 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Using Imported Boolean values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The C <codeVoice>bool<\/codeVoice> and <codeVoice>Boolean<\/codeVoice> types and the Objective-C <codeVoice>BOOL<\/codeVoice> type are all bridged into Swift as <codeVoice>Bool<\/codeVoice>. The single <codeVoice>Bool<\/codeVoice> type in Swift guarantees that functions, methods, and properties imported from C and Objective-C have a consistent type interface.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Bool",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 869
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Bool<\/decl.name> : <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Bool",
        "key.inheritedtypes" : [
          {
            "key.name" : "DataConvertible"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 34,
        "key.modulename" : "Swift",
        "key.name" : "Bool",
        "key.namelength" : 4,
        "key.nameoffset" : 863,
        "key.offset" : 853,
        "key.parsed_declaration" : "extension Bool: DataConvertible",
        "key.parsed_scope.end" : 34,
        "key.parsed_scope.start" : 34,
        "key.reusingastcontext" : false,
        "key.typename" : "Bool.Type",
        "key.typeusr" : "$sSbmD",
        "key.usr" : "s:Sb"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Int : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type>, <Type usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/Type><\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 920,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A signed integer value type.\n\nOn 32-bit platforms, `Int` is the same size as `Int32`, and\non 64-bit platforms, `Int` is the same size as `Int64`.",
        "key.doc.declaration" : "@frozen struct Int : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral",
        "key.doc.discussion" : [
          {
            "Para" : "On 32-bit platforms, `Int` is the same size as `Int32`, and on 64-bit platforms, `Int` is the same size as `Int64`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Int<\/Name><USR>s:Si<\/USR><Declaration>@frozen struct Int : FixedWidthInteger, SignedInteger, _ExpressibleByBuiltinIntegerLiteral<\/Declaration><CommentParts><Abstract><Para>A signed integer value type.<\/Para><\/Abstract><Discussion><Para>On 32-bit platforms, <codeVoice>Int<\/codeVoice> is the same size as <codeVoice>Int32<\/codeVoice>, and on 64-bit platforms, <codeVoice>Int<\/codeVoice> is the same size as <codeVoice>Int64<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Int",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 903
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol>, <ref.protocol usr=\"s:s35_ExpressibleByBuiltinIntegerLiteralP\">_ExpressibleByBuiltinIntegerLiteral<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "DataConvertible"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 33,
        "key.modulename" : "Swift",
        "key.name" : "Int",
        "key.namelength" : 3,
        "key.nameoffset" : 898,
        "key.offset" : 888,
        "key.parsed_declaration" : "extension Int: DataConvertible",
        "key.parsed_scope.end" : 35,
        "key.parsed_scope.start" : 35,
        "key.reusingastcontext" : false,
        "key.typename" : "Int.Type",
        "key.typeusr" : "$sSimD",
        "key.usr" : "s:Si"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Float<\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 956,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A single-precision, floating-point value type.",
        "key.doc.declaration" : "@frozen struct Float",
        "key.doc.full_as_xml" : "<Class><Name>Float<\/Name><USR>s:Sf<\/USR><Declaration>@frozen struct Float<\/Declaration><CommentParts><Abstract><Para>A single-precision, floating-point value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Float",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 939
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Float<\/decl.name><\/decl.struct>",
        "key.groupname" : "Math\/Floating",
        "key.inheritedtypes" : [
          {
            "key.name" : "DataConvertible"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 35,
        "key.modulename" : "Swift",
        "key.name" : "Float",
        "key.namelength" : 5,
        "key.nameoffset" : 932,
        "key.offset" : 922,
        "key.parsed_declaration" : "extension Float: DataConvertible",
        "key.parsed_scope.end" : 36,
        "key.parsed_scope.start" : 36,
        "key.reusingastcontext" : false,
        "key.typename" : "Float.Type",
        "key.typeusr" : "$sSfmD",
        "key.usr" : "s:Sf"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen struct Double<\/Declaration>",
        "key.bodylength" : 0,
        "key.bodyoffset" : 993,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A double-precision, floating-point value type.",
        "key.doc.declaration" : "@frozen struct Double",
        "key.doc.full_as_xml" : "<Class><Name>Double<\/Name><USR>s:Sd<\/USR><Declaration>@frozen struct Double<\/Declaration><CommentParts><Abstract><Para>A double-precision, floating-point value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Double",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 976
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Double<\/decl.name><\/decl.struct>",
        "key.groupname" : "Math\/Floating",
        "key.inheritedtypes" : [
          {
            "key.name" : "DataConvertible"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 36,
        "key.modulename" : "Swift",
        "key.name" : "Double",
        "key.namelength" : 6,
        "key.nameoffset" : 968,
        "key.offset" : 958,
        "key.parsed_declaration" : "extension Double: DataConvertible",
        "key.parsed_scope.end" : 37,
        "key.parsed_scope.start" : 37,
        "key.reusingastcontext" : false,
        "key.typename" : "Double.Type",
        "key.typeusr" : "$sSdmD",
        "key.usr" : "s:Sd"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen @_eagerMove struct String<\/Declaration>",
        "key.bodylength" : 115,
        "key.bodyoffset" : 1030,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A Unicode string value that is a collection of characters.\n\nA string is a series of characters, such as `\"Swift\"`, that forms a\ncollection. Strings in Swift are Unicode correct and locale insensitive,\nand are designed to be efficient. The `String` type bridges with the\nObjective-C class `NSString` and offers interoperability with C functions\nthat works with strings.\n\nYou can create new strings using string literals or string interpolations.\nA *string literal* is a series of characters enclosed in quotes.\n\n    let greeting = \"Welcome!\"\n\n*String interpolations* are string literals that evaluate any included\nexpressions and convert the results to string form. String interpolations\ngive you an easy way to build a string from multiple pieces. Wrap each\nexpression in a string interpolation in parentheses, prefixed by a\nbackslash.\n\n    let name = \"Rosa\"\n    let personalizedGreeting = \"Welcome, \\(name)!\"\n    \/\/ personalizedGreeting == \"Welcome, Rosa!\"\n\n    let price = 2\n    let number = 3\n    let cookiePrice = \"\\(number) cookies: $\\(price * number).\"\n    \/\/ cookiePrice == \"3 cookies: $6.\"\n\nCombine strings using the concatenation operator (`+`).\n\n    let longerGreeting = greeting + \" We're glad you're here!\"\n    \/\/ longerGreeting == \"Welcome! We're glad you're here!\"\n\nMultiline string literals are enclosed in three double quotation marks\n(`\"\"\"`), with each delimiter on its own line. Indentation is stripped from\neach line of a multiline string literal to match the indentation of the\nclosing delimiter.\n\n    let banner = \"\"\"\n              __,\n             (           o  \/) _\/_\n              `.  , , , ,  \/\/  \/\n            (___)(_(_\/_(_ \/\/_ (__\n                         \/)\n                        (\/\n            \"\"\"\n\nModifying and Comparing Strings\n===============================\n\nStrings always have value semantics. Modifying a copy of a string leaves\nthe original unaffected.\n\n    var otherGreeting = greeting\n    otherGreeting += \" Have a nice time!\"\n    \/\/ otherGreeting == \"Welcome! Have a nice time!\"\n\n    print(greeting)\n    \/\/ Prints \"Welcome!\"\n\nComparing strings for equality using the equal-to operator (`==`) or a\nrelational operator (like `<` or `>=`) is always performed using Unicode\ncanonical representation. As a result, different representations of a\nstring compare as being equal.\n\n    let cafe1 = \"Cafe\\u{301}\"\n    let cafe2 = \"Café\"\n    print(cafe1 == cafe2)\n    \/\/ Prints \"true\"\n\nThe Unicode scalar value `\"\\u{301}\"` modifies the preceding character to\ninclude an accent, so `\"e\\u{301}\"` has the same canonical representation\nas the single Unicode scalar value `\"é\"`.\n\nBasic string operations are not sensitive to locale settings, ensuring that\nstring comparisons and other operations always have a single, stable\nresult, allowing strings to be used as keys in `Dictionary` instances and\nfor other purposes.\n\nAccessing String Elements\n=========================\n\nA string is a collection of *extended grapheme clusters*, which approximate\nhuman-readable characters. Many individual characters, such as \"é\", \"김\",\nand \"🇮🇳\", can be made up of multiple Unicode scalar values. These scalar\nvalues are combined by Unicode's boundary algorithms into extended\ngrapheme clusters, represented by the Swift `Character` type. Each element\nof a string is represented by a `Character` instance.\n\nFor example, to retrieve the first word of a longer string, you can search\nfor a space and then create a substring from a prefix of the string up to\nthat point:\n\n    let name = \"Marie Curie\"\n    let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex\n    let firstName = name[..<firstSpace]\n    \/\/ firstName == \"Marie\"\n\nThe `firstName` constant is an instance of the `Substring` type---a type\nthat represents substrings of a string while sharing the original string's\nstorage. Substrings present the same interface as strings.\n\n    print(\"\\(name)'s first name has \\(firstName.count) letters.\")\n    \/\/ Prints \"Marie Curie's first name has 5 letters.\"\n\nAccessing a String's Unicode Representation\n===========================================\n\nIf you need to access the contents of a string as encoded in different\nUnicode encodings, use one of the string's `unicodeScalars`, `utf16`, or\n`utf8` properties. Each property provides access to a view of the string\nas a series of code units, each encoded in a different Unicode encoding.\n\nTo demonstrate the different views available for every string, the\nfollowing examples use this `String` instance:\n\n    let cafe = \"Cafe\\u{301} du 🌍\"\n    print(cafe)\n    \/\/ Prints \"Café du 🌍\"\n\nThe `cafe` string is a collection of the nine characters that are visible\nwhen the string is displayed.\n\n    print(cafe.count)\n    \/\/ Prints \"9\"\n    print(Array(cafe))\n    \/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"\n\nUnicode Scalar View\n-------------------\n\nA string's `unicodeScalars` property is a collection of Unicode scalar\nvalues, the 21-bit codes that are the basic unit of Unicode. Each scalar\nvalue is represented by a `Unicode.Scalar` instance and is equivalent to a\nUTF-32 code unit.\n\n    print(cafe.unicodeScalars.count)\n    \/\/ Prints \"10\"\n    print(Array(cafe.unicodeScalars))\n    \/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"\n    print(cafe.unicodeScalars.map { $0.value })\n    \/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"\n\nThe `unicodeScalars` view's elements comprise each Unicode scalar value in\nthe `cafe` string. In particular, because `cafe` was declared using the\ndecomposed form of the `\"é\"` character, `unicodeScalars` contains the\nscalar values for both the letter `\"e\"` (101) and the accent character\n`\"´\"` (769).\n\nUTF-16 View\n-----------\n\nA string's `utf16` property is a collection of UTF-16 code units, the\n16-bit encoding form of the string's Unicode scalar values. Each code unit\nis stored as a `UInt16` instance.\n\n    print(cafe.utf16.count)\n    \/\/ Prints \"11\"\n    print(Array(cafe.utf16))\n    \/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"\n\nThe elements of the `utf16` view are the code units for the string when\nencoded in UTF-16. These elements match those accessed through indexed\n`NSString` APIs.\n\n    let nscafe = cafe as NSString\n    print(nscafe.length)\n    \/\/ Prints \"11\"\n    print(nscafe.character(at: 3))\n    \/\/ Prints \"101\"\n\nUTF-8 View\n----------\n\nA string's `utf8` property is a collection of UTF-8 code units, the 8-bit\nencoding form of the string's Unicode scalar values. Each code unit is\nstored as a `UInt8` instance.\n\n    print(cafe.utf8.count)\n    \/\/ Prints \"14\"\n    print(Array(cafe.utf8))\n    \/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"\n\nThe elements of the `utf8` view are the code units for the string when\nencoded in UTF-8. This representation matches the one used when `String`\ninstances are passed to C APIs.\n\n    let cLength = strlen(cafe)\n    print(cLength)\n    \/\/ Prints \"14\"\n\nMeasuring the Length of a String\n================================\n\nWhen you need to know the length of a string, you must first consider what\nyou'll use the length for. Are you measuring the number of characters that\nwill be displayed on the screen, or are you measuring the amount of\nstorage needed for the string in a particular encoding? A single string\ncan have greatly differing lengths when measured by its different views.\n\nFor example, an ASCII character like the capital letter *A* is represented\nby a single element in each of its four views. The Unicode scalar value of\n*A* is `65`, which is small enough to fit in a single code unit in both\nUTF-16 and UTF-8.\n\n    let capitalA = \"A\"\n    print(capitalA.count)\n    \/\/ Prints \"1\"\n    print(capitalA.unicodeScalars.count)\n    \/\/ Prints \"1\"\n    print(capitalA.utf16.count)\n    \/\/ Prints \"1\"\n    print(capitalA.utf8.count)\n    \/\/ Prints \"1\"\n\nOn the other hand, an emoji flag character is constructed from a pair of\nUnicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these\nscalar values, in turn, is too large to fit into a single UTF-16 or UTF-8\ncode unit. As a result, each view of the string `\"🇵🇷\"` reports a different\nlength.\n\n    let flag = \"🇵🇷\"\n    print(flag.count)\n    \/\/ Prints \"1\"\n    print(flag.unicodeScalars.count)\n    \/\/ Prints \"2\"\n    print(flag.utf16.count)\n    \/\/ Prints \"4\"\n    print(flag.utf8.count)\n    \/\/ Prints \"8\"\n\nTo check whether a string is empty, use its `isEmpty` property instead of\ncomparing the length of one of the views to `0`. Unlike with `isEmpty`,\ncalculating a view's `count` property requires iterating through the\nelements of the string.\n\nAccessing String View Elements\n==============================\n\nTo find individual elements of a string, use the appropriate view for your\ntask. For example, to retrieve the first word of a longer string, you can\nsearch the string for a space and then create a new string from a prefix\nof the string up to that point.\n\n    let name = \"Marie Curie\"\n    let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex\n    let firstName = name[..<firstSpace]\n    print(firstName)\n    \/\/ Prints \"Marie\"\n\nStrings and their views share indices, so you can access the UTF-8 view of\nthe `name` string using the same `firstSpace` index.\n\n    print(Array(name.utf8[..<firstSpace]))\n    \/\/ Prints \"[77, 97, 114, 105, 101]\"\n\nNote that an index into one view may not have an exact corresponding\nposition in another view. For example, the `flag` string declared above\ncomprises a single character, but is composed of eight code units when\nencoded as UTF-8. The following code creates constants for the first and\nsecond positions in the `flag.utf8` view. Accessing the `utf8` view with\nthese indices yields the first and second code UTF-8 units.\n\n    let firstCodeUnit = flag.startIndex\n    let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)\n    \/\/ flag.utf8[firstCodeUnit] == 240\n    \/\/ flag.utf8[secondCodeUnit] == 159\n\nWhen used to access the elements of the `flag` string itself, however, the\n`secondCodeUnit` index does not correspond to the position of a specific\ncharacter. Instead of only accessing the specific UTF-8 code unit, that\nindex is treated as the position of the character at the index's encoded\noffset. In the case of `secondCodeUnit`, that character is still the flag\nitself.\n\n    \/\/ flag[firstCodeUnit] == \"🇵🇷\"\n    \/\/ flag[secondCodeUnit] == \"🇵🇷\"\n\nIf you need to validate that an index from one string's view corresponds\nwith an exact position in another view, use the index's\n`samePosition(in:)` method or the `init(_:within:)` initializer.\n\n    if let exactIndex = secondCodeUnit.samePosition(in: flag) {\n        print(flag[exactIndex])\n    } else {\n        print(\"No exact match for this position.\")\n    }\n    \/\/ Prints \"No exact match for this position.\"\n\nPerformance Optimizations\n=========================\n\nAlthough strings in Swift have value semantics, strings use a copy-on-write\nstrategy to store their data in a buffer. This buffer can then be shared\nby different copies of a string. A string's data is only copied lazily,\nupon mutation, when more than one string instance is using the same\nbuffer. Therefore, the first in any sequence of mutating operations may\ncost O(*n*) time and space.\n\nWhen a string's contiguous storage fills up, a new buffer must be allocated\nand data must be moved to the new storage. String buffers use an\nexponential growth strategy that makes appending to a string a constant\ntime operation when averaged over many append operations.\n\nBridging Between String and NSString\n====================================\n\nAny `String` instance can be bridged to `NSString` using the type-cast\noperator (`as`), and any `String` instance that originates in Objective-C\nmay use an `NSString` instance as its storage. Because any arbitrary\nsubclass of `NSString` can become a `String` instance, there are no\nguarantees about representation or efficiency when a `String` instance is\nbacked by `NSString` storage. Because `NSString` is immutable, it is just\nas though the storage was shared by a copy. The first in any sequence of\nmutating operations causes elements to be copied into unique, contiguous\nstorage which may cost O(*n*) time and space, where *n* is the length of\nthe string's encoded representation (or more, if the underlying `NSString`\nhas unusual performance characteristics).\n\nFor more information about the Unicode terms used in this discussion, see\nthe [Unicode.org glossary][glossary]. In particular, this discussion\nmentions [extended grapheme clusters][clusters], [Unicode scalar\nvalues][scalars], and [canonical equivalence][equivalence].\n\n[glossary]: http:\/\/www.unicode.org\/glossary\/\n[clusters]: http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\n[scalars]: http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\n[equivalence]: http:\/\/www.unicode.org\/glossary\/#canonical_equivalent",
        "key.doc.declaration" : "@frozen struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>@frozen struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and the accent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 1013
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@_eagerMove<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.inheritedtypes" : [
          {
            "key.name" : "DataConvertible"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 151,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 1005,
        "key.offset" : 995,
        "key.parsed_declaration" : "extension String: DataConvertible",
        "key.parsed_scope.end" : 44,
        "key.parsed_scope.start" : 38,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>init?(_ data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>)<\/Declaration>",
            "key.bodylength" : 52,
            "key.bodyoffset" : 1056,
            "key.column" : 5,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 74,
            "key.line" : 39,
            "key.modulename" : "Storage",
            "key.name" : "init(_:)",
            "key.namelength" : 19,
            "key.nameoffset" : 1035,
            "key.offset" : 1035,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage15DataConvertiblePyxSg10Foundation0B0Vcfc"
              }
            ],
            "key.parsed_declaration" : "init?(_ data: Data)",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 39,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:S2Sycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSySSSJcfc\">init(_: Character)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS4fromSSs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS9codingKeySSSgx_tcs06CodingB0Rzlufc\">init(codingKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS7cStringSSSPys4Int8VG_tcfc\">init(cString: UnsafePointer&lt;CChar&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS7cStringSSSays4Int8VG_tcfc\">init(cString: [CChar])<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS7cStringSSs4Int8Vz_tcfc\">init(cString: inout CChar)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS7cStringSSSPys5UInt8VG_tcfc\">init(cString: UnsafePointer&lt;UInt8&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS7cStringSSSays5UInt8VG_tcfc\">init(cString: [UInt8])<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS7cStringS2S_tcfc\">init(cString: String)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS7cStringSSs5UInt8Vz_tcfc\">init(cString: inout UInt8)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS17validatingCStringSSSgSPys4Int8VG_tcfc\">init?(validatingCString: UnsafePointer&lt;CChar&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS14validatingUTF8SSSgSPys4Int8VG_tcfc\">init?(validatingUTF8: UnsafePointer&lt;CChar&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS17validatingCStringSSSgSays4Int8VG_tcfc\">init?(validatingCString: [CChar])<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS14validatingUTF8SSSgSays4Int8VG_tcfc\">init?(validatingUTF8: [CChar])<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS17validatingCStringSSSgSS_tcfc\">init?(validatingCString: String)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS14validatingUTF8SSSgSS_tcfc\">init?(validatingUTF8: String)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS17validatingCStringSSSgs4Int8Vz_tcfc\">init?(validatingCString: inout CChar)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS14validatingUTF8SSSgs4Int8Vz_tcfc\">init?(validatingUTF8: inout CChar)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS15decodingCString2asSSSPy8CodeUnitQzG_xmtcs16_UnicodeEncodingRzlufc\">init&lt;Encoding&gt;(decodingCString: UnsafePointer&lt;Encoding.CodeUnit&gt;, as: Encoding.Type) where Encoding : _UnicodeEncoding<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS15decodingCString2asSSSay8CodeUnitQzG_xmtcs16_UnicodeEncodingRzlufc\">init&lt;Encoding&gt;(decodingCString: [Encoding.CodeUnit], as: Encoding.Type) where Encoding : _UnicodeEncoding<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS15decodingCString2asS2S_xmtcs16_UnicodeEncodingRzlufc\">init&lt;Encoding&gt;(decodingCString: String, as: Encoding.Type) where Encoding : _UnicodeEncoding<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS15decodingCString2asSS8CodeUnitQzz_xmtcs16_UnicodeEncodingRzlufc\">init&lt;Encoding&gt;(decodingCString: inout Encoding.CodeUnit, as: Encoding.Type) where Encoding : _UnicodeEncoding<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS8decoding2asSSx_q_mtcSlRzs16_UnicodeEncodingR_8CodeUnitQy_7ElementRtzr0_lufc\">init(decoding:as:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10validating2asSSSgq__xmtcs16_UnicodeEncodingRzSTR_7ElementQy_8CodeUnitRtzr0_lufc\">init?&lt;Encoding&gt;(validating: some Sequence, as: Encoding.Type) where Encoding : _UnicodeEncoding<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10validating2asSSSgq__xmtcs16_UnicodeEncodingRzSTR_s5UInt8V8CodeUnitRtzs4Int8V7ElementRt_r0_lufc\">init?&lt;Encoding&gt;(validating: some Sequence&lt;Int8&gt;, as: Encoding.Type) where Encoding : _UnicodeEncoding, Encoding.CodeUnit == UInt8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS27unsafeUninitializedCapacity20initializingUTF8WithSSSi_SiSrys5UInt8VGKXEtKcfc\">init(unsafeUninitializedCapacity:initializingUTF8With:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS28_builtinUnicodeScalarLiteralSSBi32__tcfc\">init(_builtinUnicodeScalarLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSySSs7UnicodeO6ScalarVcfc\">init(_: Unicode.Scalar)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS38_builtinExtendedGraphemeClusterLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfc\">init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfc\">init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS13stringLiteralS2S_tcfc\">init(stringLiteral:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSySSxcs25LosslessStringConvertibleRzlufc\">init&lt;T&gt;(_: T) where T : LosslessStringConvertible<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS19stringInterpolationSSs013DefaultStringB0V_tcfc\">init(stringInterpolation:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS9repeating5countS2S_Sitcfc\">init(repeating: String, count: Int)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS_5radix9uppercaseSSx_SiSbtcSzRzlufc\">init(_:radix:uppercase:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS9repeating5countSSSJ_Sitcfc\">init(repeating: Character, count: Int)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSySSxcs25LosslessStringConvertibleRzSTRzSJ7ElementSTRtzlufc\">init&lt;S&gt;(_: S) where S : LosslessStringConvertible, S : Sequence, S.Element == Character<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSySSxcSTRzSJ7ElementRtzlufc\">init&lt;S&gt;(_: S) where S : Sequence, S.Element == Character<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSyS2S17UnicodeScalarViewVcfc\">init(_: String.UnicodeScalarView)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSyS2S9UTF16ViewVcfc\">init(_: String.UTF16View)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSyS2S8UTF8ViewVcfc\">init(_: String.UTF8View)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSySSSshcfc\">init(_: __shared Substring)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSySSSgSs8UTF8ViewVcfc\">init?(_: Substring.UTF8View)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSySSSgSs9UTF16ViewVcfc\">init?(_: Substring.UTF16View)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SSySSSs17UnicodeScalarViewVcfc\">init(_: Substring.UnicodeScalarView)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS7copyingSSs8UTF8SpanV_tcfc\">init(copying:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10describingSSx_tclufc\">init&lt;Subject&gt;(describing: Subject)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10describingSSx_tcs23CustomStringConvertibleRzlufc\">init&lt;Subject&gt;(describing: Subject) where Subject : CustomStringConvertible<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10describingSSx_tcs20TextOutputStreamableRzlufc\">init&lt;Subject&gt;(describing: Subject) where Subject : TextOutputStreamable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10describingSSx_tcs23CustomStringConvertibleRzs20TextOutputStreamableRzlufc\">init&lt;Subject&gt;(describing: Subject) where Subject : CustomStringConvertible, Subject : TextOutputStreamable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10reflectingSSx_tclufc\">init(reflecting:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10ObjectiveCE4_selSSAA8SelectorV_tcfc\">init(_sel:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE14platformStringSSSPys4Int8VG_tcfc\">init(platformString: UnsafePointer&lt;CInterop.PlatformChar&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE14platformStringSSSays4Int8VG_tcfc\">init(platformString: [CInterop.PlatformChar])<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE14platformStringSSs4Int8Vz_tcfc\">init(platformString: inout CInterop.PlatformChar)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE14platformStringS2S_tcfc\">init(platformString: String)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE24validatingPlatformStringSSSgSPys4Int8VG_tcfc\">init?(validatingPlatformString: UnsafePointer&lt;CInterop.PlatformChar&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE24validatingPlatformStringSSSgSays4Int8VG_tcfc\">init?(validatingPlatformString: [CInterop.PlatformChar])<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE24validatingPlatformStringSSSgs4Int8Vz_tcfc\">init?(validatingPlatformString: inout CInterop.PlatformChar)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE24validatingPlatformStringSSSgSS_tcfc\">init?(validatingPlatformString: String)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE8decodingSSAA8FilePathV_tcfc\">init(decoding: FilePath)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE10validatingSSSgAA8FilePathV_tcfc\">init?(validating: FilePath)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE8decodingSSAA8FilePathV9ComponentV_tcfc\">init(decoding: FilePath.Component)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE10validatingSSSgAA8FilePathV9ComponentV_tcfc\">init?(validating: FilePath.Component)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE8decodingSSAA8FilePathV4RootV_tcfc\">init(decoding: FilePath.Root)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE10validatingSSSgAA8FilePathV4RootV_tcfc\">init?(validating: FilePath.Root)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemEySSAA8FilePathVcfc\">init(_: FilePath)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6SystemE14validatingUTF8SSSgAA8FilePathV_tcfc\">init?(validatingUTF8: FilePath)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationEySSs5SliceVyAA16AttributedStringV13CharacterViewVGcfc\">init(_: Slice&lt;AttributedString.CharacterView&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationEySSSo8NSStringCcfc\">init(_: NSString)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE4data8encodingSSSgAA4DataVh_SSAAE8EncodingVtcfc\">init(data:encoding:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE5bytes8encodingSSSgxh_SSAAE8EncodingVtcSTRzs5UInt8V7ElementRtzlufc\">init(bytes:encoding:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE14contentsOfFile8encodingS2Sh_SSAAE8EncodingVtKcfc\">init(contentsOfFile:encoding:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE10contentsOf8encodingSSAA3URLVh_SSAAE8EncodingVtKcfc\">init(contentsOf:encoding:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE14contentsOfFile12usedEncodingS2Sh_SSAAE0F0VztKcfc\">init(contentsOfFile:usedEncoding:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE10contentsOf12usedEncodingSSAA3URLVh_SSAAE0E0VztKcfc\">init(contentsOf:usedEncoding:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationEySSAA3URLV8TemplateV12VariableNameVcfc\">init(_: URL.Template.VariableName)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE9localized5table6bundle6locale7commentS2SAAE17LocalizationValueV_SSSgSo8NSBundleCSgAA6LocaleVs12StaticStringVSgtcfc\">init(localized:table:bundle:locale:comment:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE9localized12defaultValue5table6bundle6locale7commentSSs12StaticStringV_SSAAE012LocalizationD0VSSSgSo8NSBundleCSgAA6LocaleVAISgtcfc\">init(localized:defaultValue:table:bundle:locale:comment:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE9localized7options5table6bundle6locale7commentS2SAAE17LocalizationValueV_SSAAE0H7OptionsVSSSgSo8NSBundleCSgAA6LocaleVs12StaticStringVSgtcfc\">init(localized:options:table:bundle:locale:comment:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE9localized12defaultValue7options5table6bundle6locale7commentSSs12StaticStringV_SSAAE012LocalizationD0VSSAAE0L7OptionsVSSSgSo8NSBundleCSgAA6LocaleVAJSgtcfc\">init(localized:defaultValue:options:table:bundle:locale:comment:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE9localizedSSAA23LocalizedStringResourceV_tcfc\">init(localized:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE9localized7optionsSSAA23LocalizedStringResourceV_SSAAE19LocalizationOptionsVtcfc\">init(localized:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE10utf8StringSSSgSPys4Int8VG_tcfc\">init?(utf8String: UnsafePointer&lt;CChar&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE10utf8StringSSSgSays4Int8VG_tcfc\">init?(utf8String: [CChar])<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE10utf8StringSSSgSS_tcfc\">init?(utf8String: String)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE10utf8StringSSSgs4Int8Vz_tcfc\">init?(utf8String: inout CChar)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE11bytesNoCopy6length8encoding12freeWhenDoneSSSgSv_SiSSAAE8EncodingVSbtcfc\">init(bytesNoCopy:length:encoding:freeWhenDone:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE14utf16CodeUnits5countSSSPys6UInt16VG_Sitcfc\">init(utf16CodeUnits:count:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE20utf16CodeUnitsNoCopy5count12freeWhenDoneSSSPys6UInt16VG_SiSbtcfc\">init(utf16CodeUnitsNoCopy:count:freeWhenDone:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE14contentsOfFileS2Sh_tKcfc\">init(contentsOfFile:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE10contentsOfSSAA3URLVh_tKcfc\">init(contentsOf:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE7cString8encodingSSSgSPys4Int8VG_SSAAE8EncodingVtcfc\">init?(cString: UnsafePointer&lt;CChar&gt;, encoding: String.Encoding)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE7cString8encodingSSSgSays4Int8VG_SSAAE8EncodingVtcfc\">init?(cString: [CChar], encoding: String.Encoding)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE7cString8encodingSSSgSS_SSAAE8EncodingVtcfc\">init?(cString: String, encoding: String.Encoding)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE7cString8encodingSSSgs4Int8Vz_SSAAE8EncodingVtcfc\">init?(cString: inout CChar, encoding: String.Encoding)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE6format_S2Sh_s7CVarArg_pdtcfc\">init(format:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE6format9argumentsS2Sh_Says7CVarArg_pGhtcfc\">init(format:arguments:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE6format6locale_S2Sh_AA6LocaleVSghs7CVarArg_pdtcfc\">init(format:locale:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE6format6locale9argumentsS2Sh_AA6LocaleVSghSays7CVarArg_pGhtcfc\">init(format:locale:arguments:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(String.Type) -> (Data) -> String?",
            "key.typeusr" : "$sySSSg10Foundation4DataVcD",
            "key.usr" : "s:SS7StorageEySSSg10Foundation4DataVcfc"
          },
          {
            "key.annotated_decl" : "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 12,
            "key.bodyoffset" : 1131,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DataConvertible.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.line" : 43,
            "key.modulename" : "Storage",
            "key.name" : "data",
            "key.namelength" : 4,
            "key.nameoffset" : 1119,
            "key.offset" : 1115,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage15DataConvertibleP4data10Foundation0B0Vvp"
              }
            ],
            "key.parsed_declaration" : "var data: Data",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 43,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE4data5using20allowLossyConversionAA4DataVSgSSAAE8EncodingV_SbtF\">data(using:allowLossyConversion:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Data",
            "key.typeusr" : "$s10Foundation4DataVD",
            "key.usr" : "s:SS7StorageE4data10Foundation4DataVvp"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:SS"
      }
    ]
  }
}, {
  "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 7842,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias StorageErrorClosure = (<Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 90
          }
        ],
        "key.column" : 18,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Error closure to handle `StorageDelegate` errors.",
        "key.doc.column" : 18,
        "key.doc.comment" : "Error closure to handle `StorageDelegate` errors.",
        "key.doc.declaration" : "public typealias StorageErrorClosure = (Error) -> Void",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift\" line=\"5\" column=\"18\"><Name>StorageErrorClosure<\/Name><USR>s:7Storage0A12ErrorClosurea<\/USR><Declaration>public typealias StorageErrorClosure = (Error) -&gt; Void<\/Declaration><CommentParts><Abstract><Para>Error closure to handle <codeVoice>StorageDelegate<\/codeVoice> errors.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 5,
        "key.doc.name" : "StorageErrorClosure",
        "key.doc.type" : "Other",
        "key.doclength" : 54,
        "key.docoffset" : 36,
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>StorageErrorClosure<\/decl.name> = (<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 47,
        "key.line" : 5,
        "key.modulename" : "Storage",
        "key.name" : "StorageErrorClosure",
        "key.namelength" : 19,
        "key.nameoffset" : 107,
        "key.offset" : 97,
        "key.parsed_declaration" : "public typealias StorageErrorClosure = (Error) -> Void",
        "key.parsed_scope.end" : 5,
        "key.parsed_scope.start" : 5,
        "key.reusingastcontext" : false,
        "key.typename" : "((any Error) -> ()).Type",
        "key.typeusr" : "$sys5Error_pcmD",
        "key.usr" : "s:7Storage0A12ErrorClosurea"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.open",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open class DelegatedStorage : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.open",
            "key.length" : 4,
            "key.offset" : 189
          }
        ],
        "key.bodylength" : 7613,
        "key.bodyoffset" : 227,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Class with the main `CryptoKit` logic.",
        "key.doc.column" : 12,
        "key.doc.comment" : "Class with the main `CryptoKit` logic.",
        "key.doc.declaration" : "@Storage.StorageActor open class DelegatedStorage : Storage",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift\" line=\"8\" column=\"12\"><Name>DelegatedStorage<\/Name><USR>s:7Storage09DelegatedA0C<\/USR><Declaration>@Storage.StorageActor open class DelegatedStorage : Storage<\/Declaration><CommentParts><Abstract><Para>Class with the main <codeVoice>CryptoKit<\/codeVoice> logic.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 8,
        "key.doc.name" : "DelegatedStorage",
        "key.doc.type" : "Class",
        "key.doclength" : 43,
        "key.docoffset" : 146,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 218
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>DelegatedStorage<\/decl.name> : <ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Storage"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 7647,
        "key.line" : 8,
        "key.modulename" : "Storage",
        "key.name" : "DelegatedStorage",
        "key.namelength" : 16,
        "key.nameoffset" : 200,
        "key.offset" : 194,
        "key.parsed_declaration" : "open class DelegatedStorage: Storage",
        "key.parsed_scope.end" : 255,
        "key.parsed_scope.start" : 8,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public let delegate: <Type usr=\"s:7Storage0A8DelegateP\">StorageDelegate<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 285
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`StorageDelegate` that stores `StorageData`.",
            "key.doc.column" : 16,
            "key.doc.comment" : "`StorageDelegate` that stores `StorageData`.",
            "key.doc.declaration" : "@Storage.StorageActor public let delegate: StorageDelegate?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift\" line=\"10\" column=\"16\"><Name>delegate<\/Name><USR>s:7Storage09DelegatedA0C8delegateAA0A8Delegate_pSgvp<\/USR><Declaration>@Storage.StorageActor public let delegate: StorageDelegate?<\/Declaration><CommentParts><Abstract><Para><codeVoice>StorageDelegate<\/codeVoice> that stores <codeVoice>StorageData<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 10,
            "key.doc.name" : "delegate",
            "key.doc.type" : "Other",
            "key.doclength" : 49,
            "key.docoffset" : 232,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>delegate<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7Storage0A8DelegateP\">StorageDelegate<\/ref.protocol>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.line" : 10,
            "key.modulename" : "Storage",
            "key.name" : "delegate",
            "key.namelength" : 8,
            "key.nameoffset" : 296,
            "key.offset" : 292,
            "key.parsed_declaration" : "public let delegate: StorageDelegate?",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.reusingastcontext" : false,
            "key.typename" : "(any StorageDelegate)?",
            "key.typeusr" : "$s7Storage0A8Delegate_pSgD",
            "key.usr" : "s:7Storage09DelegatedA0C8delegateAA0A8Delegate_pSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> private let symmetricKey: <Type usr=\"s:9CryptoKit12SymmetricKeyV\">SymmetricKey<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 327
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>symmetricKey<\/decl.name>: <decl.var.type><ref.struct usr=\"s:9CryptoKit12SymmetricKeyV\">SymmetricKey<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.line" : 11,
            "key.modulename" : "Storage",
            "key.name" : "symmetricKey",
            "key.namelength" : 12,
            "key.nameoffset" : 339,
            "key.offset" : 335,
            "key.parsed_declaration" : "private let symmetricKey: SymmetricKey?",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.reusingastcontext" : false,
            "key.typename" : "SymmetricKey?",
            "key.typeusr" : "$s9CryptoKit12SymmetricKeyVSgD",
            "key.usr" : "s:7Storage09DelegatedA0C12symmetricKey33_72C1F75943905E3E2E955F41B3F1C329LL9CryptoKit09SymmetricD0VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> private let authenticationTag: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 371
              }
            ],
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>authenticationTag<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.line" : 12,
            "key.modulename" : "Storage",
            "key.name" : "authenticationTag",
            "key.namelength" : 17,
            "key.nameoffset" : 383,
            "key.offset" : 379,
            "key.parsed_declaration" : "private let authenticationTag: Data?",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.reusingastcontext" : false,
            "key.typename" : "Data?",
            "key.typeusr" : "$s10Foundation4DataVSgD",
            "key.usr" : "s:7Storage09DelegatedA0C17authenticationTag33_72C1F75943905E3E2E955F41B3F1C329LL10Foundation4DataVSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var errorClosure: <Type usr=\"s:7Storage0A12ErrorClosurea\">StorageErrorClosure<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 470
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Error closure to handle `StorageDelegate` errors.",
            "key.doc.column" : 14,
            "key.doc.comment" : "Error closure to handle `StorageDelegate` errors.",
            "key.doc.declaration" : "@Storage.StorageActor open var errorClosure: StorageErrorClosure?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift\" line=\"14\" column=\"14\"><Name>errorClosure<\/Name><USR>s:7Storage09DelegatedA0C12errorClosureys5Error_pcSgvp<\/USR><Declaration>@Storage.StorageActor open var errorClosure: StorageErrorClosure?<\/Declaration><CommentParts><Abstract><Para>Error closure to handle <codeVoice>StorageDelegate<\/codeVoice> errors.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 14,
            "key.doc.name" : "errorClosure",
            "key.doc.type" : "Other",
            "key.doclength" : 54,
            "key.docoffset" : 412,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>errorClosure<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:7Storage0A12ErrorClosurea\">StorageErrorClosure<\/ref.typealias>?<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 38,
            "key.line" : 14,
            "key.modulename" : "Storage",
            "key.name" : "errorClosure",
            "key.namelength" : 12,
            "key.nameoffset" : 479,
            "key.offset" : 475,
            "key.parsed_declaration" : "open var errorClosure: StorageErrorClosure?",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "((any Error) -> ())?",
            "key.typeusr" : "$sys5Error_pcSgD",
            "key.usr" : "s:7Storage09DelegatedA0C12errorClosureys5Error_pcSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public init(_ delegate: <Type usr=\"s:7Storage0A8DelegateP\">StorageDelegate<\/Type>? = nil, symmetricKey: <Type usr=\"s:9CryptoKit12SymmetricKeyV\">SymmetricKey<\/Type>? = nil, authenticationTag: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>? = nil, errorClosure: <Type usr=\"s:7Storage0A12ErrorClosurea\">StorageErrorClosure<\/Type>? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 876
              }
            ],
            "key.bodylength" : 171,
            "key.bodyoffset" : 1082,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `DelegatedStorage`.\n\n- Parameter delegate: `StorageDelegate` that stores `StorageData`.\n- Parameter symmetricKey: A cryptographic key used to seal the message.\n- Parameter authenticationTag: Custom additional `Data` to be authenticated.\n- Parameter errorClosure: Closure to handle `StorageDelegate` errors.\n",
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `DelegatedStorage`.\n\n- Parameter delegate: `StorageDelegate` that stores `StorageData`.\n- Parameter symmetricKey: A cryptographic key used to seal the message.\n- Parameter authenticationTag: Custom additional `Data` to be authenticated.\n- Parameter errorClosure: Closure to handle `StorageDelegate` errors.",
            "key.doc.declaration" : "@Storage.StorageActor public init(_ delegate: StorageDelegate? = nil, symmetricKey: SymmetricKey? = nil, authenticationTag: Data? = nil, errorClosure: StorageErrorClosure? = nil)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift\" line=\"24\" column=\"12\"><Name>init(_:symmetricKey:authenticationTag:errorClosure:)<\/Name><USR>s:7Storage09DelegatedA0C_12symmetricKey17authenticationTag12errorClosureAcA0A8Delegate_pSg_9CryptoKit09SymmetricD0VSg10Foundation4DataVSgys5Error_pcSgtcfc<\/USR><Declaration>@Storage.StorageActor public init(_ delegate: StorageDelegate? = nil, symmetricKey: SymmetricKey? = nil, authenticationTag: Data? = nil, errorClosure: StorageErrorClosure? = nil)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>DelegatedStorage<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>delegate<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StorageDelegate<\/codeVoice> that stores <codeVoice>StorageData<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>symmetricKey<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A cryptographic key used to seal the message.<\/Para><\/Discussion><\/Parameter><Parameter><Name>authenticationTag<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Custom additional <codeVoice>Data<\/codeVoice> to be authenticated.<\/Para><\/Discussion><\/Parameter><Parameter><Name>errorClosure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Closure to handle <codeVoice>StorageDelegate<\/codeVoice> errors.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 24,
            "key.doc.name" : "init(_:symmetricKey:authenticationTag:errorClosure:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`StorageDelegate` that stores `StorageData`."
                  }
                ],
                "name" : "delegate"
              },
              {
                "discussion" : [
                  {
                    "Para" : "A cryptographic key used to seal the message."
                  }
                ],
                "name" : "symmetricKey"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Custom additional `Data` to be authenticated."
                  }
                ],
                "name" : "authenticationTag"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Closure to handle `StorageDelegate` errors."
                  }
                ],
                "name" : "errorClosure"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 352,
            "key.docoffset" : 519,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>delegate<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Storage0A8DelegateP\">StorageDelegate<\/ref.protocol>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>symmetricKey<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:9CryptoKit12SymmetricKeyV\">SymmetricKey<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>authenticationTag<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>errorClosure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage0A12ErrorClosurea\">StorageErrorClosure<\/ref.typealias>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 371,
            "key.line" : 24,
            "key.modulename" : "Storage",
            "key.name" : "init(_:symmetricKey:authenticationTag:errorClosure:)",
            "key.namelength" : 197,
            "key.nameoffset" : 883,
            "key.offset" : 883,
            "key.parsed_declaration" : "public init(_ delegate: StorageDelegate? = nil,\n            symmetricKey: SymmetricKey? = nil,\n            authenticationTag: Data? = nil,\n            errorClosure: StorageErrorClosure? = nil)",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 24,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage.Type) -> ((any StorageDelegate)?, SymmetricKey?, Data?, ((any Error) -> ())?) -> DelegatedStorage",
            "key.typeusr" : "$s_12symmetricKey17authenticationTag12errorClosure7Storage09DelegatedG0CAD0G8Delegate_pSg_9CryptoKit09SymmetricB0VSg10Foundation4DataVSgys5Error_pcSgtcD",
            "key.usr" : "s:7Storage09DelegatedA0C_12symmetricKey17authenticationTag12errorClosureAcA0A8Delegate_pSg_9CryptoKit09SymmetricD0VSg10Foundation4DataVSgys5Error_pcSgtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func register(defaults registrationDictionary: [<Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type> : Any])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 1260
              }
            ],
            "key.bodylength" : 192,
            "key.bodyoffset" : 1330,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Adds the contents of the specified dictionary to the registration domain.\n\n- Parameter defaults: The dictionary of keys and values you want to register.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func register(defaults registration: [StoreKey : Any])",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"14\" column=\"10\"><Name>register(defaults:)<\/Name><USR>s:7StorageAAP8register8defaultsySDySSypG_tF<\/USR><Declaration>@Storage.StorageActor func register(defaults registration: [StoreKey : Any])<\/Declaration><CommentParts><Abstract><Para>Adds the contents of the specified dictionary to the registration domain.<\/Para><\/Abstract><Parameters><Parameter><Name>defaults<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The dictionary of keys and values you want to register.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 14,
            "key.doc.name" : "register(defaults:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The dictionary of keys and values you want to register."
                  }
                ],
                "name" : "defaults"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>defaults<\/decl.var.parameter.argument_label> <decl.var.parameter.name>registrationDictionary<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 258,
            "key.line" : 34,
            "key.modulename" : "Storage",
            "key.name" : "register(defaults:)",
            "key.namelength" : 58,
            "key.nameoffset" : 1270,
            "key.offset" : 1265,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP8register8defaultsySDySSypG_tF"
              }
            ],
            "key.parsed_declaration" : "open func register(defaults registrationDictionary: [StoreKey: Any])",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 34,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> ([String : Any]) -> ()",
            "key.typeusr" : "$s8defaultsySDySSypG_tcD",
            "key.usr" : "s:7StorageAAP8register8defaultsySDySSypG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func value&lt;V&gt;(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:7Storage09DelegatedA0C5value6forKeyxSgSS_tlF1VL_xmfp\">V<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 1529
              }
            ],
            "key.bodylength" : 151,
            "key.bodyoffset" : 1577,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the generic value associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func value<V>(forKey key: StoreKey) -> V?",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"21\" column=\"10\"><Name>value(forKey:)<\/Name><USR>s:7StorageAAP5value6forKeyqd__SgSS_tlF<\/USR><Declaration>@Storage.StorageActor func value&lt;V&gt;(forKey key: StoreKey) -&gt; V?<\/Declaration><CommentParts><Abstract><Para>Returns the generic value associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 21,
            "key.doc.name" : "value(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>value<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Storage09DelegatedA0C5value6forKeyxSgSS_tlF1VL_xmfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:7Storage09DelegatedA0C5value6forKeyxSgSS_tlF1VL_xmfp\">V<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 195,
            "key.line" : 43,
            "key.modulename" : "Storage",
            "key.name" : "value(forKey:)",
            "key.namelength" : 30,
            "key.nameoffset" : 1539,
            "key.offset" : 1534,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP5value6forKeyqd__SgSS_tlF"
              }
            ],
            "key.parsed_declaration" : "open func value<V>(forKey key: StoreKey) -> V?",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 43,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>V<\/Declaration>",
                "key.column" : 21,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.line" : 43,
                "key.modulename" : "Storage",
                "key.name" : "V",
                "key.namelength" : 1,
                "key.nameoffset" : 1545,
                "key.offset" : 1545,
                "key.parsed_declaration" : "open func value<V",
                "key.parsed_scope.end" : 43,
                "key.parsed_scope.start" : 43,
                "key.reusingastcontext" : false,
                "key.typename" : "V.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:7Storage09DelegatedA0C5value6forKeyxSgSS_tlF1VL_xmfp"
              }
            ],
            "key.typename" : "<V> (DelegatedStorage) -> (String) -> V?",
            "key.typeusr" : "$s6forKeyxSgSS_tcluD",
            "key.usr" : "s:7StorageAAP5value6forKeyqd__SgSS_tlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func object(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) throws -&gt; Any?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 1887
              }
            ],
            "key.bodylength" : 204,
            "key.bodyoffset" : 1942,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `NSCoding` conforming object associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 15,
            "key.doc.comment" : "Returns the `NSCoding` conforming object associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor open func object(forKey key: StoreKey) throws -> Any?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift\" line=\"57\" column=\"15\"><Name>object(forKey:)<\/Name><USR>s:7Storage09DelegatedA0C6object6forKeyypSgSS_tKF<\/USR><Declaration>@Storage.StorageActor open func object(forKey key: StoreKey) throws -&gt; Any?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>NSCoding<\/codeVoice> conforming object associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 57,
            "key.doc.name" : "object(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 147,
            "key.docoffset" : 1735,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>object<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 255,
            "key.line" : 57,
            "key.modulename" : "Storage",
            "key.name" : "object(forKey:)",
            "key.namelength" : 28,
            "key.nameoffset" : 1897,
            "key.offset" : 1892,
            "key.parsed_declaration" : "open func object(forKey key: StoreKey) throws -> Any?",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 57,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) throws -> Any?",
            "key.typeusr" : "$s6forKeyypSgSS_tKcD",
            "key.usr" : "s:7Storage09DelegatedA0C6object6forKeyypSgSS_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func decodable&lt;D&gt;(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:7Storage09DelegatedA0C9decodable6forKeyxSgSS_tSeRzlF1DL_xmfp\">D<\/Type>? where <Type usr=\"s:7Storage09DelegatedA0C9decodable6forKeyxSgSS_tSeRzlF1DL_xmfp\">D<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 2153
              }
            ],
            "key.bodylength" : 246,
            "key.bodyoffset" : 2216,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Decodable` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func decodable<D>(forKey key: StoreKey) -> D? where D : Decodable",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"28\" column=\"10\"><Name>decodable(forKey:)<\/Name><USR>s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF<\/USR><Declaration>@Storage.StorageActor func decodable&lt;D&gt;(forKey key: StoreKey) -&gt; D? where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Decodable<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 28,
            "key.doc.name" : "decodable(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decodable<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Storage09DelegatedA0C9decodable6forKeyxSgSS_tSeRzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:7Storage09DelegatedA0C9decodable6forKeyxSgSS_tSeRzlF1DL_xmfp\">D<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage09DelegatedA0C9decodable6forKeyxSgSS_tSeRzlF1DL_xmfp\">D<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 305,
            "key.line" : 65,
            "key.modulename" : "Storage",
            "key.name" : "decodable(forKey:)",
            "key.namelength" : 45,
            "key.nameoffset" : 2163,
            "key.offset" : 2158,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF"
              }
            ],
            "key.parsed_declaration" : "open func decodable<D: Decodable>(forKey key: StoreKey) -> D?",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 65,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 25,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 2176
                  }
                ],
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 65,
                "key.modulename" : "Storage",
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 2173,
                "key.offset" : 2173,
                "key.parsed_declaration" : "open func decodable<D: Decodable",
                "key.parsed_scope.end" : 65,
                "key.parsed_scope.start" : 65,
                "key.reusingastcontext" : false,
                "key.typename" : "D.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:7Storage09DelegatedA0C9decodable6forKeyxSgSS_tSeRzlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : Decodable> (DelegatedStorage) -> (String) -> D?",
            "key.typeusr" : "$s6forKeyxSgSS_tcSeRzluD",
            "key.usr" : "s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func string(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 2469
              }
            ],
            "key.bodylength" : 157,
            "key.bodyoffset" : 2520,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `String` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func string(forKey key: StoreKey) -> String?",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"42\" column=\"10\"><Name>string(forKey:)<\/Name><USR>s:7StorageAAP6string6forKeySSSgSS_tF<\/USR><Declaration>@Storage.StorageActor func string(forKey key: StoreKey) -&gt; String?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>String<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 42,
            "key.doc.name" : "string(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>string<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 204,
            "key.line" : 77,
            "key.modulename" : "Storage",
            "key.name" : "string(forKey:)",
            "key.namelength" : 28,
            "key.nameoffset" : 2479,
            "key.offset" : 2474,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP6string6forKeySSSgSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func string(forKey key: StoreKey) -> String?",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 77,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> String?",
            "key.typeusr" : "$s6forKeySSSgSS_tcD",
            "key.usr" : "s:7StorageAAP6string6forKeySSSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func array(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; [Any]?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 2684
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 2733,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `[Any]` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func array(forKey key: StoreKey) -> [Any]?",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"49\" column=\"10\"><Name>array(forKey:)<\/Name><USR>s:7StorageAAP5array6forKeySayypGSgSS_tF<\/USR><Declaration>@Storage.StorageActor func array(forKey key: StoreKey) -&gt; [Any]?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>[Any]<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 49,
            "key.doc.name" : "array(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>array<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 77,
            "key.line" : 85,
            "key.modulename" : "Storage",
            "key.name" : "array(forKey:)",
            "key.namelength" : 27,
            "key.nameoffset" : 2694,
            "key.offset" : 2689,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP5array6forKeySayypGSgSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func array(forKey key: StoreKey) -> [Any]?",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 85,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> [Any]?",
            "key.typeusr" : "$s6forKeySayypGSgSS_tcD",
            "key.usr" : "s:7StorageAAP5array6forKeySayypGSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Sh\">Set<\/Type>&lt;<Type usr=\"s:s11AnyHashableV\">AnyHashable<\/Type>&gt;?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 2772
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 2830,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Set<AnyHashable>` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(forKey key: StoreKey) -> Set<AnyHashable>?",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"56\" column=\"10\"><Name>set(forKey:)<\/Name><USR>s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF<\/USR><Declaration>@Storage.StorageActor func set(forKey key: StoreKey) -&gt; Set&lt;AnyHashable&gt;?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Set&lt;AnyHashable&gt;<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 56,
            "key.doc.name" : "set(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;<ref.struct usr=\"s:s11AnyHashableV\">AnyHashable<\/ref.struct>&gt;?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 86,
            "key.line" : 89,
            "key.modulename" : "Storage",
            "key.name" : "set(forKey:)",
            "key.namelength" : 25,
            "key.nameoffset" : 2782,
            "key.offset" : 2777,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func set(forKey key: StoreKey) -> Set<AnyHashable>?",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 89,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> Set<AnyHashable>?",
            "key.typeusr" : "$s6forKeyShys11AnyHashableVGSgSS_tcD",
            "key.usr" : "s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func dictionary(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; [<Type usr=\"s:SS\">String<\/Type> : Any]?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 2869
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 2931,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `[String: Any]` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func dictionary(forKey key: StoreKey) -> [String : Any]?",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"63\" column=\"10\"><Name>dictionary(forKey:)<\/Name><USR>s:7StorageAAP10dictionary6forKeySDySSypGSgSS_tF<\/USR><Declaration>@Storage.StorageActor func dictionary(forKey key: StoreKey) -&gt; [String : Any]?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>[String: Any]<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 63,
            "key.doc.name" : "dictionary(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>dictionary<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 90,
            "key.line" : 93,
            "key.modulename" : "Storage",
            "key.name" : "dictionary(forKey:)",
            "key.namelength" : 32,
            "key.nameoffset" : 2879,
            "key.offset" : 2874,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP10dictionary6forKeySDySSypGSgSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func dictionary(forKey key: StoreKey) -> [String: Any]?",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 93,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> [String : Any]?",
            "key.typeusr" : "$s6forKeySDySSypGSgSS_tcD",
            "key.usr" : "s:7StorageAAP10dictionary6forKeySDySSypGSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func stringArray(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; [<Type usr=\"s:SS\">String<\/Type>]?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 2970
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 3028,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `[String]` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func stringArray(forKey key: StoreKey) -> [String]?",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"70\" column=\"10\"><Name>stringArray(forKey:)<\/Name><USR>s:7StorageAAP11stringArray6forKeySaySSGSgSS_tF<\/USR><Declaration>@Storage.StorageActor func stringArray(forKey key: StoreKey) -&gt; [String]?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>[String]<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 70,
            "key.doc.name" : "stringArray(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>stringArray<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 86,
            "key.line" : 97,
            "key.modulename" : "Storage",
            "key.name" : "stringArray(forKey:)",
            "key.namelength" : 33,
            "key.nameoffset" : 2980,
            "key.offset" : 2975,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP11stringArray6forKeySaySSGSgSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func stringArray(forKey key: StoreKey) -> [String]?",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 97,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> [String]?",
            "key.typeusr" : "$s6forKeySaySSGSgSS_tcD",
            "key.usr" : "s:7StorageAAP11stringArray6forKeySaySSGSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func integer(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 3067
              }
            ],
            "key.bodylength" : 154,
            "key.bodyoffset" : 3115,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Int` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func integer(forKey key: StoreKey) -> Int",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"77\" column=\"10\"><Name>integer(forKey:)<\/Name><USR>s:7StorageAAP7integer6forKeySiSS_tF<\/USR><Declaration>@Storage.StorageActor func integer(forKey key: StoreKey) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Int<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 77,
            "key.doc.name" : "integer(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>integer<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 198,
            "key.line" : 101,
            "key.modulename" : "Storage",
            "key.name" : "integer(forKey:)",
            "key.namelength" : 29,
            "key.nameoffset" : 3077,
            "key.offset" : 3072,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP7integer6forKeySiSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func integer(forKey key: StoreKey) -> Int",
            "key.parsed_scope.end" : 107,
            "key.parsed_scope.start" : 101,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> Int",
            "key.typeusr" : "$s6forKeySiSS_tcD",
            "key.usr" : "s:7StorageAAP7integer6forKeySiSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func float(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 3276
              }
            ],
            "key.bodylength" : 152,
            "key.bodyoffset" : 3324,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Float` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func float(forKey key: StoreKey) -> Float",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"84\" column=\"10\"><Name>float(forKey:)<\/Name><USR>s:7StorageAAP5float6forKeySfSS_tF<\/USR><Declaration>@Storage.StorageActor func float(forKey key: StoreKey) -&gt; Float<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Float<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 84,
            "key.doc.name" : "float(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>float<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 196,
            "key.line" : 109,
            "key.modulename" : "Storage",
            "key.name" : "float(forKey:)",
            "key.namelength" : 27,
            "key.nameoffset" : 3286,
            "key.offset" : 3281,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP5float6forKeySfSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func float(forKey key: StoreKey) -> Float",
            "key.parsed_scope.end" : 115,
            "key.parsed_scope.start" : 109,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> Float",
            "key.typeusr" : "$s6forKeySfSS_tcD",
            "key.usr" : "s:7StorageAAP5float6forKeySfSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func double(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 3483
              }
            ],
            "key.bodylength" : 155,
            "key.bodyoffset" : 3533,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Double` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func double(forKey key: StoreKey) -> Double",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"91\" column=\"10\"><Name>double(forKey:)<\/Name><USR>s:7StorageAAP6double6forKeySdSS_tF<\/USR><Declaration>@Storage.StorageActor func double(forKey key: StoreKey) -&gt; Double<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Double<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 91,
            "key.doc.name" : "double(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>double<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 201,
            "key.line" : 117,
            "key.modulename" : "Storage",
            "key.name" : "double(forKey:)",
            "key.namelength" : 28,
            "key.nameoffset" : 3493,
            "key.offset" : 3488,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP6double6forKeySdSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func double(forKey key: StoreKey) -> Double",
            "key.parsed_scope.end" : 123,
            "key.parsed_scope.start" : 117,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> Double",
            "key.typeusr" : "$s6forKeySdSS_tcD",
            "key.usr" : "s:7StorageAAP6double6forKeySdSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func bool(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 3695
              }
            ],
            "key.bodylength" : 153,
            "key.bodyoffset" : 3741,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Bool` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func bool(forKey key: StoreKey) -> Bool",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"98\" column=\"10\"><Name>bool(forKey:)<\/Name><USR>s:7StorageAAP4bool6forKeySbSS_tF<\/USR><Declaration>@Storage.StorageActor func bool(forKey key: StoreKey) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Bool<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 98,
            "key.doc.name" : "bool(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bool<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 195,
            "key.line" : 125,
            "key.modulename" : "Storage",
            "key.name" : "bool(forKey:)",
            "key.namelength" : 26,
            "key.nameoffset" : 3705,
            "key.offset" : 3700,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP4bool6forKeySbSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func bool(forKey key: StoreKey) -> Bool",
            "key.parsed_scope.end" : 131,
            "key.parsed_scope.start" : 125,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> Bool",
            "key.typeusr" : "$s6forKeySbSS_tcD",
            "key.usr" : "s:7StorageAAP4bool6forKeySbSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func url(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:10Foundation3URLV\">URL<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 3901
              }
            ],
            "key.bodylength" : 156,
            "key.bodyoffset" : 3946,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `URL` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func url(forKey key: StoreKey) -> URL?",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"105\" column=\"10\"><Name>url(forKey:)<\/Name><USR>s:7StorageAAP3url6forKey10Foundation3URLVSgSS_tF<\/USR><Declaration>@Storage.StorageActor func url(forKey key: StoreKey) -&gt; URL?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>URL<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 105,
            "key.doc.name" : "url(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>url<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 197,
            "key.line" : 133,
            "key.modulename" : "Storage",
            "key.name" : "url(forKey:)",
            "key.namelength" : 25,
            "key.nameoffset" : 3911,
            "key.offset" : 3906,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3url6forKey10Foundation3URLVSgSS_tF"
              }
            ],
            "key.parsed_declaration" : "open func url(forKey key: StoreKey) -> URL?",
            "key.parsed_scope.end" : 138,
            "key.parsed_scope.start" : 133,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> URL?",
            "key.typeusr" : "$s6forKey10Foundation3URLVSgSS_tcD",
            "key.usr" : "s:7StorageAAP3url6forKey10Foundation3URLVSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func data&lt;D&gt;(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:7Storage09DelegatedA0C4data6forKeyxSgSS_tAA0A4DataRzlF1DL_xmfp\">D<\/Type>? where <Type usr=\"s:7Storage09DelegatedA0C4data6forKeyxSgSS_tAA0A4DataRzlF1DL_xmfp\">D<\/Type> : <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 4109
              }
            ],
            "key.bodylength" : 681,
            "key.bodyoffset" : 4169,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `StorageData` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func data<D>(forKey key: StoreKey) -> D? where D : Storage.StorageData",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"35\" column=\"10\"><Name>data(forKey:)<\/Name><USR>s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF<\/USR><Declaration>@Storage.StorageActor func data&lt;D&gt;(forKey key: StoreKey) -&gt; D? where D : Storage.StorageData<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>StorageData<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 35,
            "key.doc.name" : "data(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>data<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Storage09DelegatedA0C4data6forKeyxSgSS_tAA0A4DataRzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:7Storage09DelegatedA0C4data6forKeyxSgSS_tAA0A4DataRzlF1DL_xmfp\">D<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage09DelegatedA0C4data6forKeyxSgSS_tAA0A4DataRzlF1DL_xmfp\">D<\/ref.generic_type_param> : <ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 737,
            "key.line" : 140,
            "key.modulename" : "Storage",
            "key.name" : "data(forKey:)",
            "key.namelength" : 42,
            "key.nameoffset" : 4119,
            "key.offset" : 4114,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF"
              },
              {
                "key.usr" : "s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF"
              }
            ],
            "key.parsed_declaration" : "open func data<D: StorageData>(forKey key: StoreKey) -> D?",
            "key.parsed_scope.end" : 158,
            "key.parsed_scope.start" : 140,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D : <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type><\/Declaration>",
                "key.column" : 20,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 11,
                    "key.offset" : 4127
                  }
                ],
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "StorageData"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 14,
                "key.line" : 140,
                "key.modulename" : "Storage",
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 4124,
                "key.offset" : 4124,
                "key.parsed_declaration" : "open func data<D: StorageData",
                "key.parsed_scope.end" : 140,
                "key.parsed_scope.start" : 140,
                "key.reusingastcontext" : false,
                "key.typename" : "D.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:7Storage09DelegatedA0C4data6forKeyxSgSS_tAA0A4DataRzlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : StorageData> (DelegatedStorage) -> (String) -> D?",
            "key.typeusr" : "$s6forKeyxSgSS_tc7Storage0C4DataRzluD",
            "key.usr" : "s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(_ value: <Type usr=\"s:Si\">Int<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 4857
              }
            ],
            "key.bodylength" : 47,
            "key.bodyoffset" : 4908,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Int`.\n\n- Parameter value: `Int` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: Int, forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"113\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySi_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ value: Int, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Int<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Int<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 113,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Int` to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 94,
            "key.line" : 160,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 39,
            "key.nameoffset" : 4867,
            "key.offset" : 4862,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3set_6forKeyySi_SStF"
              }
            ],
            "key.parsed_declaration" : "open func set(_ value: Int, forKey key: StoreKey)",
            "key.parsed_scope.end" : 162,
            "key.parsed_scope.start" : 160,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (Int, String) -> ()",
            "key.typeusr" : "$s_6forKeyySi_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySi_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(_ value: <Type usr=\"s:Sf\">Float<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 4962
              }
            ],
            "key.bodylength" : 47,
            "key.bodyoffset" : 5015,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Float`.\n\n- Parameter value: `Float` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: Float, forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"121\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySf_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ value: Float, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Float<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Float<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 121,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Float` to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 96,
            "key.line" : 164,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 41,
            "key.nameoffset" : 4972,
            "key.offset" : 4967,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3set_6forKeyySf_SStF"
              }
            ],
            "key.parsed_declaration" : "open func set(_ value: Float, forKey key: StoreKey)",
            "key.parsed_scope.end" : 166,
            "key.parsed_scope.start" : 164,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (Float, String) -> ()",
            "key.typeusr" : "$s_6forKeyySf_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySf_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(_ value: <Type usr=\"s:Sd\">Double<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 5069
              }
            ],
            "key.bodylength" : 47,
            "key.bodyoffset" : 5123,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Double`.\n\n- Parameter value: `Double` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: Double, forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"129\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySd_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ value: Double, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Double<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Double<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 129,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Double` to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 97,
            "key.line" : 168,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 42,
            "key.nameoffset" : 5079,
            "key.offset" : 5074,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3set_6forKeyySd_SStF"
              }
            ],
            "key.parsed_declaration" : "open func set(_ value: Double, forKey key: StoreKey)",
            "key.parsed_scope.end" : 170,
            "key.parsed_scope.start" : 168,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (Double, String) -> ()",
            "key.typeusr" : "$s_6forKeyySd_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySd_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(_ value: <Type usr=\"s:Sb\">Bool<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 5177
              }
            ],
            "key.bodylength" : 47,
            "key.bodyoffset" : 5229,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Bool`.\n\n- Parameter value: `Bool` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: Bool, forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"136\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySb_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ value: Bool, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Bool<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Bool<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 136,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Bool` to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 95,
            "key.line" : 172,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 40,
            "key.nameoffset" : 5187,
            "key.offset" : 5182,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3set_6forKeyySb_SStF"
              }
            ],
            "key.parsed_declaration" : "open func set(_ value: Bool, forKey key: StoreKey)",
            "key.parsed_scope.end" : 174,
            "key.parsed_scope.start" : 172,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (Bool, String) -> ()",
            "key.typeusr" : "$s_6forKeyySb_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySb_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(_ url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 5283
              }
            ],
            "key.bodylength" : 60,
            "key.bodyoffset" : 5333,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `URL`.\n\n- Parameter url: `URL` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(_ url: URL?, forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"144\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ url: URL?, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>URL<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>URL<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 144,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`URL` to store."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 106,
            "key.line" : 176,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 38,
            "key.nameoffset" : 5293,
            "key.offset" : 5288,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF"
              }
            ],
            "key.parsed_declaration" : "open func set(_ url: URL?, forKey key: StoreKey)",
            "key.parsed_scope.end" : 178,
            "key.parsed_scope.start" : 176,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (URL?, String) -> ()",
            "key.typeusr" : "$s_6forKeyy10Foundation3URLVSg_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(_ string: <Type usr=\"s:SS\">String<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 5400
              }
            ],
            "key.bodylength" : 48,
            "key.bodyoffset" : 5455,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `String`.\n\n- Parameter string: `String` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(_ string: String, forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"152\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySS_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ string: String, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>String<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>string<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>String<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 152,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`String` to store."
                  }
                ],
                "name" : "string"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>string<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 99,
            "key.line" : 180,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 43,
            "key.nameoffset" : 5410,
            "key.offset" : 5405,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3set_6forKeyySS_SStF"
              }
            ],
            "key.parsed_declaration" : "open func set(_ string: String, forKey key: StoreKey)",
            "key.parsed_scope.end" : 182,
            "key.parsed_scope.start" : 180,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String, String) -> ()",
            "key.typeusr" : "$s_6forKeyySS_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySS_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(_ value: (some Any)?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 5510
              }
            ],
            "key.bodylength" : 280,
            "key.bodyoffset" : 5569,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified generic value.\n\n- Parameter value: Generic value to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: (some Any)?, forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"160\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyyqd__Sg_SStlF<\/USR><Declaration>@Storage.StorageActor func set(_ value: (some Any)?, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified generic value.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Generic value to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 160,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Generic value to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <syntaxtype.keyword>Any<\/syntaxtype.keyword><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 335,
            "key.line" : 184,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 47,
            "key.nameoffset" : 5520,
            "key.offset" : 5515,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3set_6forKeyyqd__Sg_SStlF"
              },
              {
                "key.usr" : "s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF"
              }
            ],
            "key.parsed_declaration" : "open func set(_ value: (some Any)?, forKey key: StoreKey)",
            "key.parsed_scope.end" : 194,
            "key.parsed_scope.start" : 184,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : " (DelegatedStorage) -> ((some Any)?, String) -> ()",
            "key.typeusr" : "$s_6forKeyyxSg_SStcluD",
            "key.usr" : "s:7StorageAAP3set_6forKeyyqd__Sg_SStlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(object: Any?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 6094
              }
            ],
            "key.bodylength" : 310,
            "key.bodyoffset" : 6152,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `NSCoding` conforming object.\n\n- Parameter value: `NSCoding` conforming object.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 15,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `NSCoding` conforming object.\n\n- Parameter value: `NSCoding` conforming object.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor open func set(object: Any?, forKey key: StoreKey) throws",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift\" line=\"202\" column=\"15\"><Name>set(object:forKey:)<\/Name><USR>s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF<\/USR><Declaration>@Storage.StorageActor open func set(object: Any?, forKey key: StoreKey) throws<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>NSCoding<\/codeVoice> conforming object.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>NSCoding<\/codeVoice> conforming object.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 202,
            "key.doc.name" : "set(object:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`NSCoding` conforming object."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 233,
            "key.docoffset" : 5856,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>object<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 364,
            "key.line" : 202,
            "key.modulename" : "Storage",
            "key.name" : "set(object:forKey:)",
            "key.namelength" : 39,
            "key.nameoffset" : 6104,
            "key.offset" : 6099,
            "key.parsed_declaration" : "open func set(object: Any?, forKey key: StoreKey) throws",
            "key.parsed_scope.end" : 210,
            "key.parsed_scope.start" : 202,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 168,
                "key.line" : 207,
                "key.modulename" : "Storage",
                "key.name" : "data",
                "key.namelength" : 4,
                "key.nameoffset" : 6258,
                "key.offset" : 6254,
                "key.parsed_declaration" : "let data = try NSKeyedArchiver.archivedData(withRootObject: object,\n                                            requiringSecureCoding: object is NSSecureCoding)",
                "key.parsed_scope.end" : 207,
                "key.parsed_scope.start" : 207,
                "key.reusingastcontext" : false,
                "key.typename" : "Data",
                "key.typeusr" : "$s10Foundation4DataVD",
                "key.usr" : "s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF4dataL_10Foundation4DataVvp"
              }
            ],
            "key.typename" : "(DelegatedStorage) -> (Any?, String) throws -> ()",
            "key.typeusr" : "$s6object6forKeyyypSg_SStKcD",
            "key.usr" : "s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(encodable: <Type usr=\"s:SE\">Encodable<\/Type>?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 6469
              }
            ],
            "key.bodylength" : 260,
            "key.bodyoffset" : 6529,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Encodable`.\n\n- Parameter encodable: `Encodable` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(encodable: Encodable?, forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"168\" column=\"10\"><Name>set(encodable:forKey:)<\/Name><USR>s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF<\/USR><Declaration>@Storage.StorageActor func set(encodable: Encodable?, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Encodable<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>encodable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Encodable<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 168,
            "key.doc.name" : "set(encodable:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Encodable` to store."
                  }
                ],
                "name" : "encodable"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>encodable<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 316,
            "key.line" : 212,
            "key.modulename" : "Storage",
            "key.name" : "set(encodable:forKey:)",
            "key.namelength" : 48,
            "key.nameoffset" : 6479,
            "key.offset" : 6474,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF"
              }
            ],
            "key.parsed_declaration" : "open func set(encodable: Encodable?, forKey key: StoreKey)",
            "key.parsed_scope.end" : 223,
            "key.parsed_scope.start" : 212,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> ((any Encodable)?, String) -> ()",
            "key.typeusr" : "$s9encodable6forKeyySE_pSg_SStcD",
            "key.usr" : "s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func set(_ data: (some <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type>)?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 6796
              }
            ],
            "key.bodylength" : 662,
            "key.bodyoffset" : 6869,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `StorageData`.\n\n- Parameter data: `StorageData` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n\n- Throws: `StorageDelegate` implementation possible errors.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func set(_ data: (some StorageData)?, forKey key: StoreKey) throws",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift\" line=\"22\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF<\/USR><Declaration>@Storage.StorageActor func set(_ data: (some StorageData)?, forKey key: StoreKey) throws<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>StorageData<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StorageData<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>StorageDelegate<\/codeVoice> implementation possible errors.<\/Para><\/ThrowsDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>StorageDelegate<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 22,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`StorageData` to store."
                  }
                ],
                "name" : "data"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 731,
            "key.line" : 225,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 54,
            "key.nameoffset" : 6806,
            "key.offset" : 6801,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF"
              }
            ],
            "key.parsed_declaration" : "open func set(_ data: (some StorageData)?, forKey key: StoreKey) throws",
            "key.parsed_scope.end" : 241,
            "key.parsed_scope.start" : 225,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF\">set(object:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : " (DelegatedStorage) -> ((some StorageData)?, String) throws -> ()",
            "key.typeusr" : "$s_6forKeyyxSg_SStKc7Storage0C4DataRzluD",
            "key.usr" : "s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func remove(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 7538
              }
            ],
            "key.bodylength" : 131,
            "key.bodyoffset" : 7578,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Removes the value of the specified `StoreKey`.\n\n- Parameter key: The `StoreKey` whose value you want to remove.\n",
            "key.doc.column" : 10,
            "key.doc.declaration" : "@Storage.StorageActor func remove(forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"183\" column=\"10\"><Name>remove(forKey:)<\/Name><USR>s:7StorageAAP6remove6forKeyySS_tF<\/USR><Declaration>@Storage.StorageActor func remove(forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Removes the value of the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> whose value you want to remove.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>Storage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 183,
            "key.doc.name" : "remove(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` whose value you want to remove."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remove<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 167,
            "key.line" : 243,
            "key.modulename" : "Storage",
            "key.name" : "remove(forKey:)",
            "key.namelength" : 28,
            "key.nameoffset" : 7548,
            "key.offset" : 7543,
            "key.overrides" : [
              {
                "key.usr" : "s:7StorageAAP6remove6forKeyySS_tF"
              },
              {
                "key.usr" : "s:7Storage0A8DelegateP6remove6forKeyySS_tKF"
              }
            ],
            "key.parsed_declaration" : "open func remove(forKey key: StoreKey)",
            "key.parsed_scope.end" : 249,
            "key.parsed_scope.start" : 243,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> ()",
            "key.typeusr" : "$s6forKeyySS_tcD",
            "key.usr" : "s:7StorageAAP6remove6forKeyySS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public func hash(_ key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7755
              }
            ],
            "key.bodylength" : 38,
            "key.bodyoffset" : 7800,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Hash `StoreKey` using SHA-512.",
            "key.doc.column" : 17,
            "key.doc.comment" : "Hash `StoreKey` using SHA-512.",
            "key.doc.declaration" : "@Storage.StorageActor public func hash(_ key: StoreKey) -> String",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift\" line=\"252\" column=\"17\"><Name>hash(_:)<\/Name><USR>s:7Storage09DelegatedA0C4hashyS2SF<\/USR><Declaration>@Storage.StorageActor public func hash(_ key: StoreKey) -&gt; String<\/Declaration><CommentParts><Abstract><Para>Hash <codeVoice>StoreKey<\/codeVoice> using SHA-512.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 252,
            "key.doc.name" : "hash(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 35,
            "key.docoffset" : 7716,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/DelegatedStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hash<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 77,
            "key.line" : 252,
            "key.modulename" : "Storage",
            "key.name" : "hash(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 7767,
            "key.offset" : 7762,
            "key.parsed_declaration" : "public func hash(_ key: StoreKey) -> String",
            "key.parsed_scope.end" : 254,
            "key.parsed_scope.start" : 252,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(DelegatedStorage) -> (String) -> String",
            "key.typeusr" : "$syS2ScD",
            "key.usr" : "s:7Storage09DelegatedA0C4hashyS2SF"
          }
        ],
        "key.typename" : "DelegatedStorage.Type",
        "key.typeusr" : "$s7Storage09DelegatedA0CmD",
        "key.usr" : "s:7Storage09DelegatedA0C"
      }
    ]
  }
}, {
  "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5377,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias StoreKey = <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 60
          }
        ],
        "key.column" : 18,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`StoreKey` definition aka. `String`.",
        "key.doc.column" : 18,
        "key.doc.comment" : "`StoreKey` definition aka. `String`.",
        "key.doc.declaration" : "public typealias StoreKey = String",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"4\" column=\"18\"><Name>StoreKey<\/Name><USR>s:7Storage8StoreKeya<\/USR><Declaration>public typealias StoreKey = String<\/Declaration><CommentParts><Abstract><Para><codeVoice>StoreKey<\/codeVoice> definition aka. <codeVoice>String<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 4,
        "key.doc.name" : "StoreKey",
        "key.doc.type" : "Other",
        "key.doclength" : 41,
        "key.docoffset" : 19,
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>StoreKey<\/decl.name> = <ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 27,
        "key.line" : 4,
        "key.modulename" : "Storage",
        "key.name" : "StoreKey",
        "key.namelength" : 8,
        "key.nameoffset" : 77,
        "key.offset" : 67,
        "key.parsed_declaration" : "public typealias StoreKey = String",
        "key.parsed_scope.end" : 4,
        "key.parsed_scope.start" : 4,
        "key.reusingastcontext" : false,
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:7Storage8StoreKeya"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public protocol Storage : <Type usr=\"s:7Storage0A8DelegateP\">StorageDelegate<\/Type>, <Type usr=\"s:s8SendableP\">Sendable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 134
          },
          {
            "key.attribute" : "source.decl.attribute._custom",
            "key.length" : 13,
            "key.offset" : 120
          }
        ],
        "key.bodylength" : 5189,
        "key.bodyoffset" : 186,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`Storage` protocol.",
        "key.doc.column" : 17,
        "key.doc.comment" : "`Storage` protocol.",
        "key.doc.declaration" : "@Storage.StorageActor public protocol Storage : Storage.StorageDelegate, Sendable",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"8\" column=\"17\"><Name>Storage<\/Name><USR>s:7StorageAAP<\/USR><Declaration>@Storage.StorageActor public protocol Storage : Storage.StorageDelegate, Sendable<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> protocol.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 8,
        "key.doc.name" : "Storage",
        "key.doc.type" : "Class",
        "key.doclength" : 24,
        "key.docoffset" : 96,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 159
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 176
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Storage<\/decl.name> : <ref.protocol usr=\"s:7Storage0A8DelegateP\">StorageDelegate<\/ref.protocol>, <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "StorageDelegate"
          },
          {
            "key.name" : "Sendable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 5235,
        "key.line" : 8,
        "key.modulename" : "Storage",
        "key.name" : "Storage",
        "key.namelength" : 7,
        "key.nameoffset" : 150,
        "key.offset" : 141,
        "key.parsed_declaration" : "public protocol Storage: StorageDelegate, Sendable",
        "key.parsed_scope.end" : 184,
        "key.parsed_scope.start" : 8,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func register(defaults registration: [<Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type> : Any])<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Adds the contents of the specified dictionary to the registration domain.\n\n- Parameter defaults: The dictionary of keys and values you want to register.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Adds the contents of the specified dictionary to the registration domain.\n\n- Parameter defaults: The dictionary of keys and values you want to register.",
            "key.doc.declaration" : "@Storage.StorageActor func register(defaults registration: [StoreKey : Any])",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"14\" column=\"10\"><Name>register(defaults:)<\/Name><USR>s:7StorageAAP8register8defaultsySDySSypG_tF<\/USR><Declaration>@Storage.StorageActor func register(defaults registration: [StoreKey : Any])<\/Declaration><CommentParts><Abstract><Para>Adds the contents of the specified dictionary to the registration domain.<\/Para><\/Abstract><Parameters><Parameter><Name>defaults<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The dictionary of keys and values you want to register.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 14,
            "key.doc.name" : "register(defaults:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The dictionary of keys and values you want to register."
                  }
                ],
                "name" : "defaults"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 174,
            "key.docoffset" : 191,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>defaults<\/decl.var.parameter.argument_label> <decl.var.parameter.name>registration<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 53,
            "key.line" : 14,
            "key.modulename" : "Storage",
            "key.name" : "register(defaults:)",
            "key.namelength" : 48,
            "key.nameoffset" : 375,
            "key.offset" : 370,
            "key.parsed_declaration" : "func register(defaults registration: [StoreKey: Any])",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> ([String : Any]) -> ()",
            "key.typeusr" : "$s8defaultsySDySSypG_tcD",
            "key.usr" : "s:7StorageAAP8register8defaultsySDySSypG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func value&lt;V&gt;(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:7StorageAAP5value6forKeyqd__SgSS_tlF1VL_qd__mfp\">V<\/Type>?<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the generic value associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the generic value associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func value<V>(forKey key: StoreKey) -> V?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"21\" column=\"10\"><Name>value(forKey:)<\/Name><USR>s:7StorageAAP5value6forKeyqd__SgSS_tlF<\/USR><Declaration>@Storage.StorageActor func value&lt;V&gt;(forKey key: StoreKey) -&gt; V?<\/Declaration><CommentParts><Abstract><Para>Returns the generic value associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 21,
            "key.doc.name" : "value(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 132,
            "key.docoffset" : 429,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>value<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7StorageAAP5value6forKeyqd__SgSS_tlF1VL_qd__mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:7StorageAAP5value6forKeyqd__SgSS_tlF1VL_qd__mfp\">V<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 41,
            "key.line" : 21,
            "key.modulename" : "Storage",
            "key.name" : "value(forKey:)",
            "key.namelength" : 30,
            "key.nameoffset" : 571,
            "key.offset" : 566,
            "key.parsed_declaration" : "func value<V>(forKey key: StoreKey) -> V?",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>V<\/Declaration>",
                "key.column" : 16,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.line" : 21,
                "key.modulename" : "Storage",
                "key.name" : "V",
                "key.namelength" : 1,
                "key.nameoffset" : 577,
                "key.offset" : 577,
                "key.parsed_declaration" : "func value<V",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.reusingastcontext" : false,
                "key.typename" : "V.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:7StorageAAP5value6forKeyqd__SgSS_tlF1VL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, V where Self : Storage> (Self) -> (String) -> V?",
            "key.typeusr" : "$s6forKeyqd__SgSS_tcluD",
            "key.usr" : "s:7StorageAAP5value6forKeyqd__SgSS_tlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func decodable&lt;D&gt;(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF1DL_qd__mfp\">D<\/Type>? where <Type usr=\"s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF1DL_qd__mfp\">D<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Decodable` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `Decodable` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func decodable<D>(forKey key: StoreKey) -> D? where D : Decodable",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"28\" column=\"10\"><Name>decodable(forKey:)<\/Name><USR>s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF<\/USR><Declaration>@Storage.StorageActor func decodable&lt;D&gt;(forKey key: StoreKey) -&gt; D? where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Decodable<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 28,
            "key.doc.name" : "decodable(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 130,
            "key.docoffset" : 613,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decodable<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 56,
            "key.line" : 28,
            "key.modulename" : "Storage",
            "key.name" : "decodable(forKey:)",
            "key.namelength" : 45,
            "key.nameoffset" : 753,
            "key.offset" : 748,
            "key.parsed_declaration" : "func decodable<D: Decodable>(forKey key: StoreKey) -> D?",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 28,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 20,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 766
                  }
                ],
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 28,
                "key.modulename" : "Storage",
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 763,
                "key.offset" : 763,
                "key.parsed_declaration" : "func decodable<D: Decodable",
                "key.parsed_scope.end" : 28,
                "key.parsed_scope.start" : 28,
                "key.reusingastcontext" : false,
                "key.typename" : "D.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, D where Self : Storage, D : Decodable> (Self) -> (String) -> D?",
            "key.typeusr" : "$s6forKeyqd__SgSS_tcSeRd__luD",
            "key.usr" : "s:7StorageAAP9decodable6forKeyqd__SgSS_tSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func data&lt;D&gt;(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF1DL_qd__mfp\">D<\/Type>? where <Type usr=\"s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF1DL_qd__mfp\">D<\/Type> : <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type><\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `StorageData` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `StorageData` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func data<D>(forKey key: StoreKey) -> D? where D : Storage.StorageData",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"35\" column=\"10\"><Name>data(forKey:)<\/Name><USR>s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF<\/USR><Declaration>@Storage.StorageActor func data&lt;D&gt;(forKey key: StoreKey) -&gt; D? where D : Storage.StorageData<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>StorageData<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 35,
            "key.doc.name" : "data(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 132,
            "key.docoffset" : 810,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>data<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param> : <ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 53,
            "key.line" : 35,
            "key.modulename" : "Storage",
            "key.name" : "data(forKey:)",
            "key.namelength" : 42,
            "key.nameoffset" : 952,
            "key.offset" : 947,
            "key.parsed_declaration" : "func data<D: StorageData>(forKey key: StoreKey) -> D?",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 35,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF\">data&lt;D&gt;(forKey: StoreKey) throws -&gt; D? where D : StorageData<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D : <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type><\/Declaration>",
                "key.column" : 15,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 11,
                    "key.offset" : 960
                  }
                ],
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "StorageData"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 14,
                "key.line" : 35,
                "key.modulename" : "Storage",
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 957,
                "key.offset" : 957,
                "key.parsed_declaration" : "func data<D: StorageData",
                "key.parsed_scope.end" : 35,
                "key.parsed_scope.start" : 35,
                "key.reusingastcontext" : false,
                "key.typename" : "D.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, D where Self : Storage, D : StorageData> (Self) -> (String) -> D?",
            "key.typeusr" : "$s6forKeyqd__SgSS_tc7Storage0C4DataRd__luD",
            "key.usr" : "s:7StorageAAP4data6forKeyqd__SgSS_tAA0A4DataRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func string(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `String` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `String` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func string(forKey key: StoreKey) -> String?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"42\" column=\"10\"><Name>string(forKey:)<\/Name><USR>s:7StorageAAP6string6forKeySSSgSS_tF<\/USR><Declaration>@Storage.StorageActor func string(forKey key: StoreKey) -&gt; String?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>String<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 42,
            "key.doc.name" : "string(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 127,
            "key.docoffset" : 1006,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>string<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 44,
            "key.line" : 42,
            "key.modulename" : "Storage",
            "key.name" : "string(forKey:)",
            "key.namelength" : 28,
            "key.nameoffset" : 1143,
            "key.offset" : 1138,
            "key.parsed_declaration" : "func string(forKey key: StoreKey) -> String?",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 42,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> String?",
            "key.typeusr" : "$s6forKeySSSgSS_tcD",
            "key.usr" : "s:7StorageAAP6string6forKeySSSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func array(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; [Any]?<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `[Any]` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `[Any]` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func array(forKey key: StoreKey) -> [Any]?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"49\" column=\"10\"><Name>array(forKey:)<\/Name><USR>s:7StorageAAP5array6forKeySayypGSgSS_tF<\/USR><Declaration>@Storage.StorageActor func array(forKey key: StoreKey) -&gt; [Any]?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>[Any]<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 49,
            "key.doc.name" : "array(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 126,
            "key.docoffset" : 1188,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>array<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 42,
            "key.line" : 49,
            "key.modulename" : "Storage",
            "key.name" : "array(forKey:)",
            "key.namelength" : 27,
            "key.nameoffset" : 1324,
            "key.offset" : 1319,
            "key.parsed_declaration" : "func array(forKey key: StoreKey) -> [Any]?",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> [Any]?",
            "key.typeusr" : "$s6forKeySayypGSgSS_tcD",
            "key.usr" : "s:7StorageAAP5array6forKeySayypGSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Sh\">Set<\/Type>&lt;<Type usr=\"s:s11AnyHashableV\">AnyHashable<\/Type>&gt;?<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Set<AnyHashable>` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `Set<AnyHashable>` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func set(forKey key: StoreKey) -> Set<AnyHashable>?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"56\" column=\"10\"><Name>set(forKey:)<\/Name><USR>s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF<\/USR><Declaration>@Storage.StorageActor func set(forKey key: StoreKey) -&gt; Set&lt;AnyHashable&gt;?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Set&lt;AnyHashable&gt;<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 56,
            "key.doc.name" : "set(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 137,
            "key.docoffset" : 1367,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;<ref.struct usr=\"s:s11AnyHashableV\">AnyHashable<\/ref.struct>&gt;?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 51,
            "key.line" : 56,
            "key.modulename" : "Storage",
            "key.name" : "set(forKey:)",
            "key.namelength" : 25,
            "key.nameoffset" : 1514,
            "key.offset" : 1509,
            "key.parsed_declaration" : "func set(forKey key: StoreKey) -> Set<AnyHashable>?",
            "key.parsed_scope.end" : 56,
            "key.parsed_scope.start" : 56,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> Set<AnyHashable>?",
            "key.typeusr" : "$s6forKeyShys11AnyHashableVGSgSS_tcD",
            "key.usr" : "s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func dictionary(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; [<Type usr=\"s:SS\">String<\/Type> : Any]?<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `[String: Any]` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `[String: Any]` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func dictionary(forKey key: StoreKey) -> [String : Any]?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"63\" column=\"10\"><Name>dictionary(forKey:)<\/Name><USR>s:7StorageAAP10dictionary6forKeySDySSypGSgSS_tF<\/USR><Declaration>@Storage.StorageActor func dictionary(forKey key: StoreKey) -&gt; [String : Any]?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>[String: Any]<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 63,
            "key.doc.name" : "dictionary(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 134,
            "key.docoffset" : 1566,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>dictionary<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <syntaxtype.keyword>Any<\/syntaxtype.keyword>]?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 55,
            "key.line" : 63,
            "key.modulename" : "Storage",
            "key.name" : "dictionary(forKey:)",
            "key.namelength" : 32,
            "key.nameoffset" : 1710,
            "key.offset" : 1705,
            "key.parsed_declaration" : "func dictionary(forKey key: StoreKey) -> [String: Any]?",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 63,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> [String : Any]?",
            "key.typeusr" : "$s6forKeySDySSypGSgSS_tcD",
            "key.usr" : "s:7StorageAAP10dictionary6forKeySDySSypGSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func stringArray(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; [<Type usr=\"s:SS\">String<\/Type>]?<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `[String]` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `[String]` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func stringArray(forKey key: StoreKey) -> [String]?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"70\" column=\"10\"><Name>stringArray(forKey:)<\/Name><USR>s:7StorageAAP11stringArray6forKeySaySSGSgSS_tF<\/USR><Declaration>@Storage.StorageActor func stringArray(forKey key: StoreKey) -&gt; [String]?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>[String]<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 70,
            "key.doc.name" : "stringArray(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 129,
            "key.docoffset" : 1766,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>stringArray<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 51,
            "key.line" : 70,
            "key.modulename" : "Storage",
            "key.name" : "stringArray(forKey:)",
            "key.namelength" : 33,
            "key.nameoffset" : 1905,
            "key.offset" : 1900,
            "key.parsed_declaration" : "func stringArray(forKey key: StoreKey) -> [String]?",
            "key.parsed_scope.end" : 70,
            "key.parsed_scope.start" : 70,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> [String]?",
            "key.typeusr" : "$s6forKeySaySSGSgSS_tcD",
            "key.usr" : "s:7StorageAAP11stringArray6forKeySaySSGSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func integer(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Int` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `Int` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func integer(forKey key: StoreKey) -> Int",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"77\" column=\"10\"><Name>integer(forKey:)<\/Name><USR>s:7StorageAAP7integer6forKeySiSS_tF<\/USR><Declaration>@Storage.StorageActor func integer(forKey key: StoreKey) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Int<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 77,
            "key.doc.name" : "integer(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 124,
            "key.docoffset" : 1957,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>integer<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 41,
            "key.line" : 77,
            "key.modulename" : "Storage",
            "key.name" : "integer(forKey:)",
            "key.namelength" : 29,
            "key.nameoffset" : 2091,
            "key.offset" : 2086,
            "key.parsed_declaration" : "func integer(forKey key: StoreKey) -> Int",
            "key.parsed_scope.end" : 77,
            "key.parsed_scope.start" : 77,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> Int",
            "key.typeusr" : "$s6forKeySiSS_tcD",
            "key.usr" : "s:7StorageAAP7integer6forKeySiSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func float(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type><\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Float` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `Float` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func float(forKey key: StoreKey) -> Float",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"84\" column=\"10\"><Name>float(forKey:)<\/Name><USR>s:7StorageAAP5float6forKeySfSS_tF<\/USR><Declaration>@Storage.StorageActor func float(forKey key: StoreKey) -&gt; Float<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Float<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 84,
            "key.doc.name" : "float(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 126,
            "key.docoffset" : 2133,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>float<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 41,
            "key.line" : 84,
            "key.modulename" : "Storage",
            "key.name" : "float(forKey:)",
            "key.namelength" : 27,
            "key.nameoffset" : 2269,
            "key.offset" : 2264,
            "key.parsed_declaration" : "func float(forKey key: StoreKey) -> Float",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 84,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> Float",
            "key.typeusr" : "$s6forKeySfSS_tcD",
            "key.usr" : "s:7StorageAAP5float6forKeySfSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func double(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type><\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Double` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `Double` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func double(forKey key: StoreKey) -> Double",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"91\" column=\"10\"><Name>double(forKey:)<\/Name><USR>s:7StorageAAP6double6forKeySdSS_tF<\/USR><Declaration>@Storage.StorageActor func double(forKey key: StoreKey) -&gt; Double<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Double<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 91,
            "key.doc.name" : "double(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 127,
            "key.docoffset" : 2311,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>double<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 43,
            "key.line" : 91,
            "key.modulename" : "Storage",
            "key.name" : "double(forKey:)",
            "key.namelength" : 28,
            "key.nameoffset" : 2448,
            "key.offset" : 2443,
            "key.parsed_declaration" : "func double(forKey key: StoreKey) -> Double",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 91,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> Double",
            "key.typeusr" : "$s6forKeySdSS_tcD",
            "key.usr" : "s:7StorageAAP6double6forKeySdSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func bool(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `Bool` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `Bool` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func bool(forKey key: StoreKey) -> Bool",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"98\" column=\"10\"><Name>bool(forKey:)<\/Name><USR>s:7StorageAAP4bool6forKeySbSS_tF<\/USR><Declaration>@Storage.StorageActor func bool(forKey key: StoreKey) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>Bool<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 98,
            "key.doc.name" : "bool(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 125,
            "key.docoffset" : 2492,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bool<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 39,
            "key.line" : 98,
            "key.modulename" : "Storage",
            "key.name" : "bool(forKey:)",
            "key.namelength" : 26,
            "key.nameoffset" : 2627,
            "key.offset" : 2622,
            "key.parsed_declaration" : "func bool(forKey key: StoreKey) -> Bool",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 98,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> Bool",
            "key.typeusr" : "$s6forKeySbSS_tcD",
            "key.usr" : "s:7StorageAAP4bool6forKeySbSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func url(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; <Type usr=\"s:10Foundation3URLV\">URL<\/Type>?<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `URL` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `URL` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor func url(forKey key: StoreKey) -> URL?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"105\" column=\"10\"><Name>url(forKey:)<\/Name><USR>s:7StorageAAP3url6forKey10Foundation3URLVSgSS_tF<\/USR><Declaration>@Storage.StorageActor func url(forKey key: StoreKey) -&gt; URL?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>URL<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 105,
            "key.doc.name" : "url(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 124,
            "key.docoffset" : 2667,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>url<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 38,
            "key.line" : 105,
            "key.modulename" : "Storage",
            "key.name" : "url(forKey:)",
            "key.namelength" : 25,
            "key.nameoffset" : 2801,
            "key.offset" : 2796,
            "key.parsed_declaration" : "func url(forKey key: StoreKey) -> URL?",
            "key.parsed_scope.end" : 105,
            "key.parsed_scope.start" : 105,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> URL?",
            "key.typeusr" : "$s6forKey10Foundation3URLVSgSS_tcD",
            "key.usr" : "s:7StorageAAP3url6forKey10Foundation3URLVSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(_ value: <Type usr=\"s:Si\">Int<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Int`.\n\n- Parameter value: `Int` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `Int`.\n\n- Parameter value: `Int` to store.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: Int, forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"113\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySi_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ value: Int, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Int<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Int<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 113,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Int` to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 196,
            "key.docoffset" : 2840,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 44,
            "key.line" : 113,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 39,
            "key.nameoffset" : 3046,
            "key.offset" : 3041,
            "key.parsed_declaration" : "func set(_ value: Int, forKey key: StoreKey)",
            "key.parsed_scope.end" : 113,
            "key.parsed_scope.start" : 113,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (Int, String) -> ()",
            "key.typeusr" : "$s_6forKeyySi_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySi_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(_ value: <Type usr=\"s:Sf\">Float<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Float`.\n\n- Parameter value: `Float` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `Float`.\n\n- Parameter value: `Float` to store.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: Float, forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"121\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySf_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ value: Float, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Float<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Float<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 121,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Float` to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 200,
            "key.docoffset" : 3091,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 46,
            "key.line" : 121,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 41,
            "key.nameoffset" : 3301,
            "key.offset" : 3296,
            "key.parsed_declaration" : "func set(_ value: Float, forKey key: StoreKey)",
            "key.parsed_scope.end" : 121,
            "key.parsed_scope.start" : 121,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (Float, String) -> ()",
            "key.typeusr" : "$s_6forKeyySf_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySf_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(_ value: <Type usr=\"s:Sd\">Double<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Double`.\n\n- Parameter value: `Double` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `Double`.\n\n- Parameter value: `Double` to store.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: Double, forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"129\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySd_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ value: Double, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Double<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Double<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 129,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Double` to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 202,
            "key.docoffset" : 3348,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 47,
            "key.line" : 129,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 42,
            "key.nameoffset" : 3560,
            "key.offset" : 3555,
            "key.parsed_declaration" : "func set(_ value: Double, forKey key: StoreKey)",
            "key.parsed_scope.end" : 129,
            "key.parsed_scope.start" : 129,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (Double, String) -> ()",
            "key.typeusr" : "$s_6forKeyySd_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySd_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(_ value: <Type usr=\"s:Sb\">Bool<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Bool`.\n\n- Parameter value: `Bool` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `Bool`.\n\n- Parameter value: `Bool` to store.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: Bool, forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"136\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySb_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ value: Bool, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Bool<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Bool<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 136,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Bool` to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 198,
            "key.docoffset" : 3607,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 45,
            "key.line" : 136,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 40,
            "key.nameoffset" : 3815,
            "key.offset" : 3810,
            "key.parsed_declaration" : "func set(_ value: Bool, forKey key: StoreKey)",
            "key.parsed_scope.end" : 136,
            "key.parsed_scope.start" : 136,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (Bool, String) -> ()",
            "key.typeusr" : "$s_6forKeyySb_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySb_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(_ url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type>?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `URL`.\n\n- Parameter url: `URL` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `URL`.\n\n- Parameter url: `URL` to store.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor func set(_ url: URL?, forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"144\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ url: URL?, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>URL<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>URL<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 144,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`URL` to store."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 194,
            "key.docoffset" : 3861,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 43,
            "key.line" : 144,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 38,
            "key.nameoffset" : 4065,
            "key.offset" : 4060,
            "key.parsed_declaration" : "func set(_ url: URL?, forKey key: StoreKey)",
            "key.parsed_scope.end" : 144,
            "key.parsed_scope.start" : 144,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (URL?, String) -> ()",
            "key.typeusr" : "$s_6forKeyy10Foundation3URLVSg_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(_ string: <Type usr=\"s:SS\">String<\/Type>, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `String`.\n\n- Parameter string: `String` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `String`.\n\n- Parameter string: `String` to store.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor func set(_ string: String, forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"152\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyySS_SStF<\/USR><Declaration>@Storage.StorageActor func set(_ string: String, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>String<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>string<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>String<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 152,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`String` to store."
                  }
                ],
                "name" : "string"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 203,
            "key.docoffset" : 4109,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>string<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 48,
            "key.line" : 152,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 43,
            "key.nameoffset" : 4322,
            "key.offset" : 4317,
            "key.parsed_declaration" : "func set(_ string: String, forKey key: StoreKey)",
            "key.parsed_scope.end" : 152,
            "key.parsed_scope.start" : 152,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String, String) -> ()",
            "key.typeusr" : "$s_6forKeyySS_SStcD",
            "key.usr" : "s:7StorageAAP3set_6forKeyySS_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(_ value: (some Any)?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified generic value.\n\n- Parameter value: Generic value to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified generic value.\n\n- Parameter value: Generic value to store.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor func set(_ value: (some Any)?, forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"160\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyyqd__Sg_SStlF<\/USR><Declaration>@Storage.StorageActor func set(_ value: (some Any)?, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified generic value.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Generic value to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 160,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Generic value to store."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 212,
            "key.docoffset" : 4371,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <syntaxtype.keyword>Any<\/syntaxtype.keyword><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 52,
            "key.line" : 160,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 47,
            "key.nameoffset" : 4593,
            "key.offset" : 4588,
            "key.parsed_declaration" : "func set(_ value: (some Any)?, forKey key: StoreKey)",
            "key.parsed_scope.end" : 160,
            "key.parsed_scope.start" : 160,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> ((some Any)?, String) -> ()",
            "key.typeusr" : "$s_6forKeyyqd__Sg_SStcluD",
            "key.usr" : "s:7StorageAAP3set_6forKeyyqd__Sg_SStlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(encodable: <Type usr=\"s:SE\">Encodable<\/Type>?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `Encodable`.\n\n- Parameter encodable: `Encodable` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `Encodable`.\n\n- Parameter encodable: `Encodable` to store.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor func set(encodable: Encodable?, forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"168\" column=\"10\"><Name>set(encodable:forKey:)<\/Name><USR>s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF<\/USR><Declaration>@Storage.StorageActor func set(encodable: Encodable?, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>Encodable<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>encodable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Encodable<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 168,
            "key.doc.name" : "set(encodable:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Encodable` to store."
                  }
                ],
                "name" : "encodable"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 212,
            "key.docoffset" : 4646,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>encodable<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 53,
            "key.line" : 168,
            "key.modulename" : "Storage",
            "key.name" : "set(encodable:forKey:)",
            "key.namelength" : 48,
            "key.nameoffset" : 4868,
            "key.offset" : 4863,
            "key.parsed_declaration" : "func set(encodable: Encodable?, forKey key: StoreKey)",
            "key.parsed_scope.end" : 168,
            "key.parsed_scope.start" : 168,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> ((any Encodable)?, String) -> ()",
            "key.typeusr" : "$s9encodable6forKeyySE_pSg_SStcD",
            "key.usr" : "s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(_ data: (some <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type>)?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `StorageData`.\n\n- Parameter data: `StorageData` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `StorageData`.\n\n- Parameter data: `StorageData` to store.\n- Parameter key: The `StoreKey` with which to associate the value.",
            "key.doc.declaration" : "@Storage.StorageActor func set(_ data: (some StorageData)?, forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"176\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF<\/USR><Declaration>@Storage.StorageActor func set(_ data: (some StorageData)?, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>StorageData<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StorageData<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 176,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`StorageData` to store."
                  }
                ],
                "name" : "data"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 211,
            "key.docoffset" : 4922,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 59,
            "key.line" : 176,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 54,
            "key.nameoffset" : 5143,
            "key.offset" : 5138,
            "key.parsed_declaration" : "func set(_ data: (some StorageData)?, forKey key: StoreKey)",
            "key.parsed_scope.end" : 176,
            "key.parsed_scope.start" : 176,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set_6forKeyyqd__Sg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7StorageAAP3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> ((some StorageData)?, String) -> ()",
            "key.typeusr" : "$s_6forKeyyqd__Sg_SStc7Storage0C4DataRd__luD",
            "key.usr" : "s:7StorageAAP3set_6forKeyyqd__Sg_SStAA0A4DataRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func remove(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Removes the value of the specified `StoreKey`.\n\n- Parameter key: The `StoreKey` whose value you want to remove.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Removes the value of the specified `StoreKey`.\n\n- Parameter key: The `StoreKey` whose value you want to remove.",
            "key.doc.declaration" : "@Storage.StorageActor func remove(forKey key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift\" line=\"183\" column=\"10\"><Name>remove(forKey:)<\/Name><USR>s:7StorageAAP6remove6forKeyySS_tF<\/USR><Declaration>@Storage.StorageActor func remove(forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Removes the value of the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> whose value you want to remove.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 183,
            "key.doc.name" : "remove(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` whose value you want to remove."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 133,
            "key.docoffset" : 5203,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Storage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remove<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 33,
            "key.line" : 183,
            "key.modulename" : "Storage",
            "key.name" : "remove(forKey:)",
            "key.namelength" : 28,
            "key.nameoffset" : 5346,
            "key.offset" : 5341,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage0A8DelegateP6remove6forKeyySS_tKF"
              }
            ],
            "key.parsed_declaration" : "func remove(forKey key: StoreKey)",
            "key.parsed_scope.end" : 183,
            "key.parsed_scope.start" : 183,
            "key.receivers" : [
              {
                "key.usr" : "s:7StorageAAP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Storage> (Self) -> (String) -> ()",
            "key.typeusr" : "$s6forKeyySS_tcD",
            "key.usr" : "s:7StorageAAP6remove6forKeyySS_tF"
          }
        ],
        "key.typename" : "Storage.Type",
        "key.typeusr" : "$s7StorageAA_pmD",
        "key.usr" : "s:7StorageAAP"
      }
    ]
  }
}, {
  "\/Users\/vagrant\/git\/Sources\/Storage\/StorageActor.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 181,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@globalActor public actor StorageActor<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 105
          },
          {
            "key.attribute" : "source.decl.attribute.globalActor",
            "key.length" : 12,
            "key.offset" : 92
          }
        ],
        "key.bodylength" : 47,
        "key.bodyoffset" : 132,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A global actor responsible for managing access and write operations in storage systems.",
        "key.doc.column" : 14,
        "key.doc.comment" : "A global actor responsible for managing access and write operations in storage systems.",
        "key.doc.declaration" : "@globalActor public actor StorageActor",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageActor.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageActor.swift\" line=\"3\" column=\"14\"><Name>StorageActor<\/Name><USR>s:7Storage0A5ActorC<\/USR><Declaration>@globalActor public actor StorageActor<\/Declaration><CommentParts><Abstract><Para>A global actor responsible for managing access and write operations in storage systems.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 3,
        "key.doc.name" : "StorageActor",
        "key.doc.type" : "Class",
        "key.doclength" : 92,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageActor.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@globalActor<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>actor<\/syntaxtype.keyword> <decl.name>StorageActor<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 68,
        "key.line" : 3,
        "key.modulename" : "Storage",
        "key.name" : "StorageActor",
        "key.namelength" : 12,
        "key.nameoffset" : 118,
        "key.offset" : 112,
        "key.parsed_declaration" : "public actor StorageActor",
        "key.parsed_scope.end" : 5,
        "key.parsed_scope.start" : 3,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let shared: <Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 137
              }
            ],
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The shared actor instance that will be used to provide mutually-exclusive\naccess to declarations annotated with the given global actor type.\n\nThe value of this property must always evaluate to the same actor\ninstance.",
            "key.doc.declaration" : "static var shared: Self.ActorType { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The value of this property must always evaluate to the same actor instance."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>shared<\/Name><USR>s:12_Concurrency11GlobalActorP6shared0C4TypeQzvpZ<\/USR><Declaration>static var shared: Self.ActorType { get }<\/Declaration><CommentParts><Abstract><Para>The shared actor instance that will be used to provide mutually-exclusive access to declarations annotated with the given global actor type.<\/Para><\/Abstract><Discussion><Para>The value of this property must always evaluate to the same actor instance.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>GlobalActor<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "shared",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageActor.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>shared<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 34,
            "key.line" : 4,
            "key.modulename" : "Storage",
            "key.name" : "shared",
            "key.namelength" : 6,
            "key.nameoffset" : 155,
            "key.offset" : 144,
            "key.overrides" : [
              {
                "key.usr" : "s:12_Concurrency11GlobalActorP6shared0C4TypeQzvpZ"
              }
            ],
            "key.parsed_declaration" : "public static let shared = StorageActor()",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.reusingastcontext" : false,
            "key.typename" : "StorageActor",
            "key.typeusr" : "$s7Storage0A5ActorCD",
            "key.usr" : "s:12_Concurrency11GlobalActorP6shared0C4TypeQzvpZ"
          }
        ],
        "key.typename" : "StorageActor.Type",
        "key.typeusr" : "$s7Storage0A5ActorCmD",
        "key.usr" : "s:7Storage0A5ActorC"
      }
    ]
  }
}, {
  "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1101,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol StorageData : <Type usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 187
          }
        ],
        "key.bodylength" : 148,
        "key.bodyoffset" : 233,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Indicates that the conforming type is a contiguous collection of raw bytes\nwhose underlying storage is directly accessible by withUnsafeBytes.",
        "key.doc.column" : 17,
        "key.doc.comment" : "Indicates that the conforming type is a contiguous collection of raw bytes\nwhose underlying storage is directly accessible by withUnsafeBytes.",
        "key.doc.declaration" : "public protocol StorageData : ContiguousBytes",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift\" line=\"6\" column=\"17\"><Name>StorageData<\/Name><USR>s:7Storage0A4DataP<\/USR><Declaration>public protocol StorageData : ContiguousBytes<\/Declaration><CommentParts><Abstract><Para>Indicates that the conforming type is a contiguous collection of raw bytes whose underlying storage is directly accessible by withUnsafeBytes.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 6,
        "key.doc.name" : "StorageData",
        "key.doc.type" : "Class",
        "key.doclength" : 151,
        "key.docoffset" : 36,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 216
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>StorageData<\/decl.name> : <ref.protocol usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ContiguousBytes"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 188,
        "key.line" : 6,
        "key.modulename" : "Storage",
        "key.name" : "StorageData",
        "key.namelength" : 11,
        "key.nameoffset" : 203,
        "key.offset" : 194,
        "key.parsed_declaration" : "public protocol StorageData: ContiguousBytes",
        "key.parsed_scope.end" : 13,
        "key.parsed_scope.start" : 6,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(bytes: some <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type>) throws<\/Declaration>",
            "key.column" : 5,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `StorageData`.\n\n- Parameter bytes: `ContiguousBytes` of `StorageData`.\n",
            "key.doc.column" : 5,
            "key.doc.comment" : "Create a `StorageData`.\n\n- Parameter bytes: `ContiguousBytes` of `StorageData`.",
            "key.doc.declaration" : "init(bytes: some StorageData) throws",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift\" line=\"12\" column=\"5\"><Name>init(bytes:)<\/Name><USR>s:7Storage0A4DataP5bytesxqd___tKcAaBRd__lufc<\/USR><Declaration>init(bytes: some StorageData) throws<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>StorageData<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>bytes<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>ContiguousBytes<\/codeVoice> of <codeVoice>StorageData<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 12,
            "key.doc.name" : "init(bytes:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`ContiguousBytes` of `StorageData`."
                  }
                ],
                "name" : "bytes"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 101,
            "key.docoffset" : 238,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>bytes<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 36,
            "key.line" : 12,
            "key.modulename" : "Storage",
            "key.name" : "init(bytes:)",
            "key.namelength" : 29,
            "key.nameoffset" : 344,
            "key.offset" : 344,
            "key.parsed_declaration" : "init(bytes: some StorageData) throws",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage0A4DataP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : StorageData> (Self.Type) -> (some StorageData) throws -> Self",
            "key.typeusr" : "$s5bytesxqd___tKc7Storage0B4DataRd__luD",
            "key.usr" : "s:7Storage0A4DataP5bytesxqd___tKcAaBRd__lufc"
          }
        ],
        "key.typename" : "StorageData.Type",
        "key.typeusr" : "$s7Storage0A4Data_pmD",
        "key.usr" : "s:7Storage0A4DataP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>protocol ContiguousBytes<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 384
          }
        ],
        "key.bodylength" : 96,
        "key.bodyoffset" : 418,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Indicates that the conforming type is a contiguous collection of raw bytes\nwhose underlying storage is directly accessible by withUnsafeBytes.",
        "key.doc.declaration" : "@available(macOS 10.10, iOS 8.0, watchOS 2.0, tvOS 9.0, *)\nprotocol ContiguousBytes",
        "key.doc.full_as_xml" : "<Class><Name>ContiguousBytes<\/Name><USR>s:10Foundation15ContiguousBytesP<\/USR><Declaration>@available(macOS 10.10, iOS 8.0, watchOS 2.0, tvOS 9.0, *)\nprotocol ContiguousBytes<\/Declaration><CommentParts><Abstract><Para>Indicates that the conforming type is a contiguous collection of raw bytes whose underlying storage is directly accessible by withUnsafeBytes.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "ContiguousBytes",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ContiguousBytes<\/decl.name><\/decl.protocol>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 124,
        "key.modulename" : "Foundation",
        "key.name" : "ContiguousBytes",
        "key.namelength" : 15,
        "key.nameoffset" : 401,
        "key.offset" : 391,
        "key.parsed_declaration" : "public extension ContiguousBytes",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 15,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 42,
            "key.bodyoffset" : 470,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Data` representation.",
            "key.doc.column" : 9,
            "key.doc.comment" : "`Data` representation.",
            "key.doc.declaration" : "var data: Data { get }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift\" line=\"17\" column=\"9\"><Name>data<\/Name><USR>s:10Foundation15ContiguousBytesP7StorageE4dataAA4DataVvp<\/USR><Declaration>var data: Data { get }<\/Declaration><CommentParts><Abstract><Para><codeVoice>Data<\/codeVoice> representation.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 17,
            "key.doc.name" : "data",
            "key.doc.type" : "Other",
            "key.doclength" : 27,
            "key.docoffset" : 423,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 59,
            "key.line" : 17,
            "key.modulename" : "Storage",
            "key.name" : "data",
            "key.namelength" : 4,
            "key.nameoffset" : 458,
            "key.offset" : 454,
            "key.parsed_declaration" : "var data: Data",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 17,
            "key.receivers" : [
              {
                "key.usr" : "s:10Foundation15ContiguousBytesP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Data",
            "key.typeusr" : "$s10Foundation4DataVD",
            "key.usr" : "s:10Foundation15ContiguousBytesP7StorageE4dataAA4DataVvp"
          }
        ],
        "key.typename" : "ContiguousBytes.Type",
        "key.typeusr" : "$s10Foundation15ContiguousBytes_pmD",
        "key.usr" : "s:10Foundation15ContiguousBytesP"
      },
      {
        "key.annotated_decl" : "<Declaration>@preconcurrency protocol HashFunction : <Type usr=\"s:s8SendableP\">Sendable<\/Type><\/Declaration>",
        "key.bodylength" : 139,
        "key.bodyoffset" : 541,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A type that performs cryptographically secure hashing.\n\nThe ``HashFunction`` protocol describes an interface for computing a\nfixed-length digest from an arbitrarily large collection of bytes. Because\nthe digest is small, you can quickly compare the digests to detect a\ndifference in two corresponding data sets. Alternatively, transmit or store\ndata with its digest to detect changes introduced after initially\ncalculating the digest.\n\nUse one of the protocol’s adopters, like ``SHA256``, ``SHA384``, or\n``SHA512``, to output a digest whose value varies significantly over even\nsmall differences in the input data.\n\nChecking a digest doesn’t guard against changes made by a malicious user who\nalso changes the digest to match. To handle this, compute a message\nauthentication code (MAC) like ``HMAC`` instead. MACs rely on hashing, but\nincorporate a secret cryptographic key into the digest computation. Only a\nuser that has the key can generate a valid MAC.",
        "key.doc.declaration" : "@available(iOS 13.0, macOS 10.15, watchOS 6.0, tvOS 13.0, *)\n@preconcurrency protocol HashFunction : Sendable",
        "key.doc.discussion" : [
          {
            "Para" : "The `HashFunction` protocol describes an interface for computing a fixed-length digest from an arbitrarily large collection of bytes. Because the digest is small, you can quickly compare the digests to detect a difference in two corresponding data sets. Alternatively, transmit or store data with its digest to detect changes introduced after initially calculating the digest."
          },
          {
            "Para" : "Use one of the protocol’s adopters, like `SHA256`, `SHA384`, or `SHA512`, to output a digest whose value varies significantly over even small differences in the input data."
          },
          {
            "Para" : "Checking a digest doesn’t guard against changes made by a malicious user who also changes the digest to match. To handle this, compute a message authentication code (MAC) like `HMAC` instead. MACs rely on hashing, but incorporate a secret cryptographic key into the digest computation. Only a user that has the key can generate a valid MAC."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>HashFunction<\/Name><USR>s:9CryptoKit12HashFunctionP<\/USR><Declaration>@available(iOS 13.0, macOS 10.15, watchOS 6.0, tvOS 13.0, *)\n@preconcurrency protocol HashFunction : Sendable<\/Declaration><CommentParts><Abstract><Para>A type that performs cryptographically secure hashing.<\/Para><\/Abstract><Discussion><Para>The <codeVoice>HashFunction<\/codeVoice> protocol describes an interface for computing a fixed-length digest from an arbitrarily large collection of bytes. Because the digest is small, you can quickly compare the digests to detect a difference in two corresponding data sets. Alternatively, transmit or store data with its digest to detect changes introduced after initially calculating the digest.<\/Para><Para>Use one of the protocol’s adopters, like <codeVoice>SHA256<\/codeVoice>, <codeVoice>SHA384<\/codeVoice>, or <codeVoice>SHA512<\/codeVoice>, to output a digest whose value varies significantly over even small differences in the input data.<\/Para><Para>Checking a digest doesn’t guard against changes made by a malicious user who also changes the digest to match. To handle this, compute a message authentication code (MAC) like <codeVoice>HMAC<\/codeVoice> instead. MACs rely on hashing, but incorporate a secret cryptographic key into the digest computation. Only a user that has the key can generate a valid MAC.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "HashFunction",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@preconcurrency<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HashFunction<\/decl.name> : <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.protocol>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 164,
        "key.modulename" : "CryptoKit",
        "key.name" : "HashFunction",
        "key.namelength" : 12,
        "key.nameoffset" : 527,
        "key.offset" : 517,
        "key.parsed_declaration" : "extension HashFunction",
        "key.parsed_scope.end" : 26,
        "key.parsed_scope.start" : 22,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>static func hash(string: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 88,
            "key.bodyoffset" : 590,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hash<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>string<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 133,
            "key.line" : 23,
            "key.modulename" : "Storage",
            "key.name" : "hash(string:)",
            "key.namelength" : 20,
            "key.nameoffset" : 558,
            "key.offset" : 546,
            "key.parsed_declaration" : "static func hash(string: String) -> String",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 23,
            "key.receivers" : [
              {
                "key.usr" : "s:9CryptoKit12HashFunctionP"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:9CryptoKit12HashFunctionPAAE4hash4data6DigestQzqd___t10Foundation12DataProtocolRd__lFZ\">hash(data:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : HashFunction> (Self.Type) -> (String) -> String",
            "key.typeusr" : "$s6stringS2S_tcD",
            "key.usr" : "s:9CryptoKit12HashFunctionP7StorageE4hash6stringS2S_tFZ"
          }
        ],
        "key.typename" : "HashFunction.Type",
        "key.typeusr" : "$s9CryptoKit12HashFunction_pmD",
        "key.usr" : "s:9CryptoKit12HashFunctionP"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol Encodable<\/Declaration>",
        "key.bodylength" : 81,
        "key.bodyoffset" : 704,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A type that can encode itself to an external representation.",
        "key.doc.declaration" : "protocol Encodable",
        "key.doc.full_as_xml" : "<Class><Name>Encodable<\/Name><USR>s:SE<\/USR><Declaration>protocol Encodable<\/Declaration><CommentParts><Abstract><Para>A type that can encode itself to an external representation.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Encodable",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Encodable<\/decl.name><\/decl.protocol>",
        "key.groupname" : "Misc",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 103,
        "key.modulename" : "Swift",
        "key.name" : "Encodable",
        "key.namelength" : 9,
        "key.nameoffset" : 693,
        "key.offset" : 683,
        "key.parsed_declaration" : "extension Encodable",
        "key.parsed_scope.end" : 32,
        "key.parsed_scope.start" : 28,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func encode() throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data<\/Type><\/Declaration>",
            "key.bodylength" : 44,
            "key.bodyoffset" : 739,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 75,
            "key.line" : 29,
            "key.modulename" : "Storage",
            "key.name" : "encode()",
            "key.namelength" : 8,
            "key.nameoffset" : 714,
            "key.offset" : 709,
            "key.parsed_declaration" : "func encode() throws -> Data",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 29,
            "key.receivers" : [
              {
                "key.usr" : "s:SE"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SE6encode2toys7Encoder_p_tKF\">encode(to:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Encodable> (Self) -> () throws -> Data",
            "key.typeusr" : "$s10Foundation4DataVyKcD",
            "key.usr" : "s:SE7StorageE6encode10Foundation4DataVyKF"
          }
        ],
        "key.typename" : "Encodable.Type",
        "key.typeusr" : "$sSE_pmD",
        "key.usr" : "s:SE"
      },
      {
        "key.annotated_decl" : "<Declaration>@frozen @_addressableForDependencies struct Data : <Type usr=\"s:SQ\">Equatable<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type>, <Type usr=\"s:Sk\">RandomAccessCollection<\/Type>, <Type usr=\"s:SM\">MutableCollection<\/Type>, <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type>, <Type usr=\"s:10Foundation19MutableDataProtocolP\">MutableDataProtocol<\/Type>, <Type usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/Type>, <Type usr=\"s:s8SendableP\">Sendable<\/Type><\/Declaration>",
        "key.bodylength" : 282,
        "key.bodyoffset" : 817,
        "key.decl_lang" : "source.lang.swift",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 804
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@_addressableForDependencies<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Data<\/decl.name> : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol>, <ref.protocol usr=\"s:Sk\">RandomAccessCollection<\/ref.protocol>, <ref.protocol usr=\"s:SM\">MutableCollection<\/ref.protocol>, <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol>, <ref.protocol usr=\"s:10Foundation19MutableDataProtocolP\">MutableDataProtocol<\/ref.protocol>, <ref.protocol usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/ref.protocol>, <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "StorageData"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 312,
        "key.modulename" : "Foundation",
        "key.name" : "Data",
        "key.namelength" : 4,
        "key.nameoffset" : 798,
        "key.offset" : 788,
        "key.parsed_declaration" : "extension Data: StorageData",
        "key.parsed_scope.end" : 47,
        "key.parsed_scope.start" : 34,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(bytes: some <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 910
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 948,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `Data`.\n\n- Parameter bytes: `StorageData` of `Data`.\n",
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `Data`.\n\n- Parameter bytes: `StorageData` of `Data`.",
            "key.doc.declaration" : "public init(bytes: some StorageData)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift\" line=\"40\" column=\"12\"><Name>init(bytes:)<\/Name><USR>s:10Foundation4DataV7StorageE5bytesACx_tcAD0cB0Rzlufc<\/USR><Declaration>public init(bytes: some StorageData)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>Data<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>bytes<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StorageData<\/codeVoice> of <codeVoice>Data<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 40,
            "key.doc.name" : "init(bytes:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`StorageData` of `Data`."
                  }
                ],
                "name" : "bytes"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 83,
            "key.docoffset" : 822,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>bytes<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 63,
            "key.line" : 40,
            "key.modulename" : "Storage",
            "key.name" : "init(bytes:)",
            "key.namelength" : 29,
            "key.nameoffset" : 917,
            "key.offset" : 917,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage0A4DataP5bytesxqd___tKcAaBRd__lufc"
              }
            ],
            "key.parsed_declaration" : "public init(bytes: some StorageData)",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 40,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV5bytes5countACSV_Sitcfc\">init(bytes:count:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV6bufferACSRyxG_tclufc\">init&lt;SourceType&gt;(buffer: UnsafeBufferPointer&lt;SourceType&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV6bufferACSryxG_tclufc\">init&lt;SourceType&gt;(buffer: UnsafeMutableBufferPointer&lt;SourceType&gt;)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV9repeating5countACs5UInt8V_Sitcfc\">init(repeating:count:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV8capacityACSi_tcfc\">init(capacity:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV5countACSi_tcfc\">init(count:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataVACycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV11bytesNoCopy5count11deallocatorACSv_SiAC11DeallocatorOtcfc\">init(bytesNoCopy:count:deallocator:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataVyACxcSTRzs5UInt8V7ElementRtzlufc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV5bytesACx_tcSTRzs5UInt8V7ElementRtzlufc\">init&lt;S&gt;(bytes: S) where S : Sequence, S.Element == UInt8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV10contentsOf7optionsAcA3URLVh_So20NSDataReadingOptionsVtKcfc\">init(contentsOf:options:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV13base64Encoded7optionsACSgSSh_So27NSDataBase64DecodingOptionsVtcfc\">init?(base64Encoded: __shared String, options: Data.Base64DecodingOptions = [])<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV13base64Encoded7optionsACSgACh_So27NSDataBase64DecodingOptionsVtcfc\">init?(base64Encoded: __shared Data, options: Data.Base64DecodingOptions = [])<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV11referencingACSo6NSDataCh_tcfc\">init(referencing:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : " (Data.Type) -> (some StorageData) -> Data",
            "key.typeusr" : "$s5bytes10Foundation4DataVx_tc7Storage0dC0RzluD",
            "key.usr" : "s:10Foundation4DataV7StorageE5bytesACx_tcAD0cB0Rzlufc"
          },
          {
            "key.annotated_decl" : "<Declaration>func decode&lt;D&gt;(_ type: <Type usr=\"s:10Foundation4DataV7StorageE6decodeyxxmKSeRzlF1DL_xmfp\">D<\/Type>.Type) throws -&gt; <Type usr=\"s:10Foundation4DataV7StorageE6decodeyxxmKSeRzlF1DL_xmfp\">D<\/Type> where <Type usr=\"s:10Foundation4DataV7StorageE6decodeyxxmKSeRzlF1DL_xmfp\">D<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.bodylength" : 56,
            "key.bodyoffset" : 1041,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:10Foundation4DataV7StorageE6decodeyxxmKSeRzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:10Foundation4DataV7StorageE6decodeyxxmKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:10Foundation4DataV7StorageE6decodeyxxmKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:10Foundation4DataV7StorageE6decodeyxxmKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 112,
            "key.line" : 44,
            "key.modulename" : "Storage",
            "key.name" : "decode(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 991,
            "key.offset" : 986,
            "key.parsed_declaration" : "func decode<D: Decodable>(_ type: D.Type) throws -> D",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 44,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 1001
                  }
                ],
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageData.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Decodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 12,
                "key.line" : 44,
                "key.modulename" : "Storage",
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 998,
                "key.offset" : 998,
                "key.parsed_declaration" : "func decode<D: Decodable",
                "key.parsed_scope.end" : 44,
                "key.parsed_scope.start" : 44,
                "key.reusingastcontext" : false,
                "key.typename" : "D.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:10Foundation4DataV7StorageE6decodeyxxmKSeRzlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : Decodable> (Data) -> (D.Type) throws -> D",
            "key.typeusr" : "$syxxmKcSeRzluD",
            "key.usr" : "s:10Foundation4DataV7StorageE6decodeyxxmKSeRzlF"
          }
        ],
        "key.typename" : "Data.Type",
        "key.typeusr" : "$s10Foundation4DataVmD",
        "key.usr" : "s:10Foundation4DataV"
      }
    ]
  }
}, {
  "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1005,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol StorageDelegate : AnyObject<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 32
          }
        ],
        "key.bodylength" : 927,
        "key.bodyoffset" : 76,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`StorageDelegate` protocol.",
        "key.doc.column" : 17,
        "key.doc.comment" : "`StorageDelegate` protocol.",
        "key.doc.declaration" : "public protocol StorageDelegate : AnyObject",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift\" line=\"2\" column=\"17\"><Name>StorageDelegate<\/Name><USR>s:7Storage0A8DelegateP<\/USR><Declaration>public protocol StorageDelegate : AnyObject<\/Declaration><CommentParts><Abstract><Para><codeVoice>StorageDelegate<\/codeVoice> protocol.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "StorageDelegate",
        "key.doc.type" : "Class",
        "key.doclength" : 32,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 65
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>StorageDelegate<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "AnyObject"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 965,
        "key.line" : 2,
        "key.modulename" : "Storage",
        "key.name" : "StorageDelegate",
        "key.namelength" : 15,
        "key.nameoffset" : 48,
        "key.offset" : 39,
        "key.parsed_declaration" : "public protocol StorageDelegate: AnyObject",
        "key.parsed_scope.end" : 33,
        "key.parsed_scope.start" : 2,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func data&lt;D&gt;(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) throws -&gt; <Type usr=\"s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF1DL_qd__mfp\">D<\/Type>? where <Type usr=\"s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF1DL_qd__mfp\">D<\/Type> : <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute._custom",
                "key.length" : 13,
                "key.offset" : 284
              }
            ],
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `StorageData` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n\n- Throws: `StorageDelegate` implementation possible errors.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the `StorageData` associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n\n- Throws: `StorageDelegate` implementation possible errors.",
            "key.doc.declaration" : "@Storage.StorageActor func data<D>(forKey key: StoreKey) throws -> D? where D : Storage.StorageData",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift\" line=\"11\" column=\"10\"><Name>data(forKey:)<\/Name><USR>s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF<\/USR><Declaration>@Storage.StorageActor func data&lt;D&gt;(forKey key: StoreKey) throws -&gt; D? where D : Storage.StorageData<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>StorageData<\/codeVoice> associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>StorageDelegate<\/codeVoice> implementation possible errors.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 11,
            "key.doc.name" : "data(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 198,
            "key.docoffset" : 81,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>data<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param> : <ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 60,
            "key.line" : 11,
            "key.modulename" : "Storage",
            "key.name" : "data(forKey:)",
            "key.namelength" : 42,
            "key.nameoffset" : 307,
            "key.offset" : 302,
            "key.parsed_declaration" : "func data<D: StorageData>(forKey key: StoreKey) throws -> D?",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage0A8DelegateP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D : <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type><\/Declaration>",
                "key.column" : 15,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 11,
                    "key.offset" : 315
                  }
                ],
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "StorageData"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 14,
                "key.line" : 11,
                "key.modulename" : "Storage",
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 312,
                "key.offset" : 312,
                "key.parsed_declaration" : "func data<D: StorageData",
                "key.parsed_scope.end" : 11,
                "key.parsed_scope.start" : 11,
                "key.reusingastcontext" : false,
                "key.typename" : "D.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, D where Self : StorageDelegate, D : StorageData> (Self) -> (String) throws -> D?",
            "key.typeusr" : "$s6forKeyqd__SgSS_tKc7Storage0C4DataRd__luD",
            "key.usr" : "s:7Storage0A8DelegateP4data6forKeyqd__SgSS_tKAA0A4DataRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func set(_ data: (some <Type usr=\"s:7Storage0A4DataP\">StorageData<\/Type>)?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute._custom",
                "key.length" : 13,
                "key.offset" : 650
              }
            ],
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `StorageData`.\n\n- Parameter data: `StorageData` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n\n- Throws: `StorageDelegate` implementation possible errors.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sets the value of the specified `StoreKey` to the specified `StorageData`.\n\n- Parameter data: `StorageData` to store.\n- Parameter key: The `StoreKey` with which to associate the value.\n\n- Throws: `StorageDelegate` implementation possible errors.",
            "key.doc.declaration" : "@Storage.StorageActor func set(_ data: (some StorageData)?, forKey key: StoreKey) throws",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift\" line=\"22\" column=\"10\"><Name>set(_:forKey:)<\/Name><USR>s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF<\/USR><Declaration>@Storage.StorageActor func set(_ data: (some StorageData)?, forKey key: StoreKey) throws<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>StorageData<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StorageData<\/codeVoice> to store.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>StorageDelegate<\/codeVoice> implementation possible errors.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 22,
            "key.doc.name" : "set(_:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`StorageData` to store."
                  }
                ],
                "name" : "data"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 277,
            "key.docoffset" : 368,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <ref.protocol usr=\"s:7Storage0A4DataP\">StorageData<\/ref.protocol><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 66,
            "key.line" : 22,
            "key.modulename" : "Storage",
            "key.name" : "set(_:forKey:)",
            "key.namelength" : 54,
            "key.nameoffset" : 673,
            "key.offset" : 668,
            "key.parsed_declaration" : "func set(_ data: (some StorageData)?, forKey key: StoreKey) throws",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage0A8DelegateP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : StorageDelegate> (Self) -> ((some StorageData)?, String) throws -> ()",
            "key.typeusr" : "$s_6forKeyyqd__Sg_SStKc7Storage0C4DataRd__luD",
            "key.usr" : "s:7Storage0A8DelegateP3set_6forKeyyqd__Sg_SStKAA0A4DataRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func remove(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute._custom",
                "key.length" : 13,
                "key.offset" : 944
              }
            ],
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Removes the value of the specified `StoreKey`.\n\n- Parameter key: The `StoreKey` whose value you want to remove.\n\n- Throws: `StorageDelegate` implementation possible errors.\n",
            "key.doc.column" : 10,
            "key.doc.comment" : "Removes the value of the specified `StoreKey`.\n\n- Parameter key: The `StoreKey` whose value you want to remove.\n\n- Throws: `StorageDelegate` implementation possible errors.",
            "key.doc.declaration" : "@Storage.StorageActor func remove(forKey key: StoreKey) throws",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift\" line=\"32\" column=\"10\"><Name>remove(forKey:)<\/Name><USR>s:7Storage0A8DelegateP6remove6forKeyySS_tKF<\/USR><Declaration>@Storage.StorageActor func remove(forKey key: StoreKey) throws<\/Declaration><CommentParts><Abstract><Para>Removes the value of the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> whose value you want to remove.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>StorageDelegate<\/codeVoice> implementation possible errors.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 32,
            "key.doc.name" : "remove(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` whose value you want to remove."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 199,
            "key.docoffset" : 740,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/StorageDelegate.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remove<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 40,
            "key.line" : 32,
            "key.modulename" : "Storage",
            "key.name" : "remove(forKey:)",
            "key.namelength" : 28,
            "key.nameoffset" : 967,
            "key.offset" : 962,
            "key.parsed_declaration" : "func remove(forKey key: StoreKey) throws",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 32,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage0A8DelegateP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : StorageDelegate> (Self) -> (String) throws -> ()",
            "key.typeusr" : "$s6forKeyySS_tKcD",
            "key.usr" : "s:7Storage0A8DelegateP6remove6forKeyySS_tKF"
          }
        ],
        "key.typename" : "StorageDelegate.Type",
        "key.typeusr" : "$s7Storage0A8Delegate_pmD",
        "key.usr" : "s:7Storage0A8DelegateP"
      }
    ]
  }
}, {
  "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4293,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public protocol StorePropertyWrapperProtocol<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 45
          },
          {
            "key.attribute" : "source.decl.attribute._custom",
            "key.length" : 13,
            "key.offset" : 31
          }
        ],
        "key.bodylength" : 240,
        "key.bodyoffset" : 91,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Property wrapper protocol.",
        "key.doc.column" : 17,
        "key.doc.comment" : "Property wrapper protocol.",
        "key.doc.declaration" : "@Storage.StorageActor public protocol StorePropertyWrapperProtocol",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"3\" column=\"17\"><Name>StorePropertyWrapperProtocol<\/Name><USR>s:7Storage28StorePropertyWrapperProtocolP<\/USR><Declaration>@Storage.StorageActor public protocol StorePropertyWrapperProtocol<\/Declaration><CommentParts><Abstract><Para>Property wrapper protocol.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 3,
        "key.doc.name" : "StorePropertyWrapperProtocol",
        "key.doc.type" : "Class",
        "key.doclength" : 31,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>StorePropertyWrapperProtocol<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 280,
        "key.line" : 3,
        "key.modulename" : "Storage",
        "key.name" : "StorePropertyWrapperProtocol",
        "key.namelength" : 28,
        "key.nameoffset" : 61,
        "key.offset" : 52,
        "key.parsed_declaration" : "public protocol StorePropertyWrapperProtocol",
        "key.parsed_scope.end" : 10,
        "key.parsed_scope.start" : 3,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype StorageType : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
            "key.column" : 20,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` type used by property wrapper.",
            "key.doc.column" : 20,
            "key.doc.comment" : "`Storage` type used by property wrapper.",
            "key.doc.declaration" : "associatedtype StorageType : Storage.Storage",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"5\" column=\"20\"><Name>StorageType<\/Name><USR>s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa<\/USR><Declaration>associatedtype StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> type used by property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 5,
            "key.doc.name" : "StorageType",
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 96,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>StorageType<\/decl.name> : <ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.associatedtype>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 35,
            "key.line" : 5,
            "key.modulename" : "Storage",
            "key.name" : "StorageType",
            "key.namelength" : 11,
            "key.nameoffset" : 160,
            "key.offset" : 145,
            "key.parsed_declaration" : "associatedtype StorageType: Storage",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 5,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Self.StorageType.Type",
            "key.typeusr" : "$s11StorageTypeQzmD",
            "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> var storage: <Type usr=\"s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa\">StorageType<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 255,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` used by property wrapper.",
            "key.doc.column" : 9,
            "key.doc.comment" : "`Storage` used by property wrapper.",
            "key.doc.declaration" : "@Storage.StorageActor var storage: StorageType { get }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"7\" column=\"9\"><Name>storage<\/Name><USR>s:7Storage28StorePropertyWrapperProtocolP7storage0A4TypeQzvp<\/USR><Declaration>@Storage.StorageActor var storage: StorageType { get }<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> used by property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 7,
            "key.doc.name" : "storage",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 185,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa\">StorageType<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.line" : 7,
            "key.modulename" : "Storage",
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 233,
            "key.offset" : 229,
            "key.parsed_declaration" : "var storage: StorageType",
            "key.parsed_scope.end" : 7,
            "key.parsed_scope.start" : 7,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Self.StorageType",
            "key.typeusr" : "$s11StorageTypeQzD",
            "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP7storage0A4TypeQzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> var key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 324,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`StoreKey` to store the value.",
            "key.doc.column" : 9,
            "key.doc.comment" : "`StoreKey` to store the value.",
            "key.doc.declaration" : "@Storage.StorageActor var key: StoreKey { get }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"9\" column=\"9\"><Name>key<\/Name><USR>s:7Storage28StorePropertyWrapperProtocolP3keySSvp<\/USR><Declaration>@Storage.StorageActor var key: StoreKey { get }<\/Declaration><CommentParts><Abstract><Para><codeVoice>StoreKey<\/codeVoice> to store the value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 9,
            "key.doc.name" : "key",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 266,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.line" : 9,
            "key.modulename" : "Storage",
            "key.name" : "key",
            "key.namelength" : 3,
            "key.nameoffset" : 309,
            "key.offset" : 305,
            "key.parsed_declaration" : "var key: StoreKey",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP3keySSvp"
          }
        ],
        "key.typename" : "StorePropertyWrapperProtocol.Type",
        "key.typeusr" : "$s7Storage28StorePropertyWrapperProtocol_pmD",
        "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.open",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open class StorePropertyWrapper&lt;StorageType&gt; : <Type usr=\"s:7Storage28StorePropertyWrapperProtocolP\">StorePropertyWrapperProtocol<\/Type> where <Type usr=\"s:7Storage20StorePropertyWrapperC0A4Typexmfp\">StorageType<\/Type> : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.open",
            "key.length" : 4,
            "key.offset" : 376
          }
        ],
        "key.bodylength" : 438,
        "key.bodyoffset" : 461,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Property wrapper reusable init class.",
        "key.doc.column" : 12,
        "key.doc.comment" : "Property wrapper reusable init class.",
        "key.doc.declaration" : "@Storage.StorageActor open class StorePropertyWrapper<StorageType> : StorePropertyWrapperProtocol where StorageType : Storage.Storage",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"13\" column=\"12\"><Name>StorePropertyWrapper<\/Name><USR>s:7Storage20StorePropertyWrapperC<\/USR><Declaration>@Storage.StorageActor open class StorePropertyWrapper&lt;StorageType&gt; : StorePropertyWrapperProtocol where StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para>Property wrapper reusable init class.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 13,
        "key.doc.name" : "StorePropertyWrapper",
        "key.doc.type" : "Class",
        "key.doclength" : 42,
        "key.docoffset" : 334,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 28,
            "key.offset" : 431
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>StorePropertyWrapper<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Storage20StorePropertyWrapperC0A4Typexmfp\"><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:7Storage28StorePropertyWrapperProtocolP\">StorePropertyWrapperProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage20StorePropertyWrapperC0A4Typexmfp\">StorageType<\/ref.generic_type_param> : <ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "StorePropertyWrapperProtocol"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 519,
        "key.line" : 13,
        "key.modulename" : "Storage",
        "key.name" : "StorePropertyWrapper",
        "key.namelength" : 20,
        "key.nameoffset" : 387,
        "key.offset" : 381,
        "key.parsed_declaration" : "open class StorePropertyWrapper<StorageType: Storage>: StorePropertyWrapperProtocol",
        "key.parsed_scope.end" : 29,
        "key.parsed_scope.start" : 13,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>StorageType : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
            "key.column" : 33,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` type used by property wrapper.",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype StorageType : Storage.Storage",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"5\" column=\"20\"><Name>StorageType<\/Name><USR>s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa<\/USR><Declaration>associatedtype StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> type used by property wrapper.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>StorePropertyWrapperProtocol<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 5,
            "key.doc.name" : "StorageType",
            "key.doc.type" : "Other",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 7,
                "key.offset" : 421
              }
            ],
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Storage"
              }
            ],
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 20,
            "key.line" : 13,
            "key.modulename" : "Storage",
            "key.name" : "StorageType",
            "key.namelength" : 11,
            "key.nameoffset" : 408,
            "key.offset" : 408,
            "key.parsed_declaration" : "open class StorePropertyWrapper<StorageType: Storage",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage20StorePropertyWrapperC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage20StorePropertyWrapperC0A4Typea\">StorageType<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "StorageType.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var storage: <Type usr=\"s:7Storage20StorePropertyWrapperC0A4Typexmfp\">StorageType<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 510
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` used by property wrapper.",
            "key.doc.column" : 14,
            "key.doc.comment" : "`Storage` used by property wrapper.",
            "key.doc.declaration" : "@Storage.StorageActor open var storage: StorageType",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"15\" column=\"14\"><Name>storage<\/Name><USR>s:7Storage20StorePropertyWrapperC7storagexvp<\/USR><Declaration>@Storage.StorageActor open var storage: StorageType<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> used by property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 15,
            "key.doc.name" : "storage",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 466,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage20StorePropertyWrapperC0A4Typexmfp\">StorageType<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.line" : 15,
            "key.modulename" : "Storage",
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 519,
            "key.offset" : 515,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP7storage0A4TypeQzvp"
              }
            ],
            "key.parsed_declaration" : "open var storage: StorageType",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage20StorePropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "StorageType",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:7Storage20StorePropertyWrapperC7storagexvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 583
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`StoreKey` to store the value.",
            "key.doc.column" : 14,
            "key.doc.comment" : "`StoreKey` to store the value.",
            "key.doc.declaration" : "@Storage.StorageActor open var key: StoreKey",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"17\" column=\"14\"><Name>key<\/Name><USR>s:7Storage20StorePropertyWrapperC3keySSvp<\/USR><Declaration>@Storage.StorageActor open var key: StoreKey<\/Declaration><CommentParts><Abstract><Para><codeVoice>StoreKey<\/codeVoice> to store the value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 17,
            "key.doc.name" : "key",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 544,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 17,
            "key.line" : 17,
            "key.modulename" : "Storage",
            "key.name" : "key",
            "key.namelength" : 3,
            "key.nameoffset" : 592,
            "key.offset" : 588,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP3keySSvp"
              }
            ],
            "key.parsed_declaration" : "open var key: StoreKey",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage20StorePropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:7Storage20StorePropertyWrapperC3keySSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public required init(_ storage: <Type usr=\"s:7Storage20StorePropertyWrapperC0A4Typexmfp\">StorageType<\/Type>, _ key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.required",
                "key.length" : 8,
                "key.offset" : 782
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 775
              }
            ],
            "key.bodylength" : 59,
            "key.bodyoffset" : 838,
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a property wrapper.\n\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.\n",
            "key.doc.column" : 21,
            "key.doc.comment" : "Create a property wrapper.\n\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.",
            "key.doc.declaration" : "@Storage.StorageActor public required init(_ storage: StorageType, _ key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"25\" column=\"21\"><Name>init(_:_:)<\/Name><USR>s:7Storage20StorePropertyWrapperCyACyxGx_SStcfc<\/USR><Declaration>@Storage.StorageActor public required init(_ storage: StorageType, _ key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Create a property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>storage<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Storage<\/codeVoice> used by property wrapper.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StoreKey<\/codeVoice> to store the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "init(_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Storage` used by property wrapper."
                  }
                ],
                "name" : "storage"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`StoreKey` to store the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 159,
            "key.docoffset" : 611,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>required<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>storage<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Storage20StorePropertyWrapperC0A4Typexmfp\">StorageType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 107,
            "key.line" : 25,
            "key.modulename" : "Storage",
            "key.name" : "init(_:_:)",
            "key.namelength" : 45,
            "key.nameoffset" : 791,
            "key.offset" : 791,
            "key.parsed_declaration" : "public required init(_ storage: StorageType, _ key: StoreKey)",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 25,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage20StorePropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<StorageType where StorageType : Storage> (StorePropertyWrapper<StorageType>.Type) -> (StorageType, String) -> StorePropertyWrapper<StorageType>",
            "key.typeusr" : "$sy7Storage20StorePropertyWrapperCyxGx_SStcD",
            "key.usr" : "s:7Storage20StorePropertyWrapperCyACyxGx_SStcfc"
          }
        ],
        "key.typename" : "StorePropertyWrapper<StorageType>.Type",
        "key.typeusr" : "$s7Storage20StorePropertyWrapperCyxGmD",
        "key.usr" : "s:7Storage20StorePropertyWrapperC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.open",
        "key.annotated_decl" : "<Declaration>@propertyWrapper @<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open class Store&lt;Value, StorageType&gt; : <Type usr=\"s:7Storage20StorePropertyWrapperC\">StorePropertyWrapper<\/Type>&lt;<Type usr=\"s:7Storage5StoreC0A4Typeq_mfp\">StorageType<\/Type>&gt; where <Type usr=\"s:7Storage5StoreC0A4Typeq_mfp\">StorageType<\/Type> : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.open",
            "key.length" : 4,
            "key.offset" : 950
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 933
          }
        ],
        "key.bodylength" : 567,
        "key.bodyoffset" : 1032,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`@Store` property wrapper.",
        "key.doc.column" : 12,
        "key.doc.comment" : "`@Store` property wrapper.",
        "key.doc.declaration" : "@propertyWrapper @Storage.StorageActor open class Store<Value, StorageType> : StorePropertyWrapper<StorageType> where StorageType : Storage.Storage",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"33\" column=\"12\"><Name>Store<\/Name><USR>s:7Storage5StoreC<\/USR><Declaration>@propertyWrapper @Storage.StorageActor open class Store&lt;Value, StorageType&gt; : StorePropertyWrapper&lt;StorageType&gt; where StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>@Store<\/codeVoice> property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 33,
        "key.doc.name" : "Store",
        "key.doc.type" : "Class",
        "key.doclength" : 31,
        "key.docoffset" : 902,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 33,
            "key.offset" : 997
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Store<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Storage5StoreC5Valuexmfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Storage5StoreC0A4Typeq_mfp\"><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.class usr=\"s:7Storage20StorePropertyWrapperC\">StorePropertyWrapper<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Storage5StoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage5StoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param> : <ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "StorePropertyWrapper<StorageType>"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 645,
        "key.line" : 33,
        "key.modulename" : "Storage",
        "key.name" : "Store",
        "key.namelength" : 5,
        "key.nameoffset" : 961,
        "key.offset" : 955,
        "key.parsed_declaration" : "open class Store<Value, StorageType: Storage>: StorePropertyWrapper<StorageType>",
        "key.parsed_scope.end" : 51,
        "key.parsed_scope.start" : 33,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Value<\/Declaration>",
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 5,
            "key.line" : 33,
            "key.modulename" : "Storage",
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 967,
            "key.offset" : 967,
            "key.parsed_declaration" : "open class Store<Value",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 33,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage5StoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Value.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:7Storage5StoreC5Valuexmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>StorageType : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
            "key.column" : 25,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` type used by property wrapper.",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype StorageType : Storage.Storage",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"5\" column=\"20\"><Name>StorageType<\/Name><USR>s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa<\/USR><Declaration>associatedtype StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> type used by property wrapper.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>StorePropertyWrapperProtocol<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 5,
            "key.doc.name" : "StorageType",
            "key.doc.type" : "Other",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 7,
                "key.offset" : 987
              }
            ],
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Storage"
              }
            ],
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 20,
            "key.line" : 33,
            "key.modulename" : "Storage",
            "key.name" : "StorageType",
            "key.namelength" : 11,
            "key.nameoffset" : 974,
            "key.offset" : 974,
            "key.parsed_declaration" : "open class Store<Value, StorageType: Storage",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 33,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage5StoreC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage20StorePropertyWrapperC0A4Typea\">StorageType<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "StorageType.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public convenience init(wrappedValue: <Type usr=\"s:7Storage5StoreC5Valuexmfp\">Value<\/Type>?, _ storage: <Type usr=\"s:7Storage5StoreC0A4Typeq_mfp\">StorageType<\/Type>, _ key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 1262
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1255
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 1343,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `Store` property wrapper.\n\n- Parameter wrappedValue: Default value.\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a `Store` property wrapper.\n\n- Parameter wrappedValue: Default value.\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.",
            "key.doc.declaration" : "@Storage.StorageActor public convenience init(wrappedValue: Value?, _ storage: StorageType, _ key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"41\" column=\"24\"><Name>init(wrappedValue:_:_:)<\/Name><USR>s:7Storage5StoreC12wrappedValue__ACyxq_GxSg_q_SStcfc<\/USR><Declaration>@Storage.StorageActor public convenience init(wrappedValue: Value?, _ storage: StorageType, _ key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>Store<\/codeVoice> property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>wrappedValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Default value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>storage<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Storage<\/codeVoice> used by property wrapper.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StoreKey<\/codeVoice> to store the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 41,
            "key.doc.name" : "init(wrappedValue:_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Default value."
                  }
                ],
                "name" : "wrappedValue"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Storage` used by property wrapper."
                  }
                ],
                "name" : "storage"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`StoreKey` to store the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 213,
            "key.docoffset" : 1037,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>wrappedValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Storage5StoreC5Valuexmfp\">Value<\/ref.generic_type_param>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>storage<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Storage5StoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 148,
            "key.line" : 41,
            "key.modulename" : "Storage",
            "key.name" : "init(wrappedValue:_:_:)",
            "key.namelength" : 67,
            "key.nameoffset" : 1274,
            "key.offset" : 1274,
            "key.parsed_declaration" : "public convenience init(wrappedValue: Value?, _ storage: StorageType, _ key: StoreKey)",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 41,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage5StoreC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage5StoreCyACyxq_Gq__SStcfc\">init(_:_:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Value, StorageType where StorageType : Storage> (Store<Value, StorageType>.Type) -> (Value?, StorageType, String) -> Store<Value, StorageType>",
            "key.typeusr" : "$s12wrappedValue__7Storage5StoreCyxq_GxSg_q_SStcD",
            "key.usr" : "s:7Storage5StoreC12wrappedValue__ACyxq_GxSg_q_SStcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var wrappedValue: <Type usr=\"s:7Storage5StoreC5Valuexmfp\">Value<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 1467
              }
            ],
            "key.bodylength" : 99,
            "key.bodyoffset" : 1498,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Property wrapper stored value.",
            "key.doc.column" : 14,
            "key.doc.comment" : "Property wrapper stored value.",
            "key.doc.declaration" : "@Storage.StorageActor open var wrappedValue: Value? { get set }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"47\" column=\"14\"><Name>wrappedValue<\/Name><USR>s:7Storage5StoreC12wrappedValuexSgvp<\/USR><Declaration>@Storage.StorageActor open var wrappedValue: Value? { get set }<\/Declaration><CommentParts><Abstract><Para>Property wrapper stored value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 47,
            "key.doc.name" : "wrappedValue",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 1428,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage5StoreC5Valuexmfp\">Value<\/ref.generic_type_param>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 126,
            "key.line" : 47,
            "key.modulename" : "Storage",
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 1476,
            "key.offset" : 1472,
            "key.parsed_declaration" : "open var wrappedValue: Value?",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 47,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage5StoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "Value?",
            "key.typeusr" : "$sxSgD",
            "key.usr" : "s:7Storage5StoreC12wrappedValuexSgvp"
          }
        ],
        "key.typename" : "Store<Value, StorageType>.Type",
        "key.typeusr" : "$s7Storage5StoreCyxq_GmD",
        "key.usr" : "s:7Storage5StoreC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.open",
        "key.annotated_decl" : "<Declaration>@propertyWrapper @<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open class UnwrappedStore&lt;Value, StorageType&gt; : <Type usr=\"s:7Storage28StorePropertyWrapperProtocolP\">StorePropertyWrapperProtocol<\/Type> where <Type usr=\"s:7Storage14UnwrappedStoreC0A4Typeq_mfp\">StorageType<\/Type> : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.open",
            "key.length" : 4,
            "key.offset" : 1659
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 1642
          }
        ],
        "key.bodylength" : 805,
        "key.bodyoffset" : 1745,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`@UnwrappedStore` property wrapper.",
        "key.doc.column" : 12,
        "key.doc.comment" : "`@UnwrappedStore` property wrapper.",
        "key.doc.declaration" : "@propertyWrapper @Storage.StorageActor open class UnwrappedStore<Value, StorageType> : StorePropertyWrapperProtocol where StorageType : Storage.Storage",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"55\" column=\"12\"><Name>UnwrappedStore<\/Name><USR>s:7Storage14UnwrappedStoreC<\/USR><Declaration>@propertyWrapper @Storage.StorageActor open class UnwrappedStore&lt;Value, StorageType&gt; : StorePropertyWrapperProtocol where StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>@UnwrappedStore<\/codeVoice> property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 55,
        "key.doc.name" : "UnwrappedStore",
        "key.doc.type" : "Class",
        "key.doclength" : 40,
        "key.docoffset" : 1602,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 28,
            "key.offset" : 1715
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>UnwrappedStore<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Storage14UnwrappedStoreC5Valuexmfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Storage14UnwrappedStoreC0A4Typeq_mfp\"><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:7Storage28StorePropertyWrapperProtocolP\">StorePropertyWrapperProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage14UnwrappedStoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param> : <ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "StorePropertyWrapperProtocol"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 887,
        "key.line" : 55,
        "key.modulename" : "Storage",
        "key.name" : "UnwrappedStore",
        "key.namelength" : 14,
        "key.nameoffset" : 1670,
        "key.offset" : 1664,
        "key.parsed_declaration" : "open class UnwrappedStore<Value, StorageType: Storage>: StorePropertyWrapperProtocol",
        "key.parsed_scope.end" : 81,
        "key.parsed_scope.start" : 55,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Value<\/Declaration>",
            "key.column" : 27,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 5,
            "key.line" : 55,
            "key.modulename" : "Storage",
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 1685,
            "key.offset" : 1685,
            "key.parsed_declaration" : "open class UnwrappedStore<Value",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 55,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage14UnwrappedStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Value.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:7Storage14UnwrappedStoreC5Valuexmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>StorageType : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
            "key.column" : 34,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` type used by property wrapper.",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype StorageType : Storage.Storage",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"5\" column=\"20\"><Name>StorageType<\/Name><USR>s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa<\/USR><Declaration>associatedtype StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> type used by property wrapper.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>StorePropertyWrapperProtocol<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 5,
            "key.doc.name" : "StorageType",
            "key.doc.type" : "Other",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 7,
                "key.offset" : 1705
              }
            ],
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Storage"
              }
            ],
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 20,
            "key.line" : 55,
            "key.modulename" : "Storage",
            "key.name" : "StorageType",
            "key.namelength" : 11,
            "key.nameoffset" : 1692,
            "key.offset" : 1692,
            "key.parsed_declaration" : "open class UnwrappedStore<Value, StorageType: Storage",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 55,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage14UnwrappedStoreC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage14UnwrappedStoreC0A4Typea\">StorageType<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "StorageType.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var storage: <Type usr=\"s:7Storage14UnwrappedStoreC0A4Typeq_mfp\">StorageType<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 1794
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` used by property wrapper.",
            "key.doc.column" : 14,
            "key.doc.comment" : "`Storage` used by property wrapper.",
            "key.doc.declaration" : "@Storage.StorageActor open var storage: StorageType",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"57\" column=\"14\"><Name>storage<\/Name><USR>s:7Storage14UnwrappedStoreC7storageq_vp<\/USR><Declaration>@Storage.StorageActor open var storage: StorageType<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> used by property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 57,
            "key.doc.name" : "storage",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 1750,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage14UnwrappedStoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.line" : 57,
            "key.modulename" : "Storage",
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 1803,
            "key.offset" : 1799,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP7storage0A4TypeQzvp"
              }
            ],
            "key.parsed_declaration" : "open var storage: StorageType",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 57,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage14UnwrappedStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "StorageType",
            "key.typeusr" : "$sq_D",
            "key.usr" : "s:7Storage14UnwrappedStoreC7storageq_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 1867
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`StoreKey` to store the value.",
            "key.doc.column" : 14,
            "key.doc.comment" : "`StoreKey` to store the value.",
            "key.doc.declaration" : "@Storage.StorageActor open var key: StoreKey",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"59\" column=\"14\"><Name>key<\/Name><USR>s:7Storage14UnwrappedStoreC3keySSvp<\/USR><Declaration>@Storage.StorageActor open var key: StoreKey<\/Declaration><CommentParts><Abstract><Para><codeVoice>StoreKey<\/codeVoice> to store the value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 59,
            "key.doc.name" : "key",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 1828,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 17,
            "key.line" : 59,
            "key.modulename" : "Storage",
            "key.name" : "key",
            "key.namelength" : 3,
            "key.nameoffset" : 1876,
            "key.offset" : 1872,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP3keySSvp"
              }
            ],
            "key.parsed_declaration" : "open var key: StoreKey",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 59,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage14UnwrappedStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:7Storage14UnwrappedStoreC3keySSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var defaultValue: <Type usr=\"s:7Storage14UnwrappedStoreC5Valuexmfp\">Value<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 1917
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Default value.",
            "key.doc.column" : 14,
            "key.doc.comment" : "Default value.",
            "key.doc.declaration" : "@Storage.StorageActor open var defaultValue: Value",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"61\" column=\"14\"><Name>defaultValue<\/Name><USR>s:7Storage14UnwrappedStoreC12defaultValuexvp<\/USR><Declaration>@Storage.StorageActor open var defaultValue: Value<\/Declaration><CommentParts><Abstract><Para>Default value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 61,
            "key.doc.name" : "defaultValue",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 1894,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage14UnwrappedStoreC5Valuexmfp\">Value<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.line" : 61,
            "key.modulename" : "Storage",
            "key.name" : "defaultValue",
            "key.namelength" : 12,
            "key.nameoffset" : 1926,
            "key.offset" : 1922,
            "key.parsed_declaration" : "open var defaultValue: Value",
            "key.parsed_scope.end" : 61,
            "key.parsed_scope.start" : 61,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage14UnwrappedStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "Value",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:7Storage14UnwrappedStoreC12defaultValuexvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public required init(wrappedValue: <Type usr=\"s:7Storage14UnwrappedStoreC5Valuexmfp\">Value<\/Type>, _ storage: <Type usr=\"s:7Storage14UnwrappedStoreC0A4Typeq_mfp\">StorageType<\/Type>, _ key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.required",
                "key.length" : 8,
                "key.offset" : 2185
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2178
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 2262,
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `UnwrappedStore` property wrapper.\n\n- Parameter wrappedValue: Default value.\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.\n",
            "key.doc.column" : 21,
            "key.doc.comment" : "Create a `UnwrappedStore` property wrapper.\n\n- Parameter wrappedValue: Default value.\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.",
            "key.doc.declaration" : "@Storage.StorageActor public required init(wrappedValue: Value, _ storage: StorageType, _ key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"70\" column=\"21\"><Name>init(wrappedValue:_:_:)<\/Name><USR>s:7Storage14UnwrappedStoreC12wrappedValue__ACyxq_Gx_q_SStcfc<\/USR><Declaration>@Storage.StorageActor public required init(wrappedValue: Value, _ storage: StorageType, _ key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>UnwrappedStore<\/codeVoice> property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>wrappedValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Default value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>storage<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Storage<\/codeVoice> used by property wrapper.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StoreKey<\/codeVoice> to store the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 70,
            "key.doc.name" : "init(wrappedValue:_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Default value."
                  }
                ],
                "name" : "wrappedValue"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Storage` used by property wrapper."
                  }
                ],
                "name" : "storage"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`StoreKey` to store the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 222,
            "key.docoffset" : 1951,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>required<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>wrappedValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Storage14UnwrappedStoreC5Valuexmfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>storage<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Storage14UnwrappedStoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 164,
            "key.line" : 70,
            "key.modulename" : "Storage",
            "key.name" : "init(wrappedValue:_:_:)",
            "key.namelength" : 66,
            "key.nameoffset" : 2194,
            "key.offset" : 2194,
            "key.parsed_declaration" : "public required init(wrappedValue: Value, _ storage: StorageType, _ key: StoreKey)",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 70,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage14UnwrappedStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Value, StorageType where StorageType : Storage> (UnwrappedStore<Value, StorageType>.Type) -> (Value, StorageType, String) -> UnwrappedStore<Value, StorageType>",
            "key.typeusr" : "$s12wrappedValue__7Storage14UnwrappedStoreCyxq_Gx_q_SStcD",
            "key.usr" : "s:7Storage14UnwrappedStoreC12wrappedValue__ACyxq_Gx_q_SStcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var wrappedValue: <Type usr=\"s:7Storage14UnwrappedStoreC5Valuexmfp\">Value<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 2403
              }
            ],
            "key.bodylength" : 115,
            "key.bodyoffset" : 2433,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Property wrapper stored value.",
            "key.doc.column" : 14,
            "key.doc.comment" : "Property wrapper stored value.",
            "key.doc.declaration" : "@Storage.StorageActor open var wrappedValue: Value { get set }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"77\" column=\"14\"><Name>wrappedValue<\/Name><USR>s:7Storage14UnwrappedStoreC12wrappedValuexvp<\/USR><Declaration>@Storage.StorageActor open var wrappedValue: Value { get set }<\/Declaration><CommentParts><Abstract><Para>Property wrapper stored value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 77,
            "key.doc.name" : "wrappedValue",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 2364,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage14UnwrappedStoreC5Valuexmfp\">Value<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 141,
            "key.line" : 77,
            "key.modulename" : "Storage",
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 2412,
            "key.offset" : 2408,
            "key.parsed_declaration" : "open var wrappedValue: Value",
            "key.parsed_scope.end" : 80,
            "key.parsed_scope.start" : 77,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage14UnwrappedStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "Value",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:7Storage14UnwrappedStoreC12wrappedValuexvp"
          }
        ],
        "key.typename" : "UnwrappedStore<Value, StorageType>.Type",
        "key.typeusr" : "$s7Storage14UnwrappedStoreCyxq_GmD",
        "key.usr" : "s:7Storage14UnwrappedStoreC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.open",
        "key.annotated_decl" : "<Declaration>@propertyWrapper @<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open class CodableStore&lt;Value, StorageType&gt; : <Type usr=\"s:7Storage20StorePropertyWrapperC\">StorePropertyWrapper<\/Type>&lt;<Type usr=\"s:7Storage12CodableStoreC0A4Typeq_mfp\">StorageType<\/Type>&gt; where <Type usr=\"s:7Storage12CodableStoreC5Valuexmfp\">Value<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type>, <Type usr=\"s:7Storage12CodableStoreC5Valuexmfp\">Value<\/Type> : <Type usr=\"s:SE\">Encodable<\/Type>, <Type usr=\"s:7Storage12CodableStoreC0A4Typeq_mfp\">StorageType<\/Type> : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.open",
            "key.length" : 4,
            "key.offset" : 2608
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 2591
          }
        ],
        "key.bodylength" : 589,
        "key.bodyoffset" : 2706,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`@CodableStore` property wrapper.",
        "key.doc.column" : 12,
        "key.doc.comment" : "`@CodableStore` property wrapper.",
        "key.doc.declaration" : "@propertyWrapper @Storage.StorageActor open class CodableStore<Value, StorageType> : StorePropertyWrapper<StorageType> where Value : Decodable, Value : Encodable, StorageType : Storage.Storage",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"85\" column=\"12\"><Name>CodableStore<\/Name><USR>s:7Storage12CodableStoreC<\/USR><Declaration>@propertyWrapper @Storage.StorageActor open class CodableStore&lt;Value, StorageType&gt; : StorePropertyWrapper&lt;StorageType&gt; where Value : Decodable, Value : Encodable, StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>@CodableStore<\/codeVoice> property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 85,
        "key.doc.name" : "CodableStore",
        "key.doc.type" : "Class",
        "key.doclength" : 38,
        "key.docoffset" : 2553,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 33,
            "key.offset" : 2671
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>CodableStore<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Storage12CodableStoreC5Valuexmfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Storage12CodableStoreC0A4Typeq_mfp\"><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.class usr=\"s:7Storage20StorePropertyWrapperC\">StorePropertyWrapper<\/ref.class>&lt;<ref.generic_type_param usr=\"s:7Storage12CodableStoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage12CodableStoreC5Valuexmfp\">Value<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage12CodableStoreC5Valuexmfp\">Value<\/ref.generic_type_param> : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage12CodableStoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param> : <ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "StorePropertyWrapper<StorageType>"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 683,
        "key.line" : 85,
        "key.modulename" : "Storage",
        "key.name" : "CodableStore",
        "key.namelength" : 12,
        "key.nameoffset" : 2619,
        "key.offset" : 2613,
        "key.parsed_declaration" : "open class CodableStore<Value: Codable, StorageType: Storage>: StorePropertyWrapper<StorageType>",
        "key.parsed_scope.end" : 103,
        "key.parsed_scope.start" : 85,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Value : <Type usr=\"s:s7Codablea\">Codable<\/Type><\/Declaration>",
            "key.column" : 25,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 7,
                "key.offset" : 2639
              }
            ],
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Codable"
              }
            ],
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 14,
            "key.line" : 85,
            "key.modulename" : "Storage",
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 2632,
            "key.offset" : 2632,
            "key.parsed_declaration" : "open class CodableStore<Value: Codable",
            "key.parsed_scope.end" : 85,
            "key.parsed_scope.start" : 85,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage12CodableStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Value.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:7Storage12CodableStoreC5Valuexmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>StorageType : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
            "key.column" : 41,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` type used by property wrapper.",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype StorageType : Storage.Storage",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"5\" column=\"20\"><Name>StorageType<\/Name><USR>s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa<\/USR><Declaration>associatedtype StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> type used by property wrapper.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>StorePropertyWrapperProtocol<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 5,
            "key.doc.name" : "StorageType",
            "key.doc.type" : "Other",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 7,
                "key.offset" : 2661
              }
            ],
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Storage"
              }
            ],
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 20,
            "key.line" : 85,
            "key.modulename" : "Storage",
            "key.name" : "StorageType",
            "key.namelength" : 11,
            "key.nameoffset" : 2648,
            "key.offset" : 2648,
            "key.parsed_declaration" : "open class CodableStore<Value: Codable, StorageType: Storage",
            "key.parsed_scope.end" : 85,
            "key.parsed_scope.start" : 85,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage12CodableStoreC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage20StorePropertyWrapperC0A4Typea\">StorageType<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "StorageType.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public convenience init(wrappedValue: <Type usr=\"s:7Storage12CodableStoreC5Valuexmfp\">Value<\/Type>?, _ storage: <Type usr=\"s:7Storage12CodableStoreC0A4Typeq_mfp\">StorageType<\/Type>, _ key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 2943
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2936
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 3024,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `CodableStore` property wrapper.\n\n- Parameter wrappedValue: Default value.\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a `CodableStore` property wrapper.\n\n- Parameter wrappedValue: Default value.\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.",
            "key.doc.declaration" : "@Storage.StorageActor public convenience init(wrappedValue: Value?, _ storage: StorageType, _ key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"93\" column=\"24\"><Name>init(wrappedValue:_:_:)<\/Name><USR>s:7Storage12CodableStoreC12wrappedValue__ACyxq_GxSg_q_SStcfc<\/USR><Declaration>@Storage.StorageActor public convenience init(wrappedValue: Value?, _ storage: StorageType, _ key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>CodableStore<\/codeVoice> property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>wrappedValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Default value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>storage<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Storage<\/codeVoice> used by property wrapper.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StoreKey<\/codeVoice> to store the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 93,
            "key.doc.name" : "init(wrappedValue:_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Default value."
                  }
                ],
                "name" : "wrappedValue"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Storage` used by property wrapper."
                  }
                ],
                "name" : "storage"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`StoreKey` to store the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 220,
            "key.docoffset" : 2711,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>wrappedValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Storage12CodableStoreC5Valuexmfp\">Value<\/ref.generic_type_param>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>storage<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Storage12CodableStoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 148,
            "key.line" : 93,
            "key.modulename" : "Storage",
            "key.name" : "init(wrappedValue:_:_:)",
            "key.namelength" : 67,
            "key.nameoffset" : 2955,
            "key.offset" : 2955,
            "key.parsed_declaration" : "public convenience init(wrappedValue: Value?, _ storage: StorageType, _ key: StoreKey)",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 93,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage12CodableStoreC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage12CodableStoreCyACyxq_Gq__SStcfc\">init(_:_:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Value, StorageType where Value : Decodable, Value : Encodable, StorageType : Storage> (CodableStore<Value, StorageType>.Type) -> (Value?, StorageType, String) -> CodableStore<Value, StorageType>",
            "key.typeusr" : "$s12wrappedValue__7Storage12CodableStoreCyxq_GxSg_q_SStcD",
            "key.usr" : "s:7Storage12CodableStoreC12wrappedValue__ACyxq_GxSg_q_SStcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var wrappedValue: <Type usr=\"s:7Storage12CodableStoreC5Valuexmfp\">Value<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 3148
              }
            ],
            "key.bodylength" : 114,
            "key.bodyoffset" : 3179,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Property wrapper stored value.",
            "key.doc.column" : 14,
            "key.doc.comment" : "Property wrapper stored value.",
            "key.doc.declaration" : "@Storage.StorageActor open var wrappedValue: Value? { get set }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"99\" column=\"14\"><Name>wrappedValue<\/Name><USR>s:7Storage12CodableStoreC12wrappedValuexSgvp<\/USR><Declaration>@Storage.StorageActor open var wrappedValue: Value? { get set }<\/Declaration><CommentParts><Abstract><Para>Property wrapper stored value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 99,
            "key.doc.name" : "wrappedValue",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 3109,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage12CodableStoreC5Valuexmfp\">Value<\/ref.generic_type_param>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 141,
            "key.line" : 99,
            "key.modulename" : "Storage",
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 3157,
            "key.offset" : 3153,
            "key.parsed_declaration" : "open var wrappedValue: Value?",
            "key.parsed_scope.end" : 102,
            "key.parsed_scope.start" : 99,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage12CodableStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "Value?",
            "key.typeusr" : "$sxSgD",
            "key.usr" : "s:7Storage12CodableStoreC12wrappedValuexSgvp"
          }
        ],
        "key.typename" : "CodableStore<Value, StorageType>.Type",
        "key.typeusr" : "$s7Storage12CodableStoreCyxq_GmD",
        "key.usr" : "s:7Storage12CodableStoreC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.open",
        "key.annotated_decl" : "<Declaration>@propertyWrapper @<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open class UnwrappedCodableStore&lt;Value, StorageType&gt; : <Type usr=\"s:7Storage28StorePropertyWrapperProtocolP\">StorePropertyWrapperProtocol<\/Type> where <Type usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/Type> : <Type usr=\"s:Se\">Decodable<\/Type>, <Type usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/Type> : <Type usr=\"s:SE\">Encodable<\/Type>, <Type usr=\"s:7Storage21UnwrappedCodableStoreC0A4Typeq_mfp\">StorageType<\/Type> : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.open",
            "key.length" : 4,
            "key.offset" : 3362
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 3345
          }
        ],
        "key.bodylength" : 827,
        "key.bodyoffset" : 3464,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`@UnwrappedCodableStore` property wrapper.",
        "key.doc.column" : 12,
        "key.doc.comment" : "`@UnwrappedCodableStore` property wrapper.",
        "key.doc.declaration" : "@propertyWrapper @Storage.StorageActor open class UnwrappedCodableStore<Value, StorageType> : StorePropertyWrapperProtocol where Value : Decodable, Value : Encodable, StorageType : Storage.Storage",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"107\" column=\"12\"><Name>UnwrappedCodableStore<\/Name><USR>s:7Storage21UnwrappedCodableStoreC<\/USR><Declaration>@propertyWrapper @Storage.StorageActor open class UnwrappedCodableStore&lt;Value, StorageType&gt; : StorePropertyWrapperProtocol where Value : Decodable, Value : Encodable, StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>@UnwrappedCodableStore<\/codeVoice> property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 107,
        "key.doc.name" : "UnwrappedCodableStore",
        "key.doc.type" : "Class",
        "key.doclength" : 47,
        "key.docoffset" : 3298,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 28,
            "key.offset" : 3434
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>UnwrappedCodableStore<\/decl.name>&lt;<decl.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC0A4Typeq_mfp\"><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:7Storage28StorePropertyWrapperProtocolP\">StorePropertyWrapperProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/ref.generic_type_param> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/ref.generic_type_param> : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param> : <ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "StorePropertyWrapperProtocol"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 925,
        "key.line" : 107,
        "key.modulename" : "Storage",
        "key.name" : "UnwrappedCodableStore",
        "key.namelength" : 21,
        "key.nameoffset" : 3373,
        "key.offset" : 3367,
        "key.parsed_declaration" : "open class UnwrappedCodableStore<Value: Codable, StorageType: Storage>: StorePropertyWrapperProtocol",
        "key.parsed_scope.end" : 133,
        "key.parsed_scope.start" : 107,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Value : <Type usr=\"s:s7Codablea\">Codable<\/Type><\/Declaration>",
            "key.column" : 34,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 7,
                "key.offset" : 3402
              }
            ],
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Codable"
              }
            ],
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 14,
            "key.line" : 107,
            "key.modulename" : "Storage",
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 3395,
            "key.offset" : 3395,
            "key.parsed_declaration" : "open class UnwrappedCodableStore<Value: Codable",
            "key.parsed_scope.end" : 107,
            "key.parsed_scope.start" : 107,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage21UnwrappedCodableStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Value.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:7Storage21UnwrappedCodableStoreC5Valuexmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>StorageType : <Type usr=\"s:7StorageAAP\">Storage<\/Type><\/Declaration>",
            "key.column" : 50,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` type used by property wrapper.",
            "key.doc.column" : 20,
            "key.doc.declaration" : "associatedtype StorageType : Storage.Storage",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"5\" column=\"20\"><Name>StorageType<\/Name><USR>s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa<\/USR><Declaration>associatedtype StorageType : Storage.Storage<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> type used by property wrapper.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>StorePropertyWrapperProtocol<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 5,
            "key.doc.name" : "StorageType",
            "key.doc.type" : "Other",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 7,
                "key.offset" : 3424
              }
            ],
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>StorageType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7StorageAAP\">Storage<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Storage"
              }
            ],
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 20,
            "key.line" : 107,
            "key.modulename" : "Storage",
            "key.name" : "StorageType",
            "key.namelength" : 11,
            "key.nameoffset" : 3411,
            "key.offset" : 3411,
            "key.parsed_declaration" : "open class UnwrappedCodableStore<Value: Codable, StorageType: Storage",
            "key.parsed_scope.end" : 107,
            "key.parsed_scope.start" : 107,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage21UnwrappedCodableStoreC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage21UnwrappedCodableStoreC0A4Typea\">StorageType<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "StorageType.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP0A4TypeQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var storage: <Type usr=\"s:7Storage21UnwrappedCodableStoreC0A4Typeq_mfp\">StorageType<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 3513
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`Storage` used by property wrapper.",
            "key.doc.column" : 14,
            "key.doc.comment" : "`Storage` used by property wrapper.",
            "key.doc.declaration" : "@Storage.StorageActor open var storage: StorageType",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"109\" column=\"14\"><Name>storage<\/Name><USR>s:7Storage21UnwrappedCodableStoreC7storageq_vp<\/USR><Declaration>@Storage.StorageActor open var storage: StorageType<\/Declaration><CommentParts><Abstract><Para><codeVoice>Storage<\/codeVoice> used by property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 109,
            "key.doc.name" : "storage",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 3469,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.line" : 109,
            "key.modulename" : "Storage",
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 3522,
            "key.offset" : 3518,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP7storage0A4TypeQzvp"
              }
            ],
            "key.parsed_declaration" : "open var storage: StorageType",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 109,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage21UnwrappedCodableStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "StorageType",
            "key.typeusr" : "$sq_D",
            "key.usr" : "s:7Storage21UnwrappedCodableStoreC7storageq_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 3586
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`StoreKey` to store the value.",
            "key.doc.column" : 14,
            "key.doc.comment" : "`StoreKey` to store the value.",
            "key.doc.declaration" : "@Storage.StorageActor open var key: StoreKey",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"111\" column=\"14\"><Name>key<\/Name><USR>s:7Storage21UnwrappedCodableStoreC3keySSvp<\/USR><Declaration>@Storage.StorageActor open var key: StoreKey<\/Declaration><CommentParts><Abstract><Para><codeVoice>StoreKey<\/codeVoice> to store the value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 111,
            "key.doc.name" : "key",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 3547,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 17,
            "key.line" : 111,
            "key.modulename" : "Storage",
            "key.name" : "key",
            "key.namelength" : 3,
            "key.nameoffset" : 3595,
            "key.offset" : 3591,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage28StorePropertyWrapperProtocolP3keySSvp"
              }
            ],
            "key.parsed_declaration" : "open var key: StoreKey",
            "key.parsed_scope.end" : 111,
            "key.parsed_scope.start" : 111,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage21UnwrappedCodableStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:7Storage21UnwrappedCodableStoreC3keySSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var defaultValue: <Type usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 3636
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Default value.",
            "key.doc.column" : 14,
            "key.doc.comment" : "Default value.",
            "key.doc.declaration" : "@Storage.StorageActor open var defaultValue: Value",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"113\" column=\"14\"><Name>defaultValue<\/Name><USR>s:7Storage21UnwrappedCodableStoreC12defaultValuexvp<\/USR><Declaration>@Storage.StorageActor open var defaultValue: Value<\/Declaration><CommentParts><Abstract><Para>Default value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 113,
            "key.doc.name" : "defaultValue",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 3613,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.line" : 113,
            "key.modulename" : "Storage",
            "key.name" : "defaultValue",
            "key.namelength" : 12,
            "key.nameoffset" : 3645,
            "key.offset" : 3641,
            "key.parsed_declaration" : "open var defaultValue: Value",
            "key.parsed_scope.end" : 113,
            "key.parsed_scope.start" : 113,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage21UnwrappedCodableStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "Value",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:7Storage21UnwrappedCodableStoreC12defaultValuexvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public required init(wrappedValue: <Type usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/Type>, _ storage: <Type usr=\"s:7Storage21UnwrappedCodableStoreC0A4Typeq_mfp\">StorageType<\/Type>, _ key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.required",
                "key.length" : 8,
                "key.offset" : 3911
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3904
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 3988,
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `UnwrappedCodableStore` property wrapper.\n\n- Parameter wrappedValue: Default value.\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.\n",
            "key.doc.column" : 21,
            "key.doc.comment" : "Create a `UnwrappedCodableStore` property wrapper.\n\n- Parameter wrappedValue: Default value.\n- Parameter storage: `Storage` used by property wrapper.\n- Parameter key: `StoreKey` to store the value.",
            "key.doc.declaration" : "@Storage.StorageActor public required init(wrappedValue: Value, _ storage: StorageType, _ key: StoreKey)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"122\" column=\"21\"><Name>init(wrappedValue:_:_:)<\/Name><USR>s:7Storage21UnwrappedCodableStoreC12wrappedValue__ACyxq_Gx_q_SStcfc<\/USR><Declaration>@Storage.StorageActor public required init(wrappedValue: Value, _ storage: StorageType, _ key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>UnwrappedCodableStore<\/codeVoice> property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>wrappedValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Default value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>storage<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Storage<\/codeVoice> used by property wrapper.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>StoreKey<\/codeVoice> to store the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 122,
            "key.doc.name" : "init(wrappedValue:_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Default value."
                  }
                ],
                "name" : "wrappedValue"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Storage` used by property wrapper."
                  }
                ],
                "name" : "storage"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`StoreKey` to store the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 229,
            "key.docoffset" : 3670,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>required<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>wrappedValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>storage<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC0A4Typeq_mfp\">StorageType<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 164,
            "key.line" : 122,
            "key.modulename" : "Storage",
            "key.name" : "init(wrappedValue:_:_:)",
            "key.namelength" : 66,
            "key.nameoffset" : 3920,
            "key.offset" : 3920,
            "key.parsed_declaration" : "public required init(wrappedValue: Value, _ storage: StorageType, _ key: StoreKey)",
            "key.parsed_scope.end" : 126,
            "key.parsed_scope.start" : 122,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage21UnwrappedCodableStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Value, StorageType where Value : Decodable, Value : Encodable, StorageType : Storage> (UnwrappedCodableStore<Value, StorageType>.Type) -> (Value, StorageType, String) -> UnwrappedCodableStore<Value, StorageType>",
            "key.typeusr" : "$s12wrappedValue__7Storage21UnwrappedCodableStoreCyxq_Gx_q_SStcD",
            "key.usr" : "s:7Storage21UnwrappedCodableStoreC12wrappedValue__ACyxq_Gx_q_SStcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var wrappedValue: <Type usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 4129
              }
            ],
            "key.bodylength" : 130,
            "key.bodyoffset" : 4159,
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Property wrapper stored value.",
            "key.doc.column" : 14,
            "key.doc.comment" : "Property wrapper stored value.",
            "key.doc.declaration" : "@Storage.StorageActor open var wrappedValue: Value { get set }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift\" line=\"129\" column=\"14\"><Name>wrappedValue<\/Name><USR>s:7Storage21UnwrappedCodableStoreC12wrappedValuexvp<\/USR><Declaration>@Storage.StorageActor open var wrappedValue: Value { get set }<\/Declaration><CommentParts><Abstract><Para>Property wrapper stored value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 129,
            "key.doc.name" : "wrappedValue",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 4090,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Storage\/Store.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:7Storage21UnwrappedCodableStoreC5Valuexmfp\">Value<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 156,
            "key.line" : 129,
            "key.modulename" : "Storage",
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 4138,
            "key.offset" : 4134,
            "key.parsed_declaration" : "open var wrappedValue: Value",
            "key.parsed_scope.end" : 132,
            "key.parsed_scope.start" : 129,
            "key.receivers" : [
              {
                "key.usr" : "s:7Storage21UnwrappedCodableStoreC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "Value",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:7Storage21UnwrappedCodableStoreC12wrappedValuexvp"
          }
        ],
        "key.typename" : "UnwrappedCodableStore<Value, StorageType>.Type",
        "key.typeusr" : "$s7Storage21UnwrappedCodableStoreCyxq_GmD",
        "key.usr" : "s:7Storage21UnwrappedCodableStoreC"
      }
    ]
  }
}]
