[{
  "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 9991,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias Qualifier = <Type usr=\"c:objc(cs)Protocol\">Protocol<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 105
          }
        ],
        "key.column" : 18,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Any `@objc protocol` to be used as qualifier of your dependencies.",
        "key.doc.column" : 18,
        "key.doc.comment" : "Any `@objc protocol` to be used as qualifier of your dependencies.",
        "key.doc.declaration" : "public typealias Qualifier = Protocol",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"5\" column=\"18\"><Name>Qualifier<\/Name><USR>s:6Inject9Qualifiera<\/USR><Declaration>public typealias Qualifier = Protocol<\/Declaration><CommentParts><Abstract><Para>Any <codeVoice>@objc protocol<\/codeVoice> to be used as qualifier of your dependencies.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 5,
        "key.doc.name" : "Qualifier",
        "key.doc.type" : "Other",
        "key.doclength" : 71,
        "key.docoffset" : 34,
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Qualifier<\/decl.name> = <ref.class usr=\"c:objc(cs)Protocol\">Protocol<\/ref.class><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 30,
        "key.line" : 5,
        "key.modulename" : "Inject",
        "key.name" : "Qualifier",
        "key.namelength" : 9,
        "key.nameoffset" : 122,
        "key.offset" : 112,
        "key.parsed_declaration" : "public typealias Qualifier = Protocol",
        "key.parsed_scope.end" : 5,
        "key.parsed_scope.start" : 5,
        "key.reusingastcontext" : false,
        "key.typename" : "Protocol.Type",
        "key.typeusr" : "$sSo8ProtocolCmD",
        "key.usr" : "s:6Inject9Qualifiera"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias DependencyGroupKey = <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 175
          }
        ],
        "key.column" : 18,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Dependency group key type.",
        "key.doc.column" : 18,
        "key.doc.comment" : "Dependency group key type.",
        "key.doc.declaration" : "public typealias DependencyGroupKey = StoreKey",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"8\" column=\"18\"><Name>DependencyGroupKey<\/Name><USR>s:6Inject18DependencyGroupKeya<\/USR><Declaration>public typealias DependencyGroupKey = StoreKey<\/Declaration><CommentParts><Abstract><Para>Dependency group key type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 8,
        "key.doc.name" : "DependencyGroupKey",
        "key.doc.type" : "Other",
        "key.doclength" : 31,
        "key.docoffset" : 144,
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>DependencyGroupKey<\/decl.name> = <ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 39,
        "key.line" : 8,
        "key.modulename" : "Inject",
        "key.name" : "DependencyGroupKey",
        "key.namelength" : 18,
        "key.nameoffset" : 192,
        "key.offset" : 182,
        "key.parsed_declaration" : "public typealias DependencyGroupKey = StoreKey",
        "key.parsed_scope.end" : 8,
        "key.parsed_scope.start" : 8,
        "key.reusingastcontext" : false,
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:6Inject18DependencyGroupKeya"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@objc public protocol Mock<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 321
          },
          {
            "key.attribute" : "source.decl.attribute.objc",
            "key.length" : 5,
            "key.offset" : 315
          }
        ],
        "key.bodylength" : 0,
        "key.bodyoffset" : 343,
        "key.column" : 23,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Mock qualifier indicating that dependency must be injected before any other registered.",
        "key.doc.column" : 23,
        "key.doc.comment" : "Mock qualifier indicating that dependency must be injected before any other registered.",
        "key.doc.declaration" : "@objc public protocol Mock",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"11\" column=\"23\"><Name>Mock<\/Name><USR>c:@M@Inject@objc(pl)Mock<\/USR><Declaration>@objc public protocol Mock<\/Declaration><CommentParts><Abstract><Para>Mock qualifier indicating that dependency must be injected before any other registered.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 11,
        "key.doc.name" : "Mock",
        "key.doc.type" : "Class",
        "key.doclength" : 92,
        "key.docoffset" : 223,
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Mock<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 16,
        "key.line" : 11,
        "key.modulename" : "Inject",
        "key.name" : "Mock",
        "key.namelength" : 4,
        "key.nameoffset" : 337,
        "key.offset" : 328,
        "key.parsed_declaration" : "@objc public protocol Mock",
        "key.parsed_scope.end" : 11,
        "key.parsed_scope.start" : 11,
        "key.reusingastcontext" : false,
        "key.typename" : "Mock.Type",
        "key.typeusr" : "$s6Inject4Mock_pmD",
        "key.usr" : "c:@M@Inject@objc(pl)Mock"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.open",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open class InjectPropertyWrapper&lt;Dependency, Parameters&gt; : <Type usr=\"s:7Storage20StorePropertyWrapperC\">StorePropertyWrapper<\/Type>&lt;<Type usr=\"s:6Inject0A7StorageC\">InjectStorage<\/Type>&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.open",
            "key.length" : 4,
            "key.offset" : 390
          }
        ],
        "key.bodylength" : 5699,
        "key.bodyoffset" : 485,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Inject property wrapper reusable class.",
        "key.doc.column" : 12,
        "key.doc.comment" : "Inject property wrapper reusable class.",
        "key.doc.declaration" : "@Storage.StorageActor open class InjectPropertyWrapper<Dependency, Parameters> : StorePropertyWrapper<InjectStorage>",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"14\" column=\"12\"><Name>InjectPropertyWrapper<\/Name><USR>s:6Inject0A15PropertyWrapperC<\/USR><Declaration>@Storage.StorageActor open class InjectPropertyWrapper&lt;Dependency, Parameters&gt; : StorePropertyWrapper&lt;InjectStorage&gt;<\/Declaration><CommentParts><Abstract><Para>Inject property wrapper reusable class.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 14,
        "key.doc.name" : "InjectPropertyWrapper",
        "key.doc.type" : "Class",
        "key.doclength" : 44,
        "key.docoffset" : 346,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 35,
            "key.offset" : 448
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>InjectPropertyWrapper<\/decl.name>&lt;<decl.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\"><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Parametersq_mfp\"><decl.generic_type_param.name>Parameters<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.class usr=\"s:7Storage20StorePropertyWrapperC\">StorePropertyWrapper<\/ref.class>&lt;<ref.class usr=\"s:6Inject0A7StorageC\">InjectStorage<\/ref.class>&gt;<\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "StorePropertyWrapper<InjectStorage>"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 5790,
        "key.line" : 14,
        "key.modulename" : "Inject",
        "key.name" : "InjectPropertyWrapper",
        "key.namelength" : 21,
        "key.nameoffset" : 401,
        "key.offset" : 395,
        "key.parsed_declaration" : "open class InjectPropertyWrapper<Dependency, Parameters>: StorePropertyWrapper<InjectStorage>",
        "key.parsed_scope.end" : 186,
        "key.parsed_scope.start" : 14,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Dependency<\/Declaration>",
            "key.column" : 34,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 10,
            "key.line" : 14,
            "key.modulename" : "Inject",
            "key.name" : "Dependency",
            "key.namelength" : 10,
            "key.nameoffset" : 423,
            "key.offset" : 423,
            "key.parsed_declaration" : "open class InjectPropertyWrapper<Dependency",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC10Dependencyxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Parameters<\/Declaration>",
            "key.column" : 46,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Parameters<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 10,
            "key.line" : 14,
            "key.modulename" : "Inject",
            "key.name" : "Parameters",
            "key.namelength" : 10,
            "key.nameoffset" : 435,
            "key.offset" : 435,
            "key.parsed_declaration" : "open class InjectPropertyWrapper<Dependency, Parameters",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Parameters.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC10Parametersq_mfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum <Type usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/Type>&lt;<Type usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/Type>, <Type usr=\"s:6Inject0A15PropertyWrapperC10Parametersq_mfp\">Parameters<\/Type>&gt;.Scope<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 515
              }
            ],
            "key.bodylength" : 127,
            "key.bodyoffset" : 534,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Injection scope.",
            "key.doc.column" : 17,
            "key.doc.comment" : "Injection scope.",
            "key.doc.declaration" : "public enum Inject.InjectPropertyWrapper<Dependency, Parameters>.Scope",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"16\" column=\"17\"><Name>Scope<\/Name><USR>s:6Inject0A15PropertyWrapperC5ScopeO<\/USR><Declaration>public enum Inject.InjectPropertyWrapper&lt;Dependency, Parameters&gt;.Scope<\/Declaration><CommentParts><Abstract><Para>Injection scope.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 16,
            "key.doc.name" : "Scope",
            "key.doc.type" : "Other",
            "key.doclength" : 21,
            "key.docoffset" : 490,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Parametersq_mfp\">Parameters<\/ref.generic_type_param>&gt;.<decl.name>Scope<\/decl.name><\/decl.enum>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 140,
            "key.line" : 16,
            "key.modulename" : "Inject",
            "key.name" : "Scope",
            "key.namelength" : 5,
            "key.nameoffset" : 527,
            "key.offset" : 522,
            "key.parsed_declaration" : "public enum Scope",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 16,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 14,
                "key.offset" : 582,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case singleton<\/Declaration>",
                    "key.column" : 14,
                    "key.decl_lang" : "source.lang.swift",
                    "key.doc_comment" : "Singleton injection scope.",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Singleton injection scope.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"18\" column=\"14\"><Name>singleton<\/Name><USR>s:6Inject0A15PropertyWrapperC5ScopeO9singletonyAEyxq__GAGmr0_lF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Singleton injection scope.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 18,
                    "key.doc.name" : "singleton",
                    "key.doc.type" : "Other",
                    "key.doclength" : 31,
                    "key.docoffset" : 543,
                    "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>singleton<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 9,
                    "key.line" : 18,
                    "key.modulename" : "Inject",
                    "key.name" : "singleton",
                    "key.namelength" : 9,
                    "key.nameoffset" : 587,
                    "key.offset" : 587,
                    "key.parsed_declaration" : "case singleton",
                    "key.parsed_scope.end" : 18,
                    "key.parsed_scope.start" : 18,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<Dependency, Parameters> (InjectPropertyWrapper<Dependency, Parameters>.Scope.Type) -> InjectPropertyWrapper<Dependency, Parameters>.Scope",
                    "key.typeusr" : "$sy6Inject0A15PropertyWrapperC5ScopeOyxq__GAFmcr0_luD",
                    "key.usr" : "s:6Inject0A15PropertyWrapperC5ScopeO9singletonyAEyxq__GAGmr0_lF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 13,
                "key.offset" : 643,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case instance<\/Declaration>",
                    "key.column" : 14,
                    "key.decl_lang" : "source.lang.swift",
                    "key.doc_comment" : "Instance injection scope.",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Instance injection scope.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"20\" column=\"14\"><Name>instance<\/Name><USR>s:6Inject0A15PropertyWrapperC5ScopeO8instanceyAEyxq__GAGmr0_lF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Instance injection scope.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 20,
                    "key.doc.name" : "instance",
                    "key.doc.type" : "Other",
                    "key.doclength" : 30,
                    "key.docoffset" : 605,
                    "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>instance<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 8,
                    "key.line" : 20,
                    "key.modulename" : "Inject",
                    "key.name" : "instance",
                    "key.namelength" : 8,
                    "key.nameoffset" : 648,
                    "key.offset" : 648,
                    "key.parsed_declaration" : "case instance",
                    "key.parsed_scope.end" : 20,
                    "key.parsed_scope.start" : 20,
                    "key.reusingastcontext" : false,
                    "key.typename" : "<Dependency, Parameters> (InjectPropertyWrapper<Dependency, Parameters>.Scope.Type) -> InjectPropertyWrapper<Dependency, Parameters>.Scope",
                    "key.typeusr" : "$sy6Inject0A15PropertyWrapperC5ScopeOyxq__GAFmcr0_luD",
                    "key.usr" : "s:6Inject0A15PropertyWrapperC5ScopeO8instanceyAEyxq__GAGmr0_lF"
                  }
                ]
              }
            ],
            "key.typename" : "InjectPropertyWrapper<Dependency, Parameters>.Scope.Type",
            "key.typeusr" : "$s6Inject0A15PropertyWrapperC5ScopeOyxq__GmD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC5ScopeO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var qualifiers: [<Type usr=\"s:6Inject9Qualifiera\">Qualifier<\/Type>]?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 745
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "All `@objc protocol`s to be used as qualifiers of your dependencies.",
            "key.doc.column" : 14,
            "key.doc.comment" : "All `@objc protocol`s to be used as qualifiers of your dependencies.",
            "key.doc.declaration" : "@Storage.StorageActor open var qualifiers: [Qualifier]?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"24\" column=\"14\"><Name>qualifiers<\/Name><USR>s:6Inject0A15PropertyWrapperC10qualifiersSaySo8ProtocolCGSgvp<\/USR><Declaration>@Storage.StorageActor open var qualifiers: [Qualifier]?<\/Declaration><CommentParts><Abstract><Para>All <codeVoice>@objc protocol<\/codeVoice>s to be used as qualifiers of your dependencies.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 24,
            "key.doc.name" : "qualifiers",
            "key.doc.type" : "Other",
            "key.doclength" : 73,
            "key.docoffset" : 668,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>qualifiers<\/decl.name>: <decl.var.type>[<ref.typealias usr=\"s:6Inject9Qualifiera\">Qualifier<\/ref.typealias>]?<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.line" : 24,
            "key.modulename" : "Inject",
            "key.name" : "qualifiers",
            "key.namelength" : 10,
            "key.nameoffset" : 754,
            "key.offset" : 750,
            "key.parsed_declaration" : "open var qualifiers: [Qualifier]?",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 24,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "[Protocol]?",
            "key.typeusr" : "$sSaySo8ProtocolCGSgD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC10qualifiersSaySo8ProtocolCGSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open var group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 813
              }
            ],
            "key.column" : 14,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Dependency group key.",
            "key.doc.column" : 14,
            "key.doc.comment" : "Dependency group key.",
            "key.doc.declaration" : "@Storage.StorageActor open var group: DependencyGroupKey?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"26\" column=\"14\"><Name>group<\/Name><USR>s:6Inject0A15PropertyWrapperC5groupSSSgvp<\/USR><Declaration>@Storage.StorageActor open var group: DependencyGroupKey?<\/Declaration><CommentParts><Abstract><Para>Dependency group key.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 26,
            "key.doc.name" : "group",
            "key.doc.type" : "Other",
            "key.doclength" : 26,
            "key.docoffset" : 783,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>group<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.line" : 26,
            "key.modulename" : "Inject",
            "key.name" : "group",
            "key.namelength" : 5,
            "key.nameoffset" : 822,
            "key.offset" : 818,
            "key.parsed_declaration" : "open var group: DependencyGroupKey?",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 26,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.open",
            "key.typename" : "String?",
            "key.typeusr" : "$sSSSgD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC5groupSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public convenience init(_ qualifier: <Type usr=\"s:6Inject9Qualifiera\">Qualifier<\/Type>, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 1058
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1051
              }
            ],
            "key.bodylength" : 50,
            "key.bodyoffset" : 1162,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a inject property wrapper.\n\n- Parameter qualifier: Any `@objc protocol` to be used as qualifier of your dependencies.\n- Parameter group: Dependency group key.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a inject property wrapper.\n\n- Parameter qualifier: Any `@objc protocol` to be used as qualifier of your dependencies.\n- Parameter group: Dependency group key.",
            "key.doc.declaration" : "@Storage.StorageActor public convenience init(_ qualifier: Qualifier, group: DependencyGroupKey? = nil)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"34\" column=\"24\"><Name>init(_:group:)<\/Name><USR>s:6Inject0A15PropertyWrapperC_5groupACyxq_GSo8ProtocolC_SSSgtcfc<\/USR><Declaration>@Storage.StorageActor public convenience init(_ qualifier: Qualifier, group: DependencyGroupKey? = nil)<\/Declaration><CommentParts><Abstract><Para>Create a inject property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>qualifier<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Any <codeVoice>@objc protocol<\/codeVoice> to be used as qualifier of your dependencies.<\/Para><\/Discussion><\/Parameter><Parameter><Name>group<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency group key.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 34,
            "key.doc.name" : "init(_:group:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Any `@objc protocol` to be used as qualifier of your dependencies."
                  }
                ],
                "name" : "qualifier"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Dependency group key."
                  }
                ],
                "name" : "group"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 192,
            "key.docoffset" : 854,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>qualifier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject9Qualifiera\">Qualifier<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 143,
            "key.line" : 34,
            "key.modulename" : "Inject",
            "key.name" : "init(_:group:)",
            "key.namelength" : 90,
            "key.nameoffset" : 1070,
            "key.offset" : 1070,
            "key.parsed_declaration" : "public convenience init(_ qualifier: Qualifier,\n                        group: DependencyGroupKey? = nil)",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 34,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSaySo8ProtocolCG_SSSgtcfc\">init(_: [Qualifier], group: DependencyGroupKey? = nil)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperCyACyxq_GAA0A7StorageC_SStcfc\">init(_:_:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Dependency, Parameters> (InjectPropertyWrapper<Dependency, Parameters>.Type) -> (Protocol, String?) -> InjectPropertyWrapper<Dependency, Parameters>",
            "key.typeusr" : "$s_5group6Inject0B15PropertyWrapperCyxq_GSo8ProtocolC_SSSgtcD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC_5groupACyxq_GSo8ProtocolC_SSSgtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public convenience init(_ qualifiers: [<Type usr=\"s:6Inject9Qualifiera\">Qualifier<\/Type>], group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 1426
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1419
              }
            ],
            "key.bodylength" : 286,
            "key.bodyoffset" : 1533,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a inject property wrapper.\n\n- Parameter qualifiers: All `@objc protocol`s to be used as qualifiers of your dependencies.\n- Parameter group: Dependency group key.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a inject property wrapper.\n\n- Parameter qualifiers: All `@objc protocol`s to be used as qualifiers of your dependencies.\n- Parameter group: Dependency group key.",
            "key.doc.declaration" : "@Storage.StorageActor public convenience init(_ qualifiers: [Qualifier], group: DependencyGroupKey? = nil)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"45\" column=\"24\"><Name>init(_:group:)<\/Name><USR>s:6Inject0A15PropertyWrapperC_5groupACyxq_GSaySo8ProtocolCG_SSSgtcfc<\/USR><Declaration>@Storage.StorageActor public convenience init(_ qualifiers: [Qualifier], group: DependencyGroupKey? = nil)<\/Declaration><CommentParts><Abstract><Para>Create a inject property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>qualifiers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>All <codeVoice>@objc protocol<\/codeVoice>s to be used as qualifiers of your dependencies.<\/Para><\/Discussion><\/Parameter><Parameter><Name>group<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency group key.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 45,
            "key.doc.name" : "init(_:group:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "All `@objc protocol`s to be used as qualifiers of your dependencies."
                  }
                ],
                "name" : "qualifiers"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Dependency group key."
                  }
                ],
                "name" : "group"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 195,
            "key.docoffset" : 1219,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>qualifiers<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.typealias usr=\"s:6Inject9Qualifiera\">Qualifier<\/ref.typealias>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 382,
            "key.line" : 45,
            "key.modulename" : "Inject",
            "key.name" : "init(_:group:)",
            "key.namelength" : 93,
            "key.nameoffset" : 1438,
            "key.offset" : 1438,
            "key.parsed_declaration" : "public convenience init(_ qualifiers: [Qualifier],\n                        group: DependencyGroupKey? = nil)",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 45,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSo8ProtocolC_SSSgtcfc\">init(_: Qualifier, group: DependencyGroupKey? = nil)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperCyACyxq_GAA0A7StorageC_SStcfc\">init(_:_:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var key: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 45,
                "key.line" : 47,
                "key.modulename" : "Inject",
                "key.name" : "key",
                "key.namelength" : 3,
                "key.nameoffset" : 1546,
                "key.offset" : 1542,
                "key.parsed_declaration" : "var key = String(describing: Dependency.self)",
                "key.parsed_scope.end" : 47,
                "key.parsed_scope.start" : 47,
                "key.reusingastcontext" : false,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:6Inject0A15PropertyWrapperC_5groupACyxq_GSaySo8ProtocolCG_SSSgtcfc3keyL_SSvp"
              }
            ],
            "key.typename" : "<Dependency, Parameters> (InjectPropertyWrapper<Dependency, Parameters>.Type) -> ([Protocol], String?) -> InjectPropertyWrapper<Dependency, Parameters>",
            "key.typeusr" : "$s_5group6Inject0B15PropertyWrapperCyxq_GSaySo8ProtocolCG_SSSgtcD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC_5groupACyxq_GSaySo8ProtocolCG_SSSgtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func register(_ dependency: <Type usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/Type>?)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 1924
              }
            ],
            "key.bodylength" : 220,
            "key.bodyoffset" : 1971,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Register a dependency.\n\n- Parameter dependency: Dependency to register.\n",
            "key.doc.column" : 15,
            "key.doc.comment" : "Register a dependency.\n\n- Parameter dependency: Dependency to register.",
            "key.doc.declaration" : "@Storage.StorageActor open func register(_ dependency: Dependency?)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"61\" column=\"15\"><Name>register(_:)<\/Name><USR>s:6Inject0A15PropertyWrapperC8registeryyxSgF<\/USR><Declaration>@Storage.StorageActor open func register(_ dependency: Dependency?)<\/Declaration><CommentParts><Abstract><Para>Register a dependency.<\/Para><\/Abstract><Parameters><Parameter><Name>dependency<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency to register.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 61,
            "key.doc.name" : "register(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Dependency to register."
                  }
                ],
                "name" : "dependency"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 93,
            "key.docoffset" : 1826,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dependency<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 263,
            "key.line" : 61,
            "key.modulename" : "Inject",
            "key.name" : "register(_:)",
            "key.namelength" : 35,
            "key.nameoffset" : 1934,
            "key.offset" : 1929,
            "key.parsed_declaration" : "open func register(_ dependency: Dependency?)",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 61,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Dependency, Parameters> (InjectPropertyWrapper<Dependency, Parameters>) -> (Dependency?) -> ()",
            "key.typeusr" : "$syyxSgcD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC8registeryyxSgF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func resolve(_ scope: <Type usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/Type> = .singleton, _ parameters: <Type usr=\"s:6Inject0A15PropertyWrapperC10Parametersq_mfp\">Parameters<\/Type>? = nil) throws -&gt; <Type usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 2425
              }
            ],
            "key.bodylength" : 1044,
            "key.bodyoffset" : 2549,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Resolve a dependency.\n\n- Parameter scope: Dependency injection scope.\n- Parameter parameters: Parameters to inject in builder.\n\n- Throws: `InjectError`.\n\n- Returns: Resolved dependency.\n",
            "key.doc.column" : 15,
            "key.doc.comment" : "Resolve a dependency.\n\n- Parameter scope: Dependency injection scope.\n- Parameter parameters: Parameters to inject in builder.\n\n- Throws: `InjectError`.\n\n- Returns: Resolved dependency.",
            "key.doc.declaration" : "@Storage.StorageActor open func resolve(_ scope: Scope = .singleton, _ parameters: Parameters? = nil) throws -> Dependency",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"80\" column=\"15\"><Name>resolve(_:_:)<\/Name><USR>s:6Inject0A15PropertyWrapperC7resolveyxAC5ScopeOyxq__G_q_SgtKF<\/USR><Declaration>@Storage.StorageActor open func resolve(_ scope: Scope = .singleton, _ parameters: Parameters? = nil) throws -&gt; Dependency<\/Declaration><CommentParts><Abstract><Para>Resolve a dependency.<\/Para><\/Abstract><Parameters><Parameter><Name>scope<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency injection scope.<\/Para><\/Discussion><\/Parameter><Parameter><Name>parameters<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Parameters to inject in builder.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Resolved dependency.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para><codeVoice>InjectError<\/codeVoice>.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 80,
            "key.doc.name" : "resolve(_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Dependency injection scope."
                  }
                ],
                "name" : "scope"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Parameters to inject in builder."
                  }
                ],
                "name" : "parameters"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Resolved dependency."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 222,
            "key.docoffset" : 2198,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>resolve<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scope<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/ref.enum><\/decl.var.parameter.type> = .singleton<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>parameters<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Parametersq_mfp\">Parameters<\/ref.generic_type_param>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1164,
            "key.line" : 80,
            "key.modulename" : "Inject",
            "key.name" : "resolve(_:_:)",
            "key.namelength" : 91,
            "key.nameoffset" : 2435,
            "key.offset" : 2430,
            "key.parsed_declaration" : "open func resolve(_ scope: Scope = .singleton,\n                  _ parameters: Parameters? = nil) throws -> Dependency",
            "key.parsed_scope.end" : 105,
            "key.parsed_scope.start" : 80,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var resolved: [Any]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>resolved<\/decl.name>: <decl.var.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.line" : 82,
                "key.modulename" : "Inject",
                "key.name" : "resolved",
                "key.namelength" : 8,
                "key.nameoffset" : 2562,
                "key.offset" : 2558,
                "key.parsed_declaration" : "var resolved = try dependencies()",
                "key.parsed_scope.end" : 82,
                "key.parsed_scope.start" : 82,
                "key.reusingastcontext" : false,
                "key.typename" : "[Any]",
                "key.typeusr" : "$sSayypGD",
                "key.usr" : "s:6Inject0A15PropertyWrapperC7resolveyxAC5ScopeOyxq__G_q_SgtKF8resolvedL_SayypGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let mockDependencies: [Any]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>mockDependencies<\/decl.name>: <decl.var.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 147,
                "key.line" : 98,
                "key.modulename" : "Inject",
                "key.name" : "mockDependencies",
                "key.namelength" : 16,
                "key.nameoffset" : 3236,
                "key.offset" : 3232,
                "key.parsed_declaration" : "let mockDependencies = resolved.filter { dependency in\n    class_conformsToProtocol(type(of: dependency) as? AnyClass, Mock.self)\n}",
                "key.parsed_scope.end" : 98,
                "key.parsed_scope.start" : 98,
                "key.reusingastcontext" : false,
                "key.typename" : "[Any]",
                "key.typeusr" : "$sSayypGD",
                "key.usr" : "s:6Inject0A15PropertyWrapperC7resolveyxAC5ScopeOyxq__G_q_SgtKF16mockDependenciesL_SayypGvp"
              }
            ],
            "key.typename" : "<Dependency, Parameters> (InjectPropertyWrapper<Dependency, Parameters>) -> (InjectPropertyWrapper<Dependency, Parameters>.Scope, Parameters?) throws -> Dependency",
            "key.typeusr" : "$syx6Inject0A15PropertyWrapperC5ScopeOyxq__G_q_SgtKcD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC7resolveyxAC5ScopeOyxq__G_q_SgtKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> private func dependencies(_ errorClosureExecuted: <Type usr=\"s:Sb\">Bool<\/Type> = false) throws -&gt; [Any]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3723
              }
            ],
            "key.bodylength" : 595,
            "key.bodyoffset" : 3804,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Get all matching dependencies.\n\n- Throws: `InjectError`.\n\n- Returns: Matching dependencies.\n",
            "key.doc.column" : 18,
            "key.doc.comment" : "Get all matching dependencies.\n\n- Throws: `InjectError`.\n\n- Returns: Matching dependencies.",
            "key.doc.declaration" : "@Storage.StorageActor private func dependencies(_ errorClosureExecuted: Bool = false) throws -> [Any]",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"114\" column=\"18\"><Name>dependencies(_:)<\/Name><USR>s:6Inject0A15PropertyWrapperC12dependencies33_20C6B87F59B28AA34C306CA453D5E1F5LLySayypGSbKF<\/USR><Declaration>@Storage.StorageActor private func dependencies(_ errorClosureExecuted: Bool = false) throws -&gt; [Any]<\/Declaration><CommentParts><Abstract><Para>Get all matching dependencies.<\/Para><\/Abstract><ResultDiscussion><Para>Matching dependencies.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para><codeVoice>InjectError<\/codeVoice>.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 114,
            "key.doc.name" : "dependencies(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Matching dependencies."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 118,
            "key.docoffset" : 3600,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>dependencies<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>errorClosureExecuted<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 669,
            "key.line" : 114,
            "key.modulename" : "Inject",
            "key.name" : "dependencies(_:)",
            "key.namelength" : 50,
            "key.nameoffset" : 3736,
            "key.offset" : 3731,
            "key.parsed_declaration" : "private func dependencies(_ errorClosureExecuted: Bool = false) throws -> [Any]",
            "key.parsed_scope.end" : 130,
            "key.parsed_scope.start" : 114,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let error: <Type usr=\"s:6Inject0A5ErrorO\">InjectError<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>error<\/decl.name>: <decl.var.type><ref.enum usr=\"s:6Inject0A5ErrorO\">InjectError<\/ref.enum><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 87,
                "key.line" : 124,
                "key.modulename" : "Inject",
                "key.name" : "error",
                "key.namelength" : 5,
                "key.nameoffset" : 4131,
                "key.offset" : 4127,
                "key.parsed_declaration" : "let error = InjectError.notFound(Dependency.self, qualifiers: qualifiers, group: group)",
                "key.parsed_scope.end" : 124,
                "key.parsed_scope.start" : 124,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:s5erroryySScfm\">error(_:)<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.typename" : "InjectError",
                "key.typeusr" : "$s6Inject0A5ErrorOD",
                "key.usr" : "s:6Inject0A15PropertyWrapperC12dependencies33_20C6B87F59B28AA34C306CA453D5E1F5LLySayypGSbKF5errorL_AA0A5ErrorOvp"
              }
            ],
            "key.typename" : "<Dependency, Parameters> (InjectPropertyWrapper<Dependency, Parameters>) -> (Bool) throws -> [Any]",
            "key.typeusr" : "$sySayypGSbKcD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC12dependencies33_20C6B87F59B28AA34C306CA453D5E1F5LLySayypGSbKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func instance(_ dependencies: [Any], _ scope: <Type usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/Type>, _ parameters: <Type usr=\"s:6Inject0A15PropertyWrapperC10Parametersq_mfp\">Parameters<\/Type>?) -&gt; <Type usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 4724
              }
            ],
            "key.bodylength" : 902,
            "key.bodyoffset" : 4871,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Resolve a dependency from candidate dependencies or by calling the builder if necessary.\n\n- Parameter dependencies: Candidate dependencies.\n- Parameter scope: Dependency injection scope.\n- Parameter parameters: Parameters to inject in builder.\n\n- Returns: Resolved dependency.\n",
            "key.doc.column" : 15,
            "key.doc.comment" : "Resolve a dependency from candidate dependencies or by calling the builder if necessary.\n\n- Parameter dependencies: Candidate dependencies.\n- Parameter scope: Dependency injection scope.\n- Parameter parameters: Parameters to inject in builder.\n\n- Returns: Resolved dependency.",
            "key.doc.declaration" : "@Storage.StorageActor open func instance(_ dependencies: [Any], _ scope: Scope, _ parameters: Parameters?) -> Dependency?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"141\" column=\"15\"><Name>instance(_:_:_:)<\/Name><USR>s:6Inject0A15PropertyWrapperC8instanceyxSgSayypG_AC5ScopeOyxq__Gq_SgtF<\/USR><Declaration>@Storage.StorageActor open func instance(_ dependencies: [Any], _ scope: Scope, _ parameters: Parameters?) -&gt; Dependency?<\/Declaration><CommentParts><Abstract><Para>Resolve a dependency from candidate dependencies or by calling the builder if necessary.<\/Para><\/Abstract><Parameters><Parameter><Name>dependencies<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Candidate dependencies.<\/Para><\/Discussion><\/Parameter><Parameter><Name>scope<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency injection scope.<\/Para><\/Discussion><\/Parameter><Parameter><Name>parameters<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Parameters to inject in builder.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Resolved dependency.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 141,
            "key.doc.name" : "instance(_:_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Candidate dependencies."
                  }
                ],
                "name" : "dependencies"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Dependency injection scope."
                  }
                ],
                "name" : "scope"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Parameters to inject in builder."
                  }
                ],
                "name" : "parameters"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Resolved dependency."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 313,
            "key.docoffset" : 4406,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>instance<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dependencies<\/decl.var.parameter.name>: <decl.var.parameter.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scope<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>parameters<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Parametersq_mfp\">Parameters<\/ref.generic_type_param>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1045,
            "key.line" : 141,
            "key.modulename" : "Inject",
            "key.name" : "instance(_:_:_:)",
            "key.namelength" : 120,
            "key.nameoffset" : 4734,
            "key.offset" : 4729,
            "key.parsed_declaration" : "open func instance(_ dependencies: [Any],\n                   _ scope: Scope,\n                   _ parameters: Parameters?) -> Dependency?",
            "key.parsed_scope.end" : 169,
            "key.parsed_scope.start" : 141,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var dependency: <Type usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/Type>?<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dependency<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 27,
                "key.line" : 144,
                "key.modulename" : "Inject",
                "key.name" : "dependency",
                "key.namelength" : 10,
                "key.nameoffset" : 4884,
                "key.offset" : 4880,
                "key.parsed_declaration" : "var dependency: Dependency?",
                "key.parsed_scope.end" : 144,
                "key.parsed_scope.start" : 144,
                "key.reusingastcontext" : false,
                "key.typename" : "Dependency?",
                "key.typeusr" : "$sxSgD",
                "key.usr" : "s:6Inject0A15PropertyWrapperC8instanceyxSgSayypG_AC5ScopeOyxq__Gq_SgtF10dependencyL_AEvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let instances: [<Type usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>instances<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 47,
                "key.line" : 145,
                "key.modulename" : "Inject",
                "key.name" : "instances",
                "key.namelength" : 9,
                "key.nameoffset" : 4920,
                "key.offset" : 4916,
                "key.parsed_declaration" : "let instances: [Dependency] = map(dependencies)",
                "key.parsed_scope.end" : 145,
                "key.parsed_scope.start" : 145,
                "key.reusingastcontext" : false,
                "key.typename" : "[Dependency]",
                "key.typeusr" : "$sSayxGD",
                "key.usr" : "s:6Inject0A15PropertyWrapperC8instanceyxSgSayypG_AC5ScopeOyxq__Gq_SgtF9instancesL_SayxGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let builders: [() -&gt; <Type usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>builders<\/decl.name>: <decl.var.type>[() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC10Dependencyxmfp\">Dependency<\/ref.generic_type_param><\/decl.function.returntype>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 52,
                "key.line" : 157,
                "key.modulename" : "Inject",
                "key.name" : "builders",
                "key.namelength" : 8,
                "key.nameoffset" : 5351,
                "key.offset" : 5347,
                "key.parsed_declaration" : "let builders: [() -> Dependency] = map(dependencies)",
                "key.parsed_scope.end" : 157,
                "key.parsed_scope.start" : 157,
                "key.reusingastcontext" : false,
                "key.typename" : "[() -> Dependency]",
                "key.typeusr" : "$sSayxycGD",
                "key.usr" : "s:6Inject0A15PropertyWrapperC8instanceyxSgSayypG_AC5ScopeOyxq__Gq_SgtF8buildersL0_SayxycGvp"
              }
            ],
            "key.typename" : "<Dependency, Parameters> (InjectPropertyWrapper<Dependency, Parameters>) -> ([Any], InjectPropertyWrapper<Dependency, Parameters>.Scope, Parameters?) -> Dependency?",
            "key.typeusr" : "$syxSgSayypG_6Inject0A15PropertyWrapperC5ScopeOyxq__Gq_SgtcD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC8instanceyxSgSayypG_AC5ScopeOyxq__Gq_SgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> func map&lt;Result&gt;(_ dependencies: [Any]) -&gt; [<Type usr=\"s:6Inject0A15PropertyWrapperC3mapySayqd__GSayypGlF6ResultL_qd__mfp\">Result<\/Type>]<\/Declaration>",
            "key.bodylength" : 55,
            "key.bodyoffset" : 5833,
            "key.column" : 10,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>map<\/decl.name>&lt;<decl.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC3mapySayqd__GSayypGlF6ResultL_qd__mfp\"><decl.generic_type_param.name>Result<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dependencies<\/decl.var.parameter.name>: <decl.var.parameter.type>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:6Inject0A15PropertyWrapperC3mapySayqd__GSayypGlF6ResultL_qd__mfp\">Result<\/ref.generic_type_param>]<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 109,
            "key.line" : 171,
            "key.modulename" : "Inject",
            "key.name" : "map(_:)",
            "key.namelength" : 34,
            "key.nameoffset" : 5785,
            "key.offset" : 5780,
            "key.parsed_declaration" : "func map<Result>(_ dependencies: [Any]) -> [Result]",
            "key.parsed_scope.end" : 173,
            "key.parsed_scope.start" : 171,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Result<\/Declaration>",
                "key.column" : 14,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Result<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 6,
                "key.line" : 171,
                "key.modulename" : "Inject",
                "key.name" : "Result",
                "key.namelength" : 6,
                "key.nameoffset" : 5789,
                "key.offset" : 5789,
                "key.parsed_declaration" : "func map<Result",
                "key.parsed_scope.end" : 171,
                "key.parsed_scope.start" : 171,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:s6ResultO\">Result<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.typename" : "Result.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:6Inject0A15PropertyWrapperC3mapySayqd__GSayypGlF6ResultL_qd__mfp"
              }
            ],
            "key.typename" : "<Dependency, Parameters, Result> (InjectPropertyWrapper<Dependency, Parameters>) -> ([Any]) -> [Result]",
            "key.typeusr" : "$sySayqd__GSayypGcluD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC3mapySayqd__GSayypGlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open func description(_ error: <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 5992
              }
            ],
            "key.bodylength" : 141,
            "key.bodyoffset" : 6041,
            "key.column" : 15,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "A `String` representation of `Error`.\n\n- Parameter error: Any `Error`.\n",
            "key.doc.column" : 15,
            "key.doc.comment" : "A `String` representation of `Error`.\n\n- Parameter error: Any `Error`.",
            "key.doc.declaration" : "@Storage.StorageActor open func description(_ error: Error) -> String",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"180\" column=\"15\"><Name>description(_:)<\/Name><USR>s:6Inject0A15PropertyWrapperC11descriptionySSs5Error_pF<\/USR><Declaration>@Storage.StorageActor open func description(_ error: Error) -&gt; String<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>String<\/codeVoice> representation of <codeVoice>Error<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Any <codeVoice>Error<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 180,
            "key.doc.name" : "description(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Any `Error`."
                  }
                ],
                "name" : "error"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 92,
            "key.docoffset" : 5895,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>description<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>error<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 186,
            "key.line" : 180,
            "key.modulename" : "Inject",
            "key.name" : "description(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 6002,
            "key.offset" : 5997,
            "key.parsed_declaration" : "open func description(_ error: Error) -> String",
            "key.parsed_scope.end" : 185,
            "key.parsed_scope.start" : 180,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A15PropertyWrapperC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Dependency, Parameters> (InjectPropertyWrapper<Dependency, Parameters>) -> (any Error) -> String",
            "key.typeusr" : "$sySSs5Error_pcD",
            "key.usr" : "s:6Inject0A15PropertyWrapperC11descriptionySSs5Error_pF"
          }
        ],
        "key.typename" : "InjectPropertyWrapper<Dependency, Parameters>.Type",
        "key.typeusr" : "$s6Inject0A15PropertyWrapperCyxq_GmD",
        "key.usr" : "s:6Inject0A15PropertyWrapperC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@propertyWrapper @<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public class Inject&lt;Dependency&gt; : <Type usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/Type>&lt;<Type usr=\"s:6InjectAAC10Dependencyxmfp\">Dependency<\/Type>, <Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 6236
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 6219
          }
        ],
        "key.bodylength" : 513,
        "key.bodyoffset" : 6310,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`@Inject` property wrapper.",
        "key.doc.column" : 14,
        "key.doc.comment" : "`@Inject` property wrapper.",
        "key.doc.declaration" : "@propertyWrapper @Storage.StorageActor public class Inject<Dependency> : InjectPropertyWrapper<Dependency, Void>",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"190\" column=\"14\"><Name>Inject<\/Name><USR>s:6InjectAAC<\/USR><Declaration>@propertyWrapper @Storage.StorageActor public class Inject&lt;Dependency&gt; : InjectPropertyWrapper&lt;Dependency, Void&gt;<\/Declaration><CommentParts><Abstract><Para><codeVoice>@Inject<\/codeVoice> property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 190,
        "key.doc.name" : "Inject",
        "key.doc.type" : "Class",
        "key.doclength" : 32,
        "key.docoffset" : 6187,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 39,
            "key.offset" : 6269
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Inject<\/decl.name>&lt;<decl.generic_type_param usr=\"s:6InjectAAC10Dependencyxmfp\"><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.class usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6InjectAAC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>, <ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "InjectPropertyWrapper<Dependency, Void>"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 581,
        "key.line" : 190,
        "key.modulename" : "Inject",
        "key.name" : "Inject",
        "key.namelength" : 6,
        "key.nameoffset" : 6249,
        "key.offset" : 6243,
        "key.parsed_declaration" : "public class Inject<Dependency>: InjectPropertyWrapper<Dependency, Void>",
        "key.parsed_scope.end" : 208,
        "key.parsed_scope.start" : 190,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Dependency<\/Declaration>",
            "key.column" : 21,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 10,
            "key.line" : 190,
            "key.modulename" : "Inject",
            "key.name" : "Dependency",
            "key.namelength" : 10,
            "key.nameoffset" : 6256,
            "key.offset" : 6256,
            "key.parsed_declaration" : "public class Inject<Dependency",
            "key.parsed_scope.end" : 190,
            "key.parsed_scope.start" : 190,
            "key.receivers" : [
              {
                "key.usr" : "s:6InjectAAC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:6InjectAAC10Dependencyxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public var scope: <Type usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6340
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Injection scope.",
            "key.doc.column" : 16,
            "key.doc.comment" : "Injection scope.",
            "key.doc.declaration" : "@Storage.StorageActor public var scope: Scope",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"192\" column=\"16\"><Name>scope<\/Name><USR>s:6InjectAAC5scopeAA0A15PropertyWrapperC5ScopeOyxyt_Gvp<\/USR><Declaration>@Storage.StorageActor public var scope: Scope<\/Declaration><CommentParts><Abstract><Para>Injection scope.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 192,
            "key.doc.name" : "scope",
            "key.doc.type" : "Other",
            "key.doclength" : 21,
            "key.docoffset" : 6315,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>scope<\/decl.name>: <decl.var.type><ref.enum usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.line" : 192,
            "key.modulename" : "Inject",
            "key.name" : "scope",
            "key.namelength" : 5,
            "key.nameoffset" : 6351,
            "key.offset" : 6347,
            "key.parsed_declaration" : "public var scope: Scope = .singleton",
            "key.parsed_scope.end" : 192,
            "key.parsed_scope.start" : 192,
            "key.receivers" : [
              {
                "key.usr" : "s:6InjectAAC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "InjectPropertyWrapper<Dependency, ()>.Scope",
            "key.typeusr" : "$s6Inject0A15PropertyWrapperC5ScopeOyxyt_GD",
            "key.usr" : "s:6InjectAAC5scopeAA0A15PropertyWrapperC5ScopeOyxyt_Gvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public convenience init(_ scope: <Type usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/Type> = .singleton, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 6534
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6527
              }
            ],
            "key.bodylength" : 68,
            "key.bodyoffset" : 6643,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `Inject` property wrapper.\n\n- Parameter scope: Injection scope.\n- Parameter group: Dependency group key.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a `Inject` property wrapper.\n\n- Parameter scope: Injection scope.\n- Parameter group: Dependency group key.",
            "key.doc.declaration" : "@Storage.StorageActor public convenience init(_ scope: Scope = .singleton, group: DependencyGroupKey? = nil)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"200\" column=\"24\"><Name>init(_:group:)<\/Name><USR>s:6InjectAAC_5groupAByxGAA0A15PropertyWrapperC5ScopeOyxyt_G_SSSgtcfc<\/USR><Declaration>@Storage.StorageActor public convenience init(_ scope: Scope = .singleton, group: DependencyGroupKey? = nil)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>Inject<\/codeVoice> property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>scope<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Injection scope.<\/Para><\/Discussion><\/Parameter><Parameter><Name>group<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency group key.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 200,
            "key.doc.name" : "init(_:group:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Injection scope."
                  }
                ],
                "name" : "scope"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Dependency group key."
                  }
                ],
                "name" : "group"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 140,
            "key.docoffset" : 6382,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scope<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/ref.enum><\/decl.var.parameter.type> = .singleton<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 166,
            "key.line" : 200,
            "key.modulename" : "Inject",
            "key.name" : "init(_:group:)",
            "key.namelength" : 95,
            "key.nameoffset" : 6546,
            "key.offset" : 6546,
            "key.parsed_declaration" : "public convenience init(_ scope: Scope = .singleton,\n                        group: DependencyGroupKey? = nil)",
            "key.parsed_scope.end" : 204,
            "key.parsed_scope.start" : 200,
            "key.receivers" : [
              {
                "key.usr" : "s:6InjectAAC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6InjectAACyAByxGAA0A7StorageC_SStcfc\">init(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSo8ProtocolC_SSSgtcfc\">init(_: Qualifier, group: DependencyGroupKey? = nil)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSaySo8ProtocolCG_SSSgtcfc\">init(_: [Qualifier], group: DependencyGroupKey? = nil)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Dependency> (Inject<Dependency>.Type) -> (InjectPropertyWrapper<Dependency, ()>.Scope, String?) -> Inject<Dependency>",
            "key.typeusr" : "$s_5group6InjectABCyxGAB0B15PropertyWrapperC5ScopeOyxyt_G_SSSgtcD",
            "key.usr" : "s:6InjectAAC_5groupAByxGAA0A15PropertyWrapperC5ScopeOyxyt_G_SSSgtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public var wrappedValue: <Type usr=\"s:6InjectAAC10Dependencyxmfp\">Dependency<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6762
              }
            ],
            "key.bodylength" : 21,
            "key.bodyoffset" : 6800,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Property wrapper stored dependency.",
            "key.doc.column" : 16,
            "key.doc.comment" : "Property wrapper stored dependency.",
            "key.doc.declaration" : "@Storage.StorageActor public var wrappedValue: Dependency? { get }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"207\" column=\"16\"><Name>wrappedValue<\/Name><USR>s:6InjectAAC12wrappedValuexSgvp<\/USR><Declaration>@Storage.StorageActor public var wrappedValue: Dependency? { get }<\/Declaration><CommentParts><Abstract><Para>Property wrapper stored dependency.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 207,
            "key.doc.name" : "wrappedValue",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 6718,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:6InjectAAC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 53,
            "key.line" : 207,
            "key.modulename" : "Inject",
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 6773,
            "key.offset" : 6769,
            "key.parsed_declaration" : "public var wrappedValue: Dependency?",
            "key.parsed_scope.end" : 207,
            "key.parsed_scope.start" : 207,
            "key.receivers" : [
              {
                "key.usr" : "s:6InjectAAC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency?",
            "key.typeusr" : "$sxSgD",
            "key.usr" : "s:6InjectAAC12wrappedValuexSgvp"
          }
        ],
        "key.typename" : "Inject<Dependency>.Type",
        "key.typeusr" : "$s6InjectAACyxGmD",
        "key.usr" : "s:6InjectAAC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@propertyWrapper @<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public class InjectWith&lt;Dependency, Parameters&gt; : <Type usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/Type>&lt;<Type usr=\"s:6Inject0A4WithC10Dependencyxmfp\">Dependency<\/Type>, <Type usr=\"s:6Inject0A4WithC10Parametersq_mfp\">Parameters<\/Type>&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 6879
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 6862
          }
        ],
        "key.bodylength" : 589,
        "key.bodyoffset" : 6975,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`@InjectWith` property wrapper.",
        "key.doc.column" : 14,
        "key.doc.comment" : "`@InjectWith` property wrapper.",
        "key.doc.declaration" : "@propertyWrapper @Storage.StorageActor public class InjectWith<Dependency, Parameters> : InjectPropertyWrapper<Dependency, Parameters>",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"212\" column=\"14\"><Name>InjectWith<\/Name><USR>s:6Inject0A4WithC<\/USR><Declaration>@propertyWrapper @Storage.StorageActor public class InjectWith&lt;Dependency, Parameters&gt; : InjectPropertyWrapper&lt;Dependency, Parameters&gt;<\/Declaration><CommentParts><Abstract><Para><codeVoice>@InjectWith<\/codeVoice> property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 212,
        "key.doc.name" : "InjectWith",
        "key.doc.type" : "Class",
        "key.doclength" : 36,
        "key.docoffset" : 6826,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 45,
            "key.offset" : 6928
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>InjectWith<\/decl.name>&lt;<decl.generic_type_param usr=\"s:6Inject0A4WithC10Dependencyxmfp\"><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:6Inject0A4WithC10Parametersq_mfp\"><decl.generic_type_param.name>Parameters<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.class usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6Inject0A4WithC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:6Inject0A4WithC10Parametersq_mfp\">Parameters<\/ref.generic_type_param>&gt;<\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "InjectPropertyWrapper<Dependency, Parameters>"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 679,
        "key.line" : 212,
        "key.modulename" : "Inject",
        "key.name" : "InjectWith",
        "key.namelength" : 10,
        "key.nameoffset" : 6892,
        "key.offset" : 6886,
        "key.parsed_declaration" : "public class InjectWith<Dependency, Parameters>: InjectPropertyWrapper<Dependency, Parameters>",
        "key.parsed_scope.end" : 230,
        "key.parsed_scope.start" : 212,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Dependency<\/Declaration>",
            "key.column" : 25,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 10,
            "key.line" : 212,
            "key.modulename" : "Inject",
            "key.name" : "Dependency",
            "key.namelength" : 10,
            "key.nameoffset" : 6903,
            "key.offset" : 6903,
            "key.parsed_declaration" : "public class InjectWith<Dependency",
            "key.parsed_scope.end" : 212,
            "key.parsed_scope.start" : 212,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A4WithC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:6Inject0A4WithC10Dependencyxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Parameters<\/Declaration>",
            "key.column" : 37,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Parameters<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 10,
            "key.line" : 212,
            "key.modulename" : "Inject",
            "key.name" : "Parameters",
            "key.namelength" : 10,
            "key.nameoffset" : 6915,
            "key.offset" : 6915,
            "key.parsed_declaration" : "public class InjectWith<Dependency, Parameters",
            "key.parsed_scope.end" : 212,
            "key.parsed_scope.start" : 212,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A4WithC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Parameters.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:6Inject0A4WithC10Parametersq_mfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public var parameters: <Type usr=\"s:6Inject0A4WithC10Parametersq_mfp\">Parameters<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7021
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Parameters to inject in builder.",
            "key.doc.column" : 16,
            "key.doc.comment" : "Parameters to inject in builder.",
            "key.doc.declaration" : "@Storage.StorageActor public var parameters: Parameters?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"214\" column=\"16\"><Name>parameters<\/Name><USR>s:6Inject0A4WithC10parametersq_Sgvp<\/USR><Declaration>@Storage.StorageActor public var parameters: Parameters?<\/Declaration><CommentParts><Abstract><Para>Parameters to inject in builder.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 214,
            "key.doc.name" : "parameters",
            "key.doc.type" : "Other",
            "key.doclength" : 37,
            "key.docoffset" : 6980,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>parameters<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:6Inject0A4WithC10Parametersq_mfp\">Parameters<\/ref.generic_type_param>?<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 214,
            "key.modulename" : "Inject",
            "key.name" : "parameters",
            "key.namelength" : 10,
            "key.nameoffset" : 7032,
            "key.offset" : 7028,
            "key.parsed_declaration" : "public var parameters: Parameters?",
            "key.parsed_scope.end" : 214,
            "key.parsed_scope.start" : 214,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A4WithC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Parameters?",
            "key.typeusr" : "$sq_SgD",
            "key.usr" : "s:6Inject0A4WithC10parametersq_Sgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public convenience init(_ parameters: <Type usr=\"s:6Inject0A4WithC10Parametersq_mfp\">Parameters<\/Type>, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 7238
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7231
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 7344,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `InjectWith` property wrapper.\n\n- Parameter parameters: Parameters to inject in builder.\n- Parameter group: Dependency group key.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a `InjectWith` property wrapper.\n\n- Parameter parameters: Parameters to inject in builder.\n- Parameter group: Dependency group key.",
            "key.doc.declaration" : "@Storage.StorageActor public convenience init(_ parameters: Parameters, group: DependencyGroupKey? = nil)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"222\" column=\"24\"><Name>init(_:group:)<\/Name><USR>s:6Inject0A4WithC_5groupACyxq_Gq__SSSgtcfc<\/USR><Declaration>@Storage.StorageActor public convenience init(_ parameters: Parameters, group: DependencyGroupKey? = nil)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>InjectWith<\/codeVoice> property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>parameters<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Parameters to inject in builder.<\/Para><\/Discussion><\/Parameter><Parameter><Name>group<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency group key.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 222,
            "key.doc.name" : "init(_:group:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Parameters to inject in builder."
                  }
                ],
                "name" : "parameters"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Dependency group key."
                  }
                ],
                "name" : "group"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 165,
            "key.docoffset" : 7061,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>parameters<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:6Inject0A4WithC10Parametersq_mfp\">Parameters<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 173,
            "key.line" : 222,
            "key.modulename" : "Inject",
            "key.name" : "init(_:group:)",
            "key.namelength" : 92,
            "key.nameoffset" : 7250,
            "key.offset" : 7250,
            "key.parsed_declaration" : "public convenience init(_ parameters: Parameters,\n                        group: DependencyGroupKey? = nil)",
            "key.parsed_scope.end" : 226,
            "key.parsed_scope.start" : 222,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A4WithC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A4WithCyACyxq_GAA0A7StorageC_SStcfc\">init(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSo8ProtocolC_SSSgtcfc\">init(_: Qualifier, group: DependencyGroupKey? = nil)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSaySo8ProtocolCG_SSSgtcfc\">init(_: [Qualifier], group: DependencyGroupKey? = nil)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Dependency, Parameters> (InjectWith<Dependency, Parameters>.Type) -> (Parameters, String?) -> InjectWith<Dependency, Parameters>",
            "key.typeusr" : "$s_5group6Inject0B4WithCyxq_Gq__SSSgtcD",
            "key.usr" : "s:6Inject0A4WithC_5groupACyxq_Gq__SSSgtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public var wrappedValue: <Type usr=\"s:6Inject0A4WithC10Dependencyxmfp\">Dependency<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7487
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 7525,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "New dependency instance with parameters injected.",
            "key.doc.column" : 16,
            "key.doc.comment" : "New dependency instance with parameters injected.",
            "key.doc.declaration" : "@Storage.StorageActor public var wrappedValue: Dependency? { get }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"229\" column=\"16\"><Name>wrappedValue<\/Name><USR>s:6Inject0A4WithC12wrappedValuexSgvp<\/USR><Declaration>@Storage.StorageActor public var wrappedValue: Dependency? { get }<\/Declaration><CommentParts><Abstract><Para>New dependency instance with parameters injected.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 229,
            "key.doc.name" : "wrappedValue",
            "key.doc.type" : "Other",
            "key.doclength" : 54,
            "key.docoffset" : 7429,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:6Inject0A4WithC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 69,
            "key.line" : 229,
            "key.modulename" : "Inject",
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 7498,
            "key.offset" : 7494,
            "key.parsed_declaration" : "public var wrappedValue: Dependency?",
            "key.parsed_scope.end" : 229,
            "key.parsed_scope.start" : 229,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A4WithC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency?",
            "key.typeusr" : "$sxSgD",
            "key.usr" : "s:6Inject0A4WithC12wrappedValuexSgvp"
          }
        ],
        "key.typename" : "InjectWith<Dependency, Parameters>.Type",
        "key.typeusr" : "$s6Inject0A4WithCyxq_GmD",
        "key.usr" : "s:6Inject0A4WithC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@propertyWrapper @<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public class UnwrappedInject&lt;Dependency&gt; : <Type usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/Type>&lt;<Type usr=\"s:6Inject09UnwrappedA0C10Dependencyxmfp\">Dependency<\/Type>, <Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 7625
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 7608
          }
        ],
        "key.bodylength" : 627,
        "key.bodyoffset" : 7708,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`@UnwrappedInject` property wrapper.",
        "key.doc.column" : 14,
        "key.doc.comment" : "`@UnwrappedInject` property wrapper.",
        "key.doc.declaration" : "@propertyWrapper @Storage.StorageActor public class UnwrappedInject<Dependency> : InjectPropertyWrapper<Dependency, Void>",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"234\" column=\"14\"><Name>UnwrappedInject<\/Name><USR>s:6Inject09UnwrappedA0C<\/USR><Declaration>@propertyWrapper @Storage.StorageActor public class UnwrappedInject&lt;Dependency&gt; : InjectPropertyWrapper&lt;Dependency, Void&gt;<\/Declaration><CommentParts><Abstract><Para><codeVoice>@UnwrappedInject<\/codeVoice> property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 234,
        "key.doc.name" : "UnwrappedInject",
        "key.doc.type" : "Class",
        "key.doclength" : 41,
        "key.docoffset" : 7567,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 39,
            "key.offset" : 7667
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>UnwrappedInject<\/decl.name>&lt;<decl.generic_type_param usr=\"s:6Inject09UnwrappedA0C10Dependencyxmfp\"><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.class usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6Inject09UnwrappedA0C10Dependencyxmfp\">Dependency<\/ref.generic_type_param>, <ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "InjectPropertyWrapper<Dependency, Void>"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 704,
        "key.line" : 234,
        "key.modulename" : "Inject",
        "key.name" : "UnwrappedInject",
        "key.namelength" : 15,
        "key.nameoffset" : 7638,
        "key.offset" : 7632,
        "key.parsed_declaration" : "public class UnwrappedInject<Dependency>: InjectPropertyWrapper<Dependency, Void>",
        "key.parsed_scope.end" : 258,
        "key.parsed_scope.start" : 234,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Dependency<\/Declaration>",
            "key.column" : 30,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 10,
            "key.line" : 234,
            "key.modulename" : "Inject",
            "key.name" : "Dependency",
            "key.namelength" : 10,
            "key.nameoffset" : 7654,
            "key.offset" : 7654,
            "key.parsed_declaration" : "public class UnwrappedInject<Dependency",
            "key.parsed_scope.end" : 234,
            "key.parsed_scope.start" : 234,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject09UnwrappedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:6Inject09UnwrappedA0C10Dependencyxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public var scope: <Type usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7738
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Injection scope.",
            "key.doc.column" : 16,
            "key.doc.comment" : "Injection scope.",
            "key.doc.declaration" : "@Storage.StorageActor public var scope: Scope",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"236\" column=\"16\"><Name>scope<\/Name><USR>s:6Inject09UnwrappedA0C5scopeAA0A15PropertyWrapperC5ScopeOyxyt_Gvp<\/USR><Declaration>@Storage.StorageActor public var scope: Scope<\/Declaration><CommentParts><Abstract><Para>Injection scope.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 236,
            "key.doc.name" : "scope",
            "key.doc.type" : "Other",
            "key.doclength" : 21,
            "key.docoffset" : 7713,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>scope<\/decl.name>: <decl.var.type><ref.enum usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.line" : 236,
            "key.modulename" : "Inject",
            "key.name" : "scope",
            "key.namelength" : 5,
            "key.nameoffset" : 7749,
            "key.offset" : 7745,
            "key.parsed_declaration" : "public var scope: Scope = .singleton",
            "key.parsed_scope.end" : 236,
            "key.parsed_scope.start" : 236,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject09UnwrappedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "InjectPropertyWrapper<Dependency, ()>.Scope",
            "key.typeusr" : "$s6Inject0A15PropertyWrapperC5ScopeOyxyt_GD",
            "key.usr" : "s:6Inject09UnwrappedA0C5scopeAA0A15PropertyWrapperC5ScopeOyxyt_Gvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public convenience init(_ scope: <Type usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/Type> = .singleton, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 7941
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7934
              }
            ],
            "key.bodylength" : 68,
            "key.bodyoffset" : 8050,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `UnwrappedInject` property wrapper.\n\n- Parameter scope: Injection scope.\n- Parameter group: Dependency group key.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a `UnwrappedInject` property wrapper.\n\n- Parameter scope: Injection scope.\n- Parameter group: Dependency group key.",
            "key.doc.declaration" : "@Storage.StorageActor public convenience init(_ scope: Scope = .singleton, group: DependencyGroupKey? = nil)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"244\" column=\"24\"><Name>init(_:group:)<\/Name><USR>s:6Inject09UnwrappedA0C_5groupACyxGAA0A15PropertyWrapperC5ScopeOyxyt_G_SSSgtcfc<\/USR><Declaration>@Storage.StorageActor public convenience init(_ scope: Scope = .singleton, group: DependencyGroupKey? = nil)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>UnwrappedInject<\/codeVoice> property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>scope<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Injection scope.<\/Para><\/Discussion><\/Parameter><Parameter><Name>group<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency group key.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 244,
            "key.doc.name" : "init(_:group:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Injection scope."
                  }
                ],
                "name" : "scope"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Dependency group key."
                  }
                ],
                "name" : "group"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 149,
            "key.docoffset" : 7780,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>scope<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:6Inject0A15PropertyWrapperC5ScopeO\">Scope<\/ref.enum><\/decl.var.parameter.type> = .singleton<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 166,
            "key.line" : 244,
            "key.modulename" : "Inject",
            "key.name" : "init(_:group:)",
            "key.namelength" : 95,
            "key.nameoffset" : 7953,
            "key.offset" : 7953,
            "key.parsed_declaration" : "public convenience init(_ scope: Scope = .singleton,\n                        group: DependencyGroupKey? = nil)",
            "key.parsed_scope.end" : 248,
            "key.parsed_scope.start" : 244,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject09UnwrappedA0C"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject09UnwrappedA0CyACyxGAA0A7StorageC_SStcfc\">init(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSo8ProtocolC_SSSgtcfc\">init(_: Qualifier, group: DependencyGroupKey? = nil)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSaySo8ProtocolCG_SSSgtcfc\">init(_: [Qualifier], group: DependencyGroupKey? = nil)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Dependency> (UnwrappedInject<Dependency>.Type) -> (InjectPropertyWrapper<Dependency, ()>.Scope, String?) -> UnwrappedInject<Dependency>",
            "key.typeusr" : "$s_5group6Inject09UnwrappedB0CyxGAB0B15PropertyWrapperC5ScopeOyxyt_G_SSSgtcD",
            "key.usr" : "s:6Inject09UnwrappedA0C_5groupACyxGAA0A15PropertyWrapperC5ScopeOyxyt_G_SSSgtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public var wrappedValue: <Type usr=\"s:6Inject09UnwrappedA0C10Dependencyxmfp\">Dependency<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8169
              }
            ],
            "key.bodylength" : 127,
            "key.bodyoffset" : 8206,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Property wrapper stored dependency.",
            "key.doc.column" : 16,
            "key.doc.comment" : "Property wrapper stored dependency.",
            "key.doc.declaration" : "@Storage.StorageActor public var wrappedValue: Dependency { get }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"251\" column=\"16\"><Name>wrappedValue<\/Name><USR>s:6Inject09UnwrappedA0C12wrappedValuexvp<\/USR><Declaration>@Storage.StorageActor public var wrappedValue: Dependency { get }<\/Declaration><CommentParts><Abstract><Para>Property wrapper stored dependency.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 251,
            "key.doc.name" : "wrappedValue",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 8125,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:6Inject09UnwrappedA0C10Dependencyxmfp\">Dependency<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 158,
            "key.line" : 251,
            "key.modulename" : "Inject",
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 8180,
            "key.offset" : 8176,
            "key.parsed_declaration" : "public var wrappedValue: Dependency",
            "key.parsed_scope.end" : 257,
            "key.parsed_scope.start" : 251,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject09UnwrappedA0C"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:6Inject09UnwrappedA0C12wrappedValuexvp"
          }
        ],
        "key.typename" : "UnwrappedInject<Dependency>.Type",
        "key.typeusr" : "$s6Inject09UnwrappedA0CyxGmD",
        "key.usr" : "s:6Inject09UnwrappedA0C"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@propertyWrapper @<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public class UnwrappedInjectWith&lt;Dependency, Parameters&gt; : <Type usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/Type>&lt;<Type usr=\"s:6Inject09UnwrappedA4WithC10Dependencyxmfp\">Dependency<\/Type>, <Type usr=\"s:6Inject09UnwrappedA4WithC10Parametersq_mfp\">Parameters<\/Type>&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 8400
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 8383
          }
        ],
        "key.bodylength" : 703,
        "key.bodyoffset" : 8505,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`@UnwrappedInjectWith` property wrapper.",
        "key.doc.column" : 14,
        "key.doc.comment" : "`@UnwrappedInjectWith` property wrapper.",
        "key.doc.declaration" : "@propertyWrapper @Storage.StorageActor public class UnwrappedInjectWith<Dependency, Parameters> : InjectPropertyWrapper<Dependency, Parameters>",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"262\" column=\"14\"><Name>UnwrappedInjectWith<\/Name><USR>s:6Inject09UnwrappedA4WithC<\/USR><Declaration>@propertyWrapper @Storage.StorageActor public class UnwrappedInjectWith&lt;Dependency, Parameters&gt; : InjectPropertyWrapper&lt;Dependency, Parameters&gt;<\/Declaration><CommentParts><Abstract><Para><codeVoice>@UnwrappedInjectWith<\/codeVoice> property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 262,
        "key.doc.name" : "UnwrappedInjectWith",
        "key.doc.type" : "Class",
        "key.doclength" : 45,
        "key.docoffset" : 8338,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 45,
            "key.offset" : 8458
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>UnwrappedInjectWith<\/decl.name>&lt;<decl.generic_type_param usr=\"s:6Inject09UnwrappedA4WithC10Dependencyxmfp\"><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:6Inject09UnwrappedA4WithC10Parametersq_mfp\"><decl.generic_type_param.name>Parameters<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.class usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6Inject09UnwrappedA4WithC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:6Inject09UnwrappedA4WithC10Parametersq_mfp\">Parameters<\/ref.generic_type_param>&gt;<\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "InjectPropertyWrapper<Dependency, Parameters>"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 802,
        "key.line" : 262,
        "key.modulename" : "Inject",
        "key.name" : "UnwrappedInjectWith",
        "key.namelength" : 19,
        "key.nameoffset" : 8413,
        "key.offset" : 8407,
        "key.parsed_declaration" : "public class UnwrappedInjectWith<Dependency, Parameters>: InjectPropertyWrapper<Dependency, Parameters>",
        "key.parsed_scope.end" : 286,
        "key.parsed_scope.start" : 262,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Dependency<\/Declaration>",
            "key.column" : 34,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 10,
            "key.line" : 262,
            "key.modulename" : "Inject",
            "key.name" : "Dependency",
            "key.namelength" : 10,
            "key.nameoffset" : 8433,
            "key.offset" : 8433,
            "key.parsed_declaration" : "public class UnwrappedInjectWith<Dependency",
            "key.parsed_scope.end" : 262,
            "key.parsed_scope.start" : 262,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject09UnwrappedA4WithC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:6Inject09UnwrappedA4WithC10Dependencyxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Parameters<\/Declaration>",
            "key.column" : 46,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Parameters<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 10,
            "key.line" : 262,
            "key.modulename" : "Inject",
            "key.name" : "Parameters",
            "key.namelength" : 10,
            "key.nameoffset" : 8445,
            "key.offset" : 8445,
            "key.parsed_declaration" : "public class UnwrappedInjectWith<Dependency, Parameters",
            "key.parsed_scope.end" : 262,
            "key.parsed_scope.start" : 262,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject09UnwrappedA4WithC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Parameters.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:6Inject09UnwrappedA4WithC10Parametersq_mfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public var parameters: <Type usr=\"s:6Inject09UnwrappedA4WithC10Parametersq_mfp\">Parameters<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8551
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Parameters to inject in builder.",
            "key.doc.column" : 16,
            "key.doc.comment" : "Parameters to inject in builder.",
            "key.doc.declaration" : "@Storage.StorageActor public var parameters: Parameters?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"264\" column=\"16\"><Name>parameters<\/Name><USR>s:6Inject09UnwrappedA4WithC10parametersq_Sgvp<\/USR><Declaration>@Storage.StorageActor public var parameters: Parameters?<\/Declaration><CommentParts><Abstract><Para>Parameters to inject in builder.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 264,
            "key.doc.name" : "parameters",
            "key.doc.type" : "Other",
            "key.doclength" : 37,
            "key.docoffset" : 8510,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>parameters<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:6Inject09UnwrappedA4WithC10Parametersq_mfp\">Parameters<\/ref.generic_type_param>?<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 264,
            "key.modulename" : "Inject",
            "key.name" : "parameters",
            "key.namelength" : 10,
            "key.nameoffset" : 8562,
            "key.offset" : 8558,
            "key.parsed_declaration" : "public var parameters: Parameters?",
            "key.parsed_scope.end" : 264,
            "key.parsed_scope.start" : 264,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject09UnwrappedA4WithC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Parameters?",
            "key.typeusr" : "$sq_SgD",
            "key.usr" : "s:6Inject09UnwrappedA4WithC10parametersq_Sgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public convenience init(_ parameters: <Type usr=\"s:6Inject09UnwrappedA4WithC10Parametersq_mfp\">Parameters<\/Type>, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 8777
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8770
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 8883,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `UnwrappedInjectWith` property wrapper.\n\n- Parameter parameters: Parameters to inject in builder.\n- Parameter group: Dependency group key.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a `UnwrappedInjectWith` property wrapper.\n\n- Parameter parameters: Parameters to inject in builder.\n- Parameter group: Dependency group key.",
            "key.doc.declaration" : "@Storage.StorageActor public convenience init(_ parameters: Parameters, group: DependencyGroupKey? = nil)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"272\" column=\"24\"><Name>init(_:group:)<\/Name><USR>s:6Inject09UnwrappedA4WithC_5groupACyxq_Gq__SSSgtcfc<\/USR><Declaration>@Storage.StorageActor public convenience init(_ parameters: Parameters, group: DependencyGroupKey? = nil)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>UnwrappedInjectWith<\/codeVoice> property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>parameters<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Parameters to inject in builder.<\/Para><\/Discussion><\/Parameter><Parameter><Name>group<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency group key.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 272,
            "key.doc.name" : "init(_:group:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Parameters to inject in builder."
                  }
                ],
                "name" : "parameters"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Dependency group key."
                  }
                ],
                "name" : "group"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 174,
            "key.docoffset" : 8591,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>parameters<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:6Inject09UnwrappedA4WithC10Parametersq_mfp\">Parameters<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 173,
            "key.line" : 272,
            "key.modulename" : "Inject",
            "key.name" : "init(_:group:)",
            "key.namelength" : 92,
            "key.nameoffset" : 8789,
            "key.offset" : 8789,
            "key.parsed_declaration" : "public convenience init(_ parameters: Parameters,\n                        group: DependencyGroupKey? = nil)",
            "key.parsed_scope.end" : 276,
            "key.parsed_scope.start" : 272,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject09UnwrappedA4WithC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject09UnwrappedA4WithCyACyxq_GAA0A7StorageC_SStcfc\">init(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSo8ProtocolC_SSSgtcfc\">init(_: Qualifier, group: DependencyGroupKey? = nil)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSaySo8ProtocolCG_SSSgtcfc\">init(_: [Qualifier], group: DependencyGroupKey? = nil)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Dependency, Parameters> (UnwrappedInjectWith<Dependency, Parameters>.Type) -> (Parameters, String?) -> UnwrappedInjectWith<Dependency, Parameters>",
            "key.typeusr" : "$s_5group6Inject09UnwrappedB4WithCyxq_Gq__SSSgtcD",
            "key.usr" : "s:6Inject09UnwrappedA4WithC_5groupACyxq_Gq__SSSgtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public var wrappedValue: <Type usr=\"s:6Inject09UnwrappedA4WithC10Dependencyxmfp\">Dependency<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9026
              }
            ],
            "key.bodylength" : 143,
            "key.bodyoffset" : 9063,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "New dependency instance with parameters injected.",
            "key.doc.column" : 16,
            "key.doc.comment" : "New dependency instance with parameters injected.",
            "key.doc.declaration" : "@Storage.StorageActor public var wrappedValue: Dependency { get }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"279\" column=\"16\"><Name>wrappedValue<\/Name><USR>s:6Inject09UnwrappedA4WithC12wrappedValuexvp<\/USR><Declaration>@Storage.StorageActor public var wrappedValue: Dependency { get }<\/Declaration><CommentParts><Abstract><Para>New dependency instance with parameters injected.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 279,
            "key.doc.name" : "wrappedValue",
            "key.doc.type" : "Other",
            "key.doclength" : 54,
            "key.docoffset" : 8968,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:6Inject09UnwrappedA4WithC10Dependencyxmfp\">Dependency<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 174,
            "key.line" : 279,
            "key.modulename" : "Inject",
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 9037,
            "key.offset" : 9033,
            "key.parsed_declaration" : "public var wrappedValue: Dependency",
            "key.parsed_scope.end" : 285,
            "key.parsed_scope.start" : 279,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject09UnwrappedA4WithC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:6Inject09UnwrappedA4WithC12wrappedValuexvp"
          }
        ],
        "key.typename" : "UnwrappedInjectWith<Dependency, Parameters>.Type",
        "key.typeusr" : "$s6Inject09UnwrappedA4WithCyxq_GmD",
        "key.usr" : "s:6Inject09UnwrappedA4WithC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@propertyWrapper @<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public class Register&lt;Dependency&gt; : <Type usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/Type>&lt;<Type usr=\"s:6Inject8RegisterC10Dependencyxmfp\">Dependency<\/Type>, <Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 9262
          },
          {
            "key.attribute" : "source.decl.attribute.propertyWrapper",
            "key.length" : 16,
            "key.offset" : 9245
          }
        ],
        "key.bodylength" : 651,
        "key.bodyoffset" : 9338,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`@Register` property wrapper.",
        "key.doc.column" : 14,
        "key.doc.comment" : "`@Register` property wrapper.",
        "key.doc.declaration" : "@propertyWrapper @Storage.StorageActor public class Register<Dependency> : InjectPropertyWrapper<Dependency, Void>",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"290\" column=\"14\"><Name>Register<\/Name><USR>s:6Inject8RegisterC<\/USR><Declaration>@propertyWrapper @Storage.StorageActor public class Register&lt;Dependency&gt; : InjectPropertyWrapper&lt;Dependency, Void&gt;<\/Declaration><CommentParts><Abstract><Para><codeVoice>@Register<\/codeVoice> property wrapper.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 290,
        "key.doc.name" : "Register",
        "key.doc.type" : "Class",
        "key.doclength" : 34,
        "key.docoffset" : 9211,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 39,
            "key.offset" : 9297
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@propertyWrapper<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Register<\/decl.name>&lt;<decl.generic_type_param usr=\"s:6Inject8RegisterC10Dependencyxmfp\"><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.class usr=\"s:6Inject0A15PropertyWrapperC\">InjectPropertyWrapper<\/ref.class>&lt;<ref.generic_type_param usr=\"s:6Inject8RegisterC10Dependencyxmfp\">Dependency<\/ref.generic_type_param>, <ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "InjectPropertyWrapper<Dependency, Void>"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 721,
        "key.line" : 290,
        "key.modulename" : "Inject",
        "key.name" : "Register",
        "key.namelength" : 8,
        "key.nameoffset" : 9275,
        "key.offset" : 9269,
        "key.parsed_declaration" : "public class Register<Dependency>: InjectPropertyWrapper<Dependency, Void>",
        "key.parsed_scope.end" : 314,
        "key.parsed_scope.start" : 290,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Dependency<\/Declaration>",
            "key.column" : 23,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Dependency<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 10,
            "key.line" : 290,
            "key.modulename" : "Inject",
            "key.name" : "Dependency",
            "key.namelength" : 10,
            "key.nameoffset" : 9284,
            "key.offset" : 9284,
            "key.parsed_declaration" : "public class Register<Dependency",
            "key.parsed_scope.end" : 290,
            "key.parsed_scope.start" : 290,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject8RegisterC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "Dependency.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:6Inject8RegisterC10Dependencyxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public convenience init(wrappedValue: <Type usr=\"s:6Inject8RegisterC10Dependencyxmfp\">Dependency<\/Type>, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>? = nil)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 9510
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9503
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 9616,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Create a `Register` property wrapper.\n\n- Parameter wrappedValue: Registered dependency.\n- Parameter group: Dependency group key.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a `Register` property wrapper.\n\n- Parameter wrappedValue: Registered dependency.\n- Parameter group: Dependency group key.",
            "key.doc.declaration" : "@Storage.StorageActor public convenience init(wrappedValue: Dependency, group: DependencyGroupKey? = nil)",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"297\" column=\"24\"><Name>init(wrappedValue:group:)<\/Name><USR>s:6Inject8RegisterC12wrappedValue5groupACyxGx_SSSgtcfc<\/USR><Declaration>@Storage.StorageActor public convenience init(wrappedValue: Dependency, group: DependencyGroupKey? = nil)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>Register<\/codeVoice> property wrapper.<\/Para><\/Abstract><Parameters><Parameter><Name>wrappedValue<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Registered dependency.<\/Para><\/Discussion><\/Parameter><Parameter><Name>group<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dependency group key.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 297,
            "key.doc.name" : "init(wrappedValue:group:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Registered dependency."
                  }
                ],
                "name" : "wrappedValue"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Dependency group key."
                  }
                ],
                "name" : "group"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 155,
            "key.docoffset" : 9343,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>wrappedValue<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:6Inject8RegisterC10Dependencyxmfp\">Dependency<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 177,
            "key.line" : 297,
            "key.modulename" : "Inject",
            "key.name" : "init(wrappedValue:group:)",
            "key.namelength" : 92,
            "key.nameoffset" : 9522,
            "key.offset" : 9522,
            "key.parsed_declaration" : "public convenience init(wrappedValue: Dependency,\n                        group: DependencyGroupKey? = nil)",
            "key.parsed_scope.end" : 301,
            "key.parsed_scope.start" : 297,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject8RegisterC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject8RegisterCyACyxGAA0A7StorageC_SStcfc\">init(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSo8ProtocolC_SSSgtcfc\">init(_: Qualifier, group: DependencyGroupKey? = nil)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A15PropertyWrapperC_5groupACyxq_GSaySo8ProtocolCG_SSSgtcfc\">init(_: [Qualifier], group: DependencyGroupKey? = nil)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Dependency> (Register<Dependency>.Type) -> (Dependency, String?) -> Register<Dependency>",
            "key.typeusr" : "$s12wrappedValue5group6Inject8RegisterCyxGx_SSSgtcD",
            "key.usr" : "s:6Inject8RegisterC12wrappedValue5groupACyxGx_SSSgtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public var wrappedValue: <Type usr=\"s:6Inject8RegisterC10Dependencyxmfp\">Dependency<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9749
              }
            ],
            "key.bodylength" : 201,
            "key.bodyoffset" : 9786,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Property wrapper stored dependency.",
            "key.doc.column" : 16,
            "key.doc.comment" : "Property wrapper stored dependency.",
            "key.doc.declaration" : "@Storage.StorageActor public var wrappedValue: Dependency { get set }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift\" line=\"304\" column=\"16\"><Name>wrappedValue<\/Name><USR>s:6Inject8RegisterC12wrappedValuexvp<\/USR><Declaration>@Storage.StorageActor public var wrappedValue: Dependency { get set }<\/Declaration><CommentParts><Abstract><Para>Property wrapper stored dependency.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 304,
            "key.doc.name" : "wrappedValue",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 9705,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/Inject.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>wrappedValue<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:6Inject8RegisterC10Dependencyxmfp\">Dependency<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 232,
            "key.line" : 304,
            "key.modulename" : "Inject",
            "key.name" : "wrappedValue",
            "key.namelength" : 12,
            "key.nameoffset" : 9760,
            "key.offset" : 9756,
            "key.parsed_declaration" : "public var wrappedValue: Dependency",
            "key.parsed_scope.end" : 313,
            "key.parsed_scope.start" : 304,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject8RegisterC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Dependency",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:6Inject8RegisterC12wrappedValuexvp"
          }
        ],
        "key.typename" : "Register<Dependency>.Type",
        "key.typeusr" : "$s6Inject8RegisterCyxGmD",
        "key.usr" : "s:6Inject8RegisterC"
      }
    ]
  }
}, {
  "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1822,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum InjectError : <Type usr=\"s:s5ErrorP\">Error<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 23
          }
        ],
        "key.bodylength" : 1740,
        "key.bodyoffset" : 80,
        "key.column" : 13,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Inject error enum.",
        "key.doc.column" : 13,
        "key.doc.comment" : "Inject error enum.",
        "key.doc.declaration" : "public enum InjectError : Error, CustomStringConvertible",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift\" line=\"2\" column=\"13\"><Name>InjectError<\/Name><USR>s:6Inject0A5ErrorO<\/USR><Declaration>public enum InjectError : Error, CustomStringConvertible<\/Declaration><CommentParts><Abstract><Para>Inject error enum.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 2,
        "key.doc.name" : "InjectError",
        "key.doc.type" : "Other",
        "key.doclength" : 23,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 48
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 55
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>InjectError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Error"
          },
          {
            "key.name" : "CustomStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 1791,
        "key.line" : 2,
        "key.modulename" : "Inject",
        "key.name" : "InjectError",
        "key.namelength" : 11,
        "key.nameoffset" : 35,
        "key.offset" : 30,
        "key.parsed_declaration" : "public enum InjectError: Error, CustomStringConvertible",
        "key.parsed_scope.end" : 51,
        "key.parsed_scope.start" : 2,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias <Type usr=\"s:6Inject0A5ErrorO\">InjectError<\/Type>.QualifierDescriptor = <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 138
              }
            ],
            "key.column" : 22,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "A descriptor for the dependencies qualifiers",
            "key.doc.column" : 22,
            "key.doc.comment" : "A descriptor for the dependencies qualifiers",
            "key.doc.declaration" : "public typealias Inject.InjectError.QualifierDescriptor = String",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift\" line=\"4\" column=\"22\"><Name>QualifierDescriptor<\/Name><USR>s:6Inject0A5ErrorO19QualifierDescriptora<\/USR><Declaration>public typealias Inject.InjectError.QualifierDescriptor = String<\/Declaration><CommentParts><Abstract><Para>A descriptor for the dependencies qualifiers<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "QualifierDescriptor",
            "key.doc.type" : "Other",
            "key.doclength" : 49,
            "key.docoffset" : 85,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.enum usr=\"s:6Inject0A5ErrorO\">InjectError<\/ref.enum>.<decl.name>QualifierDescriptor<\/decl.name> = <ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 38,
            "key.line" : 4,
            "key.modulename" : "Inject",
            "key.name" : "QualifierDescriptor",
            "key.namelength" : 19,
            "key.nameoffset" : 155,
            "key.offset" : 145,
            "key.parsed_declaration" : "public typealias QualifierDescriptor = String",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.reusingastcontext" : false,
            "key.typename" : "String.Type",
            "key.typeusr" : "$sSSmD",
            "key.usr" : "s:6Inject0A5ErrorO19QualifierDescriptora"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 105,
            "key.offset" : 237,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case notFound(_: any <Type usr=\"s:s8SendableP\">Sendable<\/Type>, qualifiers: [<Type usr=\"s:6Inject0A5ErrorO19QualifierDescriptora\">QualifierDescriptor<\/Type>]?, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>?)<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.doc_comment" : "When no dependency has been registered.",
                "key.doc.column" : 10,
                "key.doc.comment" : "When no dependency has been registered.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift\" line=\"7\" column=\"10\"><Name>notFound(_:qualifiers:group:)<\/Name><USR>s:6Inject0A5ErrorO8notFoundyACs8Sendable_p_SaySSGSgSSSgtcACmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>When no dependency has been registered.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 7,
                "key.doc.name" : "notFound(_:qualifiers:group:)",
                "key.doc.type" : "Other",
                "key.doclength" : 44,
                "key.docoffset" : 189,
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>notFound<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>any<\/syntaxtype.keyword> <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>qualifiers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:6Inject0A5ErrorO19QualifierDescriptora\">QualifierDescriptor<\/ref.typealias>]?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 100,
                "key.line" : 7,
                "key.modulename" : "Inject",
                "key.name" : "notFound(_:qualifiers:group:)",
                "key.namelength" : 100,
                "key.nameoffset" : 242,
                "key.offset" : 242,
                "key.parsed_declaration" : "case notFound(_ dependency: any Sendable, qualifiers: [QualifierDescriptor]?, group: DependencyGroupKey?)",
                "key.parsed_scope.end" : 7,
                "key.parsed_scope.start" : 7,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A5ErrorO8notFound_10qualifiers5groupACs8Sendable_p_SaySo8ProtocolCGSgSSSgtFZ\">notFound(_: any Sendable, qualifiers: [Qualifier]?, group: DependencyGroupKey?) -&gt; InjectError<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(InjectError.Type) -> (any Sendable, [String]?, String?) -> InjectError",
                "key.typeusr" : "$sy6Inject0A5ErrorOs8Sendable_p_SaySSGSgSSSgtcACmcD",
                "key.usr" : "s:6Inject0A5ErrorO8notFoundyACs8Sendable_p_SaySSGSgSSSgtcACmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 108,
            "key.offset" : 397,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case moreThanOne(_: any <Type usr=\"s:s8SendableP\">Sendable<\/Type>, qualifiers: [<Type usr=\"s:6Inject0A5ErrorO19QualifierDescriptora\">QualifierDescriptor<\/Type>]?, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>?)<\/Declaration>",
                "key.column" : 10,
                "key.decl_lang" : "source.lang.swift",
                "key.doc_comment" : "When more than one dependency registered.",
                "key.doc.column" : 10,
                "key.doc.comment" : "When more than one dependency registered.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift\" line=\"9\" column=\"10\"><Name>moreThanOne(_:qualifiers:group:)<\/Name><USR>s:6Inject0A5ErrorO11moreThanOneyACs8Sendable_p_SaySSGSgSSSgtcACmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>When more than one dependency registered.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 9,
                "key.doc.name" : "moreThanOne(_:qualifiers:group:)",
                "key.doc.type" : "Other",
                "key.doclength" : 46,
                "key.docoffset" : 347,
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>moreThanOne<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>any<\/syntaxtype.keyword> <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>qualifiers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:6Inject0A5ErrorO19QualifierDescriptora\">QualifierDescriptor<\/ref.typealias>]?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 103,
                "key.line" : 9,
                "key.modulename" : "Inject",
                "key.name" : "moreThanOne(_:qualifiers:group:)",
                "key.namelength" : 103,
                "key.nameoffset" : 402,
                "key.offset" : 402,
                "key.parsed_declaration" : "case moreThanOne(_ dependency: any Sendable, qualifiers: [QualifierDescriptor]?, group: DependencyGroupKey?)",
                "key.parsed_scope.end" : 9,
                "key.parsed_scope.start" : 9,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A5ErrorO11moreThanOne_10qualifiers5groupACs8Sendable_p_SaySo8ProtocolCGSgSSSgtFZ\">moreThanOne(_: any Sendable, qualifiers: [Qualifier]?, group: DependencyGroupKey?) -&gt; InjectError<\/RelatedName>"
                  }
                ],
                "key.reusingastcontext" : false,
                "key.substructure" : [

                ],
                "key.typename" : "(InjectError.Type) -> (any Sendable, [String]?, String?) -> InjectError",
                "key.typeusr" : "$sy6Inject0A5ErrorOs8Sendable_p_SaySSGSgSSSgtcACmcD",
                "key.usr" : "s:6Inject0A5ErrorO11moreThanOneyACs8Sendable_p_SaySSGSgSSSgtcACmF"
              }
            ]
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 511
              }
            ],
            "key.bodylength" : 693,
            "key.bodyoffset" : 543,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "A textual representation of this instance.\n\nCalling this property directly is discouraged. Instead, convert an\ninstance of any type to a string by using the `String(describing:)`\ninitializer. This initializer works with any type, and uses the custom\n`description` property for types that conform to\n`CustomStringConvertible`:\n\n    struct Point: CustomStringConvertible {\n        let x: Int, y: Int\n\n        var description: String {\n            return \"(\\(x), \\(y))\"\n        }\n    }\n\n    let p = Point(x: 21, y: 30)\n    let s = String(describing: p)\n    print(s)\n    \/\/ Prints \"(21, 30)\"\n\nThe conversion of `p` to a string in the assignment to `s` uses the\n`Point` type's `description` property.",
            "key.doc.declaration" : "var description: String { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The conversion of `p` to a string in the assignment to `s` uses the `Point` type’s `description` property."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>description<\/Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp<\/USR><Declaration>var description: String { get }<\/Declaration><CommentParts><Abstract><Para>A textual representation of this instance.<\/Para><\/Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)<\/codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description<\/codeVoice> property for types that conform to <codeVoice>CustomStringConvertible<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(21, 30)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The conversion of <codeVoice>p<\/codeVoice> to a string in the assignment to <codeVoice>s<\/codeVoice> uses the <codeVoice>Point<\/codeVoice> type’s <codeVoice>description<\/codeVoice> property.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 719,
            "key.line" : 11,
            "key.modulename" : "Inject",
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 522,
            "key.offset" : 518,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var description: String",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 11,
            "key.reusingastcontext" : false,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static func notFound(_ dependency: any <Type usr=\"s:s8SendableP\">Sendable<\/Type>, qualifiers: [<Type usr=\"s:6Inject9Qualifiera\">Qualifier<\/Type>]?, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>?) -&gt; <Type usr=\"s:6Inject0A5ErrorO\">InjectError<\/Type><\/Declaration>",
            "key.bodylength" : 132,
            "key.bodyoffset" : 1392,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>notFound<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dependency<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>any<\/syntaxtype.keyword> <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>qualifiers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:6Inject9Qualifiera\">Qualifier<\/ref.typealias>]?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:6Inject0A5ErrorO\">InjectError<\/ref.enum><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 282,
            "key.line" : 28,
            "key.modulename" : "Inject",
            "key.name" : "notFound(_:qualifiers:group:)",
            "key.namelength" : 120,
            "key.nameoffset" : 1255,
            "key.offset" : 1243,
            "key.parsed_declaration" : "static func notFound(\n    _ dependency: any Sendable,\n    qualifiers: [Qualifier]?,\n    group: DependencyGroupKey?\n) -> InjectError",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 28,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A5ErrorO8notFoundyACs8Sendable_p_SaySSGSgSSSgtcACmF\">notFound(_:qualifiers:group:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(InjectError.Type) -> (any Sendable, [Protocol]?, String?) -> InjectError",
            "key.typeusr" : "$s_10qualifiers5group6Inject0C5ErrorOs8Sendable_p_SaySo8ProtocolCGSgSSSgtcD",
            "key.usr" : "s:6Inject0A5ErrorO8notFound_10qualifiers5groupACs8Sendable_p_SaySo8ProtocolCGSgSSSgtFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static func moreThanOne(_ dependency: any <Type usr=\"s:s8SendableP\">Sendable<\/Type>, qualifiers: [<Type usr=\"s:6Inject9Qualifiera\">Qualifier<\/Type>]?, group: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>?) -&gt; <Type usr=\"s:6Inject0A5ErrorO\">InjectError<\/Type><\/Declaration>",
            "key.bodylength" : 135,
            "key.bodyoffset" : 1683,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectError.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>moreThanOne<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dependency<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>any<\/syntaxtype.keyword> <ref.protocol usr=\"s:s8SendableP\">Sendable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>qualifiers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:6Inject9Qualifiera\">Qualifier<\/ref.typealias>]?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>group<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:6Inject0A5ErrorO\">InjectError<\/ref.enum><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 288,
            "key.line" : 40,
            "key.modulename" : "Inject",
            "key.name" : "moreThanOne(_:qualifiers:group:)",
            "key.namelength" : 123,
            "key.nameoffset" : 1543,
            "key.offset" : 1531,
            "key.parsed_declaration" : "static func moreThanOne(\n    _ dependency: any Sendable,\n    qualifiers: [Qualifier]?,\n    group: DependencyGroupKey?\n) -> InjectError",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 40,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:6Inject0A5ErrorO11moreThanOneyACs8Sendable_p_SaySSGSgSSSgtcACmF\">moreThanOne(_:qualifiers:group:)<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(InjectError.Type) -> (any Sendable, [Protocol]?, String?) -> InjectError",
            "key.typeusr" : "$s_10qualifiers5group6Inject0C5ErrorOs8Sendable_p_SaySo8ProtocolCGSgSSSgtcD",
            "key.usr" : "s:6Inject0A5ErrorO11moreThanOne_10qualifiers5groupACs8Sendable_p_SaySo8ProtocolCGSgSSSgtFZ"
          }
        ],
        "key.typename" : "InjectError.Type",
        "key.typeusr" : "$s6Inject0A5ErrorOmD",
        "key.usr" : "s:6Inject0A5ErrorO"
      }
    ]
  }
}, {
  "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1441,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.open",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open class InjectStorage : <Type usr=\"s:7Storage09DelegatedA0C\">DelegatedStorage<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.open",
            "key.length" : 4,
            "key.offset" : 101
          }
        ],
        "key.bodylength" : 1294,
        "key.bodyoffset" : 145,
        "key.column" : 12,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "`InjectStorage` subclass of `DelegatedStorage` that uses a `[AnyHashable: Any]`.",
        "key.doc.column" : 12,
        "key.doc.comment" : "`InjectStorage` subclass of `DelegatedStorage` that uses a `[AnyHashable: Any]`.",
        "key.doc.declaration" : "@Storage.StorageActor open class InjectStorage : DelegatedStorage",
        "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift\" line=\"4\" column=\"12\"><Name>InjectStorage<\/Name><USR>s:6Inject0A7StorageC<\/USR><Declaration>@Storage.StorageActor open class InjectStorage : DelegatedStorage<\/Declaration><CommentParts><Abstract><Para><codeVoice>InjectStorage<\/codeVoice> subclass of <codeVoice>DelegatedStorage<\/codeVoice> that uses a <codeVoice>[AnyHashable: Any]<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 4,
        "key.doc.name" : "InjectStorage",
        "key.doc.type" : "Class",
        "key.doclength" : 85,
        "key.docoffset" : 16,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 127
          }
        ],
        "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>InjectStorage<\/decl.name> : <ref.class usr=\"s:7Storage09DelegatedA0C\">DelegatedStorage<\/ref.class><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "DelegatedStorage"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1334,
        "key.line" : 4,
        "key.modulename" : "Inject",
        "key.name" : "InjectStorage",
        "key.namelength" : 13,
        "key.nameoffset" : 112,
        "key.offset" : 106,
        "key.parsed_declaration" : "open class InjectStorage: DelegatedStorage",
        "key.parsed_scope.end" : 43,
        "key.parsed_scope.start" : 4,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> open class var standard: <Type usr=\"s:6Inject0A7StorageC\">InjectStorage<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 191
              }
            ],
            "key.bodylength" : 8,
            "key.bodyoffset" : 231,
            "key.column" : 20,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "`InjectStorage` shared instance.",
            "key.doc.column" : 20,
            "key.doc.comment" : "`InjectStorage` shared instance.",
            "key.doc.declaration" : "@Storage.StorageActor open class var standard: InjectStorage { get }",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift\" line=\"6\" column=\"20\"><Name>standard<\/Name><USR>s:6Inject0A7StorageC8standardACvpZ<\/USR><Declaration>@Storage.StorageActor open class var standard: InjectStorage { get }<\/Declaration><CommentParts><Abstract><Para><codeVoice>InjectStorage<\/codeVoice> shared instance.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 6,
            "key.doc.name" : "standard",
            "key.doc.type" : "Other",
            "key.doclength" : 37,
            "key.docoffset" : 150,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.fully_annotated_decl" : "<decl.var.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>standard<\/decl.name>: <decl.var.type><ref.class usr=\"s:6Inject0A7StorageC\">InjectStorage<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.class>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.class",
            "key.length" : 44,
            "key.line" : 6,
            "key.modulename" : "Inject",
            "key.name" : "standard",
            "key.namelength" : 8,
            "key.nameoffset" : 206,
            "key.offset" : 196,
            "key.parsed_declaration" : "open class var standard: InjectStorage",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A7StorageC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "InjectStorage",
            "key.typeusr" : "$s6Inject0A7StorageCD",
            "key.usr" : "s:6Inject0A7StorageC8standardACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> private static let shared: <Type usr=\"s:6Inject0A7StorageC\">InjectStorage<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 245
              }
            ],
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>shared<\/decl.name>: <decl.var.type><ref.class usr=\"s:6Inject0A7StorageC\">InjectStorage<\/ref.class><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 35,
            "key.line" : 7,
            "key.modulename" : "Inject",
            "key.name" : "shared",
            "key.namelength" : 6,
            "key.nameoffset" : 264,
            "key.offset" : 253,
            "key.parsed_declaration" : "private static let shared = InjectStorage()",
            "key.parsed_scope.end" : 7,
            "key.parsed_scope.start" : 7,
            "key.reusingastcontext" : false,
            "key.typename" : "InjectStorage",
            "key.typeusr" : "$s6Inject0A7StorageCD",
            "key.usr" : "s:6Inject0A7StorageC6shared33_60A6C3811F32DE59D27A36226954C120LLACvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> var groups: [<Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type> : <Type usr=\"s:6Inject0A7StorageC\">InjectStorage<\/Type>]<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>groups<\/decl.name>: <decl.var.type>[<ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias> : <ref.class usr=\"s:6Inject0A7StorageC\">InjectStorage<\/ref.class>]<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.line" : 8,
            "key.modulename" : "Inject",
            "key.name" : "groups",
            "key.namelength" : 6,
            "key.nameoffset" : 297,
            "key.offset" : 293,
            "key.parsed_declaration" : "var groups = [DependencyGroupKey: InjectStorage]()",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A7StorageC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "[String : InjectStorage]",
            "key.typeusr" : "$sSDySS6Inject0A7StorageCGD",
            "key.usr" : "s:6Inject0A7StorageC6groupsSDySSACGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> var storage: [<Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type> : [Any]]<\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type>[<ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias> : [<syntaxtype.keyword>Any<\/syntaxtype.keyword>]]<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.line" : 9,
            "key.modulename" : "Inject",
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 352,
            "key.offset" : 348,
            "key.parsed_declaration" : "var storage = [StoreKey: [Any]]()",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A7StorageC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "[String : [Any]]",
            "key.typeusr" : "$sSDySSSayypGGD",
            "key.usr" : "s:6Inject0A7StorageC7storageSDySSSayypGGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> override open func array(forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>) -&gt; [Any]?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 543
              },
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 534
              }
            ],
            "key.bodylength" : 20,
            "key.bodyoffset" : 592,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Returns the `[Any]` of dependencies associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.\n",
            "key.doc.column" : 24,
            "key.doc.comment" : "Returns the `[Any]` of dependencies associated with the specified `StoreKey`.\n\n- Parameter key: A `StoreKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor override open func array(forKey key: StoreKey) -> [Any]?",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift\" line=\"16\" column=\"24\"><Name>array(forKey:)<\/Name><USR>s:6Inject0A7StorageC5array6forKeySayypGSgSS_tF<\/USR><Declaration>@Storage.StorageActor override open func array(forKey key: StoreKey) -&gt; [Any]?<\/Declaration><CommentParts><Abstract><Para>Returns the <codeVoice>[Any]<\/codeVoice> of dependencies associated with the specified <codeVoice>StoreKey<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>StoreKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 16,
            "key.doc.name" : "array(forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `StoreKey` in storage."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 142,
            "key.docoffset" : 387,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>array<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<syntaxtype.keyword>Any<\/syntaxtype.keyword>]?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 65,
            "key.line" : 16,
            "key.modulename" : "Inject",
            "key.name" : "array(forKey:)",
            "key.namelength" : 27,
            "key.nameoffset" : 553,
            "key.offset" : 548,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C5array6forKeySayypGSgSS_tF"
              },
              {
                "key.usr" : "s:7StorageAAP5array6forKeySayypGSgSS_tF"
              }
            ],
            "key.parsed_declaration" : "override open func array(forKey key: StoreKey) -> [Any]?",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A7StorageC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(InjectStorage) -> (String) -> [Any]?",
            "key.typeusr" : "$s6forKeySayypGSgSS_tcD",
            "key.usr" : "s:6Inject0A7StorageC5array6forKeySayypGSgSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.open",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> override open func set(object: Any?, forKey key: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.open",
                "key.length" : 4,
                "key.offset" : 628
              },
              {
                "key.attribute" : "source.decl.attribute.override",
                "key.length" : 8,
                "key.offset" : 619
              }
            ],
            "key.bodylength" : 235,
            "key.bodyoffset" : 679,
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Sets the value of the specified `StoreKey` to the specified `NSCoding` conforming object.\n\n- Parameter value: `NSCoding` conforming object.\n- Parameter key: The `StoreKey` with which to associate the value.\n",
            "key.doc.column" : 24,
            "key.doc.declaration" : "@Storage.StorageActor override open func set(object: Any?, forKey key: StoreKey)",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift\" line=\"18\" column=\"24\"><Name>set(object:forKey:)<\/Name><USR>s:6Inject0A7StorageC3set6object6forKeyyypSg_SStF<\/USR><Declaration>@Storage.StorageActor override open func set(object: Any?, forKey key: StoreKey)<\/Declaration><CommentParts><Abstract><Para>Sets the value of the specified <codeVoice>StoreKey<\/codeVoice> to the specified <codeVoice>NSCoding<\/codeVoice> conforming object.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>NSCoding<\/codeVoice> conforming object.<\/Para><\/Discussion><\/Parameter><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>StoreKey<\/codeVoice> with which to associate the value.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>DelegatedStorage<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 18,
            "key.doc.name" : "set(object:forKey:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`NSCoding` conforming object."
                  }
                ],
                "name" : "value"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `StoreKey` with which to associate the value."
                  }
                ],
                "name" : "key"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>open<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>set<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>object<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>forKey<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 282,
            "key.line" : 18,
            "key.modulename" : "Inject",
            "key.name" : "set(object:forKey:)",
            "key.namelength" : 39,
            "key.nameoffset" : 638,
            "key.offset" : 633,
            "key.overrides" : [
              {
                "key.usr" : "s:7Storage09DelegatedA0C3set6object6forKeyyypSg_SStKF"
              }
            ],
            "key.parsed_declaration" : "override open func set(object: Any?, forKey key: StoreKey)",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 18,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A7StorageC"
              }
            ],
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set6forKeyShys11AnyHashableVGSgSS_tF\">set(forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySi_SStF\">set(_: Int, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySf_SStF\">set(_: Float, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySd_SStF\">set(_: Double, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySb_SStF\">set(_: Bool, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyy10Foundation3URLVSg_SStF\">set(_: URL?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyySS_SStF\">set(_: String, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStlF\">set(_: (some Any)?, forKey: StoreKey)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set9encodable6forKeyySE_pSg_SStF\">set(encodable:forKey:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:7Storage09DelegatedA0C3set_6forKeyyxSg_SStKAA0A4DataRzlF\">set(_: (some StorageData)?, forKey: StoreKey) throws<\/RelatedName>"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let storeKey: <Type usr=\"s:7Storage8StoreKeya\">StoreKey<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>storeKey<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:7Storage8StoreKeya\">StoreKey<\/ref.typealias><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.line" : 19,
                "key.modulename" : "Inject",
                "key.name" : "storeKey",
                "key.namelength" : 8,
                "key.nameoffset" : 692,
                "key.offset" : 688,
                "key.parsed_declaration" : "let storeKey = hash(key)",
                "key.parsed_scope.end" : 19,
                "key.parsed_scope.start" : 19,
                "key.reusingastcontext" : false,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:6Inject0A7StorageC3set6object6forKeyyypSg_SStF05storeF0L_SSvp"
              }
            ],
            "key.typename" : "(InjectStorage) -> (Any?, String) -> ()",
            "key.typeusr" : "$s6object6forKeyyypSg_SStcD",
            "key.usr" : "s:6Inject0A7StorageC3set6object6forKeyyypSg_SStF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7Storage0A5ActorC\">StorageActor<\/Type> public func storageForGroup(_ groupKey: <Type usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/Type>) -&gt; <Type usr=\"s:6Inject0A7StorageC\">InjectStorage<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1098
              },
              {
                "key.attribute" : "source.decl.attribute._custom",
                "key.length" : 13,
                "key.offset" : 1080
              }
            ],
            "key.bodylength" : 261,
            "key.bodyoffset" : 1176,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Ensure it's explicitly on the same actor, though implied by class context.\n\n- Parameter groupKey: A `DependencyGroupKey` in storage.\n",
            "key.doc.column" : 17,
            "key.doc.comment" : "Ensure it's explicitly on the same actor, though implied by class context.\n\n- Parameter groupKey: A `DependencyGroupKey` in storage.",
            "key.doc.declaration" : "@Storage.StorageActor public func storageForGroup(_ groupKey: DependencyGroupKey) -> InjectStorage",
            "key.doc.file" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift\" line=\"34\" column=\"17\"><Name>storageForGroup(_:)<\/Name><USR>s:6Inject0A7StorageC15storageForGroupyACSSF<\/USR><Declaration>@Storage.StorageActor public func storageForGroup(_ groupKey: DependencyGroupKey) -&gt; InjectStorage<\/Declaration><CommentParts><Abstract><Para>Ensure it’s explicitly on the same actor, though implied by class context.<\/Para><\/Abstract><Parameters><Parameter><Name>groupKey<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A <codeVoice>DependencyGroupKey<\/codeVoice> in storage.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 34,
            "key.doc.name" : "storageForGroup(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A `DependencyGroupKey` in storage."
                  }
                ],
                "name" : "groupKey"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 154,
            "key.docoffset" : 921,
            "key.filepath" : "\/Users\/vagrant\/git\/Sources\/Inject\/InjectStorage.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:7Storage0A5ActorC\">StorageActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>storageForGroup<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>groupKey<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:6Inject18DependencyGroupKeya\">DependencyGroupKey<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:6Inject0A7StorageC\">InjectStorage<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 333,
            "key.line" : 34,
            "key.modulename" : "Inject",
            "key.name" : "storageForGroup(_:)",
            "key.namelength" : 47,
            "key.nameoffset" : 1110,
            "key.offset" : 1105,
            "key.parsed_declaration" : "public func storageForGroup(_ groupKey: DependencyGroupKey) -> InjectStorage",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 34,
            "key.receivers" : [
              {
                "key.usr" : "s:6Inject0A7StorageC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(InjectStorage) -> (String) -> InjectStorage",
            "key.typeusr" : "$sy6Inject0A7StorageCSScD",
            "key.usr" : "s:6Inject0A7StorageC15storageForGroupyACSSF"
          }
        ],
        "key.typename" : "InjectStorage.Type",
        "key.typeusr" : "$s6Inject0A7StorageCmD",
        "key.usr" : "s:6Inject0A7StorageC"
      }
    ]
  }
}]
